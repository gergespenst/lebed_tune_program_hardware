
lebed_sel_tune.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000264  00800100  0000346e  00003522  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000346e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001f0  00800364  00800364  00003786  2**0
                  ALLOC
  3 .eeprom       00000062  00810000  00810000  00003786  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  000037e8  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000588  00000000  00000000  00003818  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000086c8  00000000  00000000  00003da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000016ef  00000000  00000000  0000c468  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003a0a  00000000  00000000  0000db57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001180  00000000  00000000  00011564  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001f5d  00000000  00000000  000126e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000057e9  00000000  00000000  00014641  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000718  00000000  00000000  00019e2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	66 c0       	rjmp	.+204    	; 0xce <_StackPaint>
       2:	00 00       	nop
       4:	aa c0       	rjmp	.+340    	; 0x15a <__bad_interrupt>
       6:	00 00       	nop
       8:	a8 c0       	rjmp	.+336    	; 0x15a <__bad_interrupt>
       a:	00 00       	nop
       c:	a6 c0       	rjmp	.+332    	; 0x15a <__bad_interrupt>
       e:	00 00       	nop
      10:	a4 c0       	rjmp	.+328    	; 0x15a <__bad_interrupt>
      12:	00 00       	nop
      14:	a2 c0       	rjmp	.+324    	; 0x15a <__bad_interrupt>
      16:	00 00       	nop
      18:	a0 c0       	rjmp	.+320    	; 0x15a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9e c0       	rjmp	.+316    	; 0x15a <__bad_interrupt>
      1e:	00 00       	nop
      20:	9c c0       	rjmp	.+312    	; 0x15a <__bad_interrupt>
      22:	00 00       	nop
      24:	9a c0       	rjmp	.+308    	; 0x15a <__bad_interrupt>
      26:	00 00       	nop
      28:	98 c0       	rjmp	.+304    	; 0x15a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	96 c0       	rjmp	.+300    	; 0x15a <__bad_interrupt>
      2e:	00 00       	nop
      30:	94 c0       	rjmp	.+296    	; 0x15a <__bad_interrupt>
      32:	00 00       	nop
      34:	92 c0       	rjmp	.+292    	; 0x15a <__bad_interrupt>
      36:	00 00       	nop
      38:	90 c0       	rjmp	.+288    	; 0x15a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8e c0       	rjmp	.+284    	; 0x15a <__bad_interrupt>
      3e:	00 00       	nop
      40:	8c c0       	rjmp	.+280    	; 0x15a <__bad_interrupt>
      42:	00 00       	nop
      44:	8a c0       	rjmp	.+276    	; 0x15a <__bad_interrupt>
      46:	00 00       	nop
      48:	88 c0       	rjmp	.+272    	; 0x15a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	86 c0       	rjmp	.+268    	; 0x15a <__bad_interrupt>
      4e:	00 00       	nop
      50:	84 c0       	rjmp	.+264    	; 0x15a <__bad_interrupt>
      52:	00 00       	nop
      54:	82 c0       	rjmp	.+260    	; 0x15a <__bad_interrupt>
      56:	00 00       	nop
      58:	80 c0       	rjmp	.+256    	; 0x15a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7e c0       	rjmp	.+252    	; 0x15a <__bad_interrupt>
      5e:	00 00       	nop
      60:	7c c0       	rjmp	.+248    	; 0x15a <__bad_interrupt>
      62:	00 00       	nop
      64:	7a c0       	rjmp	.+244    	; 0x15a <__bad_interrupt>
      66:	00 00       	nop
      68:	78 c0       	rjmp	.+240    	; 0x15a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	76 c0       	rjmp	.+236    	; 0x15a <__bad_interrupt>
      6e:	00 00       	nop
      70:	74 c0       	rjmp	.+232    	; 0x15a <__bad_interrupt>
      72:	00 00       	nop
      74:	72 c0       	rjmp	.+228    	; 0x15a <__bad_interrupt>
      76:	00 00       	nop
      78:	0c 94 5b 11 	jmp	0x22b6	; 0x22b6 <__vector_30>
      7c:	6e c0       	rjmp	.+220    	; 0x15a <__bad_interrupt>
      7e:	00 00       	nop
      80:	6c c0       	rjmp	.+216    	; 0x15a <__bad_interrupt>
      82:	00 00       	nop
      84:	6a c0       	rjmp	.+212    	; 0x15a <__bad_interrupt>
      86:	00 00       	nop
      88:	68 c0       	rjmp	.+208    	; 0x15a <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	cb 13       	cpse	r28, r27
      8e:	da 13       	cpse	r29, r26
      90:	1e 12       	cpse	r1, r30
      92:	30 11       	cpse	r19, r0
      94:	91 10       	cpse	r9, r1
      96:	35 17       	cp	r19, r21
      98:	24 12       	cpse	r2, r20
      9a:	5f 12       	cpse	r5, r31
      9c:	93 10       	cpse	r9, r3
      9e:	97 10       	cpse	r9, r7
      a0:	eb 12       	cpse	r14, r27
      a2:	54 11       	cpse	r21, r4
      a4:	12 15       	cp	r17, r2
      a6:	e2 10       	cpse	r14, r2
      a8:	b8 10       	cpse	r11, r8
      aa:	85 14       	cp	r8, r5

000000ac <_ZL18g_comandLengthList>:
      ac:	07 07 0c 02 01 01 07 13 00 00 02 00 00 00 00 07     ................

000000bc <_ZL12g_comandList>:
      bc:	80 46 85 84 86 87 90 91 92 81 95 96 97 ff 98 99     .F..............

000000cc <__ctors_start>:
      cc:	42 17       	cp	r20, r18

000000ce <_StackPaint>:
 *  the maximum stack usage of the running application.
 */
void _StackPaint(void) __attribute__((naked)) __attribute__((optimize("O3"))) __attribute__((section (".init1")));
void _StackPaint(void)
{
	uint32_t* fill_start = (uint32_t*)__ALIGN32_UPWARDS(&_end);
      ce:	e4 e5       	ldi	r30, 0x54	; 84
      d0:	f5 e0       	ldi	r31, 0x05	; 5
      d2:	e3 70       	andi	r30, 0x03	; 3
      d4:	ff 27       	eor	r31, r31
      d6:	ec 5a       	subi	r30, 0xAC	; 172
      d8:	fa 4f       	sbci	r31, 0xFA	; 250
	uint32_t* fill_end   = (uint32_t*)__ALIGN32_DOWNWARDS(&__stack);
      da:	2f ef       	ldi	r18, 0xFF	; 255
      dc:	30 e1       	ldi	r19, 0x10	; 16
      de:	2c 7f       	andi	r18, 0xFC	; 252
	
	for (uint32_t* fill_pos = fill_start; fill_pos < fill_end; fill_pos++)
      e0:	e2 17       	cp	r30, r18
      e2:	f3 07       	cpc	r31, r19
      e4:	58 f4       	brcc	.+22     	; 0xfc <_StackPaint+0x2e>
		*fill_pos = __SWAP_ENDIAN32(0xDEADBEEF);
      e6:	8e ed       	ldi	r24, 0xDE	; 222
      e8:	9d ea       	ldi	r25, 0xAD	; 173
      ea:	ae eb       	ldi	r26, 0xBE	; 190
      ec:	bf ee       	ldi	r27, 0xEF	; 239
      ee:	81 93       	st	Z+, r24
      f0:	91 93       	st	Z+, r25
      f2:	a1 93       	st	Z+, r26
      f4:	b1 93       	st	Z+, r27
void _StackPaint(void)
{
	uint32_t* fill_start = (uint32_t*)__ALIGN32_UPWARDS(&_end);
	uint32_t* fill_end   = (uint32_t*)__ALIGN32_DOWNWARDS(&__stack);
	
	for (uint32_t* fill_pos = fill_start; fill_pos < fill_end; fill_pos++)
      f6:	e2 17       	cp	r30, r18
      f8:	f3 07       	cpc	r31, r19
      fa:	c8 f3       	brcs	.-14     	; 0xee <_StackPaint+0x20>
      fc:	11 24       	eor	r1, r1
      fe:	1f be       	out	0x3f, r1	; 63
     100:	cf ef       	ldi	r28, 0xFF	; 255
     102:	d0 e1       	ldi	r29, 0x10	; 16
     104:	de bf       	out	0x3e, r29	; 62
     106:	cd bf       	out	0x3d, r28	; 61

00000108 <__do_copy_data>:
     108:	13 e0       	ldi	r17, 0x03	; 3
     10a:	a0 e0       	ldi	r26, 0x00	; 0
     10c:	b1 e0       	ldi	r27, 0x01	; 1
     10e:	ee e6       	ldi	r30, 0x6E	; 110
     110:	f4 e3       	ldi	r31, 0x34	; 52
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	0b bf       	out	0x3b, r16	; 59
     116:	02 c0       	rjmp	.+4      	; 0x11c <__do_copy_data+0x14>
     118:	07 90       	elpm	r0, Z+
     11a:	0d 92       	st	X+, r0
     11c:	a4 36       	cpi	r26, 0x64	; 100
     11e:	b1 07       	cpc	r27, r17
     120:	d9 f7       	brne	.-10     	; 0x118 <__do_copy_data+0x10>

00000122 <__do_clear_bss>:
     122:	25 e0       	ldi	r18, 0x05	; 5
     124:	a4 e6       	ldi	r26, 0x64	; 100
     126:	b3 e0       	ldi	r27, 0x03	; 3
     128:	01 c0       	rjmp	.+2      	; 0x12c <.do_clear_bss_start>

0000012a <.do_clear_bss_loop>:
     12a:	1d 92       	st	X+, r1

0000012c <.do_clear_bss_start>:
     12c:	a4 35       	cpi	r26, 0x54	; 84
     12e:	b2 07       	cpc	r27, r18
     130:	e1 f7       	brne	.-8      	; 0x12a <.do_clear_bss_loop>

00000132 <__do_global_ctors>:
     132:	10 e0       	ldi	r17, 0x00	; 0
     134:	ce ec       	ldi	r28, 0xCE	; 206
     136:	d0 e0       	ldi	r29, 0x00	; 0
     138:	00 e0       	ldi	r16, 0x00	; 0
     13a:	06 c0       	rjmp	.+12     	; 0x148 <__do_global_ctors+0x16>
     13c:	22 97       	sbiw	r28, 0x02	; 2
     13e:	01 09       	sbc	r16, r1
     140:	fe 01       	movw	r30, r28
     142:	0b bf       	out	0x3b, r16	; 59
     144:	0e 94 e3 19 	call	0x33c6	; 0x33c6 <__tablejump_elpm__>
     148:	cc 3c       	cpi	r28, 0xCC	; 204
     14a:	d1 07       	cpc	r29, r17
     14c:	80 e0       	ldi	r24, 0x00	; 0
     14e:	08 07       	cpc	r16, r24
     150:	a9 f7       	brne	.-22     	; 0x13c <__do_global_ctors+0xa>
     152:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <main>
     156:	0c 94 35 1a 	jmp	0x346a	; 0x346a <_exit>

0000015a <__bad_interrupt>:
     15a:	52 cf       	rjmp	.-348    	; 0x0 <__vectors>

0000015c <_Z8read_adch>:
{
// 	DDRB |= _BV(0);
// 	PORTB |= _BV(0);
	ADMUX = (1 << REFS1)|(1<< REFS0)|	//подключаем опорное к внутреннему источнику
	(1 << ADLAR)|				//левосторнний формат вывода битов
	(pin & 0x07);				//и утсанавливаем с какого пина читать
     15c:	87 70       	andi	r24, 0x07	; 7
     15e:	80 6e       	ori	r24, 0xE0	; 224
     160:	87 b9       	out	0x07, r24	; 7
			(1 << ADSC)|				//запускаем преобразование
			(0 << ADFR)|			//однократный запуск
			(0 << ADIF)|			//флаг прерывания
	
			(0 << ADIE)| //запрещаем прерывания от АЦП
			(1 << ADPS2)|(1 << ADPS1)|(0 << ADPS0);	//тактовая частота F_CPU/64 = 172.8 kHz
     162:	86 ec       	ldi	r24, 0xC6	; 198
     164:	86 b9       	out	0x06, r24	; 6
			
	while(ADCSRA & _BV(ADSC)){_delay_us(2);};			//ждем окончания преобразования
     166:	36 9b       	sbis	0x06, 6	; 6
     168:	05 c0       	rjmp	.+10     	; 0x174 <_Z8read_adch+0x18>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     16a:	87 e0       	ldi	r24, 0x07	; 7
     16c:	8a 95       	dec	r24
     16e:	f1 f7       	brne	.-4      	; 0x16c <_Z8read_adch+0x10>
     170:	00 c0       	rjmp	.+0      	; 0x172 <_Z8read_adch+0x16>
     172:	f9 cf       	rjmp	.-14     	; 0x166 <_Z8read_adch+0xa>
//	PORTB &= ~_BV(0);	
	return ADCH;
     174:	85 b1       	in	r24, 0x05	; 5
}
     176:	08 95       	ret

00000178 <_Z15read_steady_adch>:

char read_steady_adc(unsigned char pin){//определение уровня по окончании переходных процессов
     178:	1f 93       	push	r17
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	18 2f       	mov	r17, r24
	char adc_ampl[3]={0,1,2};
     180:	c0 e0       	ldi	r28, 0x00	; 0
     182:	d1 e0       	ldi	r29, 0x01	; 1
     184:	88 eb       	ldi	r24, 0xB8	; 184
     186:	8a 95       	dec	r24
     188:	f1 f7       	brne	.-4      	; 0x186 <_Z15read_steady_adch+0xe>
     18a:	00 00       	nop
	while( !((adc_ampl[0] == adc_ampl[1]) && (adc_ampl[1] == adc_ampl[2])) ){
	_delay_us(50)	;
	adc_ampl[2] = adc_ampl[1];
	adc_ampl[1] = adc_ampl[0];	
	adc_ampl[0] = read_adc(pin);
     18c:	81 2f       	mov	r24, r17
     18e:	e6 df       	rcall	.-52     	; 0x15c <_Z8read_adch>
	return ADCH;
}

char read_steady_adc(unsigned char pin){//определение уровня по окончании переходных процессов
	char adc_ampl[3]={0,1,2};
	while( !((adc_ampl[0] == adc_ampl[1]) && (adc_ampl[1] == adc_ampl[2])) ){
     190:	8c 17       	cp	r24, r28
     192:	19 f0       	breq	.+6      	; 0x19a <_Z15read_steady_adch+0x22>
	_delay_us(50)	;
	adc_ampl[2] = adc_ampl[1];
	adc_ampl[1] = adc_ampl[0];	
	adc_ampl[0] = read_adc(pin);
     194:	dc 2f       	mov	r29, r28
     196:	c8 2f       	mov	r28, r24
     198:	f5 cf       	rjmp	.-22     	; 0x184 <_Z15read_steady_adch+0xc>
	return ADCH;
}

char read_steady_adc(unsigned char pin){//определение уровня по окончании переходных процессов
	char adc_ampl[3]={0,1,2};
	while( !((adc_ampl[0] == adc_ampl[1]) && (adc_ampl[1] == adc_ampl[2])) ){
     19a:	cd 13       	cpse	r28, r29
     19c:	fb cf       	rjmp	.-10     	; 0x194 <_Z15read_steady_adch+0x1c>
	adc_ampl[2] = adc_ampl[1];
	adc_ampl[1] = adc_ampl[0];	
	adc_ampl[0] = read_adc(pin);
	}
	
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	1f 91       	pop	r17
     1a4:	08 95       	ret

000001a6 <_Z23Write_Adress_SPI_ALTERAj>:
 *  Author: USER
 */ 
 #include "altera.h"        
 //////////////////////////////////////////////////////////////////////////
  void Write_Adress_SPI_ALTERA(unsigned int ADRESS)
{
     1a6:	cf 93       	push	r28
     1a8:	df 93       	push	r29
     1aa:	cd b7       	in	r28, 0x3d	; 61
     1ac:	de b7       	in	r29, 0x3e	; 62
     1ae:	68 97       	sbiw	r28, 0x18	; 24
     1b0:	0f b6       	in	r0, 0x3f	; 63
     1b2:	f8 94       	cli
     1b4:	de bf       	out	0x3e, r29	; 62
     1b6:	0f be       	out	0x3f, r0	; 63
     1b8:	cd bf       	out	0x3d, r28	; 61
 unsigned char m;
 unsigned int tmp[12]={2048,1024,512,256,128, 64, 32, 16, 8, 4 ,2 ,1};  
     1ba:	28 e1       	ldi	r18, 0x18	; 24
     1bc:	ed e3       	ldi	r30, 0x3D	; 61
     1be:	f2 e0       	ldi	r31, 0x02	; 2
     1c0:	de 01       	movw	r26, r28
     1c2:	11 96       	adiw	r26, 0x01	; 1
     1c4:	01 90       	ld	r0, Z+
     1c6:	0d 92       	st	X+, r0
     1c8:	2a 95       	dec	r18
     1ca:	e1 f7       	brne	.-8      	; 0x1c4 <_Z23Write_Adress_SPI_ALTERAj+0x1e>
 
 SET_ALTERA_SCLK(0);
     1cc:	a8 98       	cbi	0x15, 0	; 21
     1ce:	24 e0       	ldi	r18, 0x04	; 4
     1d0:	2a 95       	dec	r18
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <_Z23Write_Adress_SPI_ALTERAj+0x2a>
     1d4:	fe 01       	movw	r30, r28
     1d6:	31 96       	adiw	r30, 0x01	; 1
     1d8:	ae 01       	movw	r20, r28
     1da:	47 5e       	subi	r20, 0xE7	; 231
     1dc:	5f 4f       	sbci	r21, 0xFF	; 255
 _delay_us(1); 
 for (m=0;m<12;m++)
 {   

 SET_ALTERA_SDI(((ADRESS&tmp[m])==tmp[m]));
     1de:	21 91       	ld	r18, Z+
     1e0:	31 91       	ld	r19, Z+
     1e2:	b9 01       	movw	r22, r18
     1e4:	68 23       	and	r22, r24
     1e6:	79 23       	and	r23, r25
     1e8:	62 17       	cp	r22, r18
     1ea:	73 07       	cpc	r23, r19
     1ec:	11 f0       	breq	.+4      	; 0x1f2 <_Z23Write_Adress_SPI_ALTERAj+0x4c>
     1ee:	a9 98       	cbi	0x15, 1	; 21
     1f0:	01 c0       	rjmp	.+2      	; 0x1f4 <_Z23Write_Adress_SPI_ALTERAj+0x4e>
     1f2:	a9 9a       	sbi	0x15, 1	; 21
 SET_ALTERA_SCLK(1);
     1f4:	a8 9a       	sbi	0x15, 0	; 21
     1f6:	2f e0       	ldi	r18, 0x0F	; 15
     1f8:	2a 95       	dec	r18
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <_Z23Write_Adress_SPI_ALTERAj+0x52>
 delay_us(4); //скважность около 2
  SET_ALTERA_SCLK(0);
     1fc:	a8 98       	cbi	0x15, 0	; 21
 unsigned char m;
 unsigned int tmp[12]={2048,1024,512,256,128, 64, 32, 16, 8, 4 ,2 ,1};  
 
 SET_ALTERA_SCLK(0);
 _delay_us(1); 
 for (m=0;m<12;m++)
     1fe:	e4 17       	cp	r30, r20
     200:	f5 07       	cpc	r31, r21
     202:	69 f7       	brne	.-38     	; 0x1de <_Z23Write_Adress_SPI_ALTERAj+0x38>
 SET_ALTERA_SCLK(1);
 delay_us(4); //скважность около 2
  SET_ALTERA_SCLK(0);
 } 
 
 SET_ALTERA_SDI(0);
     204:	a9 98       	cbi	0x15, 1	; 21
}    
     206:	68 96       	adiw	r28, 0x18	; 24
     208:	0f b6       	in	r0, 0x3f	; 63
     20a:	f8 94       	cli
     20c:	de bf       	out	0x3e, r29	; 62
     20e:	0f be       	out	0x3f, r0	; 63
     210:	cd bf       	out	0x3d, r28	; 61
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28
     216:	08 95       	ret

00000218 <_Z21Write_DATA_SPI_ALTERAh>:
//////////////////////////////////////////////////////////////////////////
  void Write_DATA_SPI_ALTERA(unsigned char DATA)
{
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	cd b7       	in	r28, 0x3d	; 61
     21e:	de b7       	in	r29, 0x3e	; 62
     220:	28 97       	sbiw	r28, 0x08	; 8
     222:	0f b6       	in	r0, 0x3f	; 63
     224:	f8 94       	cli
     226:	de bf       	out	0x3e, r29	; 62
     228:	0f be       	out	0x3f, r0	; 63
     22a:	cd bf       	out	0x3d, r28	; 61
 unsigned char m;
 unsigned char tmp[8]={128, 64, 32, 16, 8, 4 ,2 ,1};  
     22c:	98 e0       	ldi	r25, 0x08	; 8
     22e:	e5 e5       	ldi	r30, 0x55	; 85
     230:	f2 e0       	ldi	r31, 0x02	; 2
     232:	de 01       	movw	r26, r28
     234:	11 96       	adiw	r26, 0x01	; 1
     236:	01 90       	ld	r0, Z+
     238:	0d 92       	st	X+, r0
     23a:	9a 95       	dec	r25
     23c:	e1 f7       	brne	.-8      	; 0x236 <_Z21Write_DATA_SPI_ALTERAh+0x1e>
  SET_ALTERA_SCLK(0);
     23e:	a8 98       	cbi	0x15, 0	; 21
     240:	94 e0       	ldi	r25, 0x04	; 4
     242:	9a 95       	dec	r25
     244:	f1 f7       	brne	.-4      	; 0x242 <_Z21Write_DATA_SPI_ALTERAh+0x2a>
     246:	fe 01       	movw	r30, r28
     248:	31 96       	adiw	r30, 0x01	; 1
     24a:	9e 01       	movw	r18, r28
     24c:	27 5f       	subi	r18, 0xF7	; 247
     24e:	3f 4f       	sbci	r19, 0xFF	; 255
 delay_us(1);  
 for (m=0;m<8;m++)
 {   

 SET_ALTERA_SDI((DATA&tmp[m])==tmp[m]); 
     250:	91 91       	ld	r25, Z+
     252:	49 2f       	mov	r20, r25
     254:	48 23       	and	r20, r24
     256:	49 17       	cp	r20, r25
     258:	11 f0       	breq	.+4      	; 0x25e <_Z21Write_DATA_SPI_ALTERAh+0x46>
     25a:	a9 98       	cbi	0x15, 1	; 21
     25c:	01 c0       	rjmp	.+2      	; 0x260 <_Z21Write_DATA_SPI_ALTERAh+0x48>
     25e:	a9 9a       	sbi	0x15, 1	; 21
   SET_ALTERA_SCLK(1);
     260:	a8 9a       	sbi	0x15, 0	; 21
     262:	9f e0       	ldi	r25, 0x0F	; 15
     264:	9a 95       	dec	r25
     266:	f1 f7       	brne	.-4      	; 0x264 <_Z21Write_DATA_SPI_ALTERAh+0x4c>
 delay_us(4); //скважность около 2
   SET_ALTERA_SCLK(0); 
     268:	a8 98       	cbi	0x15, 0	; 21
{
 unsigned char m;
 unsigned char tmp[8]={128, 64, 32, 16, 8, 4 ,2 ,1};  
  SET_ALTERA_SCLK(0);
 delay_us(1);  
 for (m=0;m<8;m++)
     26a:	e2 17       	cp	r30, r18
     26c:	f3 07       	cpc	r31, r19
     26e:	81 f7       	brne	.-32     	; 0x250 <_Z21Write_DATA_SPI_ALTERAh+0x38>
 SET_ALTERA_SDI((DATA&tmp[m])==tmp[m]); 
   SET_ALTERA_SCLK(1);
 delay_us(4); //скважность около 2
   SET_ALTERA_SCLK(0); 
 } 
  SET_ALTERA_SDI(0);
     270:	a9 98       	cbi	0x15, 1	; 21
}  
     272:	28 96       	adiw	r28, 0x08	; 8
     274:	0f b6       	in	r0, 0x3f	; 63
     276:	f8 94       	cli
     278:	de bf       	out	0x3e, r29	; 62
     27a:	0f be       	out	0x3f, r0	; 63
     27c:	cd bf       	out	0x3d, r28	; 61
     27e:	df 91       	pop	r29
     280:	cf 91       	pop	r28
     282:	08 95       	ret

00000284 <_Z20Read_DATA_SPI_ALTERAv>:
//////////////////////////////////////////////////////////////////////////
  unsigned char Read_DATA_SPI_ALTERA()
{
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	cd b7       	in	r28, 0x3d	; 61
     28a:	de b7       	in	r29, 0x3e	; 62
     28c:	28 97       	sbiw	r28, 0x08	; 8
     28e:	0f b6       	in	r0, 0x3f	; 63
     290:	f8 94       	cli
     292:	de bf       	out	0x3e, r29	; 62
     294:	0f be       	out	0x3f, r0	; 63
     296:	cd bf       	out	0x3d, r28	; 61
 unsigned char m,b;
 unsigned char tmp[8]={128, 64, 32, 16, 8, 4 ,2 ,1};  
     298:	88 e0       	ldi	r24, 0x08	; 8
     29a:	e5 e5       	ldi	r30, 0x55	; 85
     29c:	f2 e0       	ldi	r31, 0x02	; 2
     29e:	de 01       	movw	r26, r28
     2a0:	11 96       	adiw	r26, 0x01	; 1
     2a2:	01 90       	ld	r0, Z+
     2a4:	0d 92       	st	X+, r0
     2a6:	8a 95       	dec	r24
     2a8:	e1 f7       	brne	.-8      	; 0x2a2 <_Z20Read_DATA_SPI_ALTERAv+0x1e>
     2aa:	fe 01       	movw	r30, r28
     2ac:	31 96       	adiw	r30, 0x01	; 1
     2ae:	9e 01       	movw	r18, r28
     2b0:	27 5f       	subi	r18, 0xF7	; 247
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
 
 b=0;
     2b4:	80 e0       	ldi	r24, 0x00	; 0
 for (m=0;m<8;m++)
 {  
  SET_ALTERA_SCLK(0);
     2b6:	a8 98       	cbi	0x15, 0	; 21
     2b8:	9b e0       	ldi	r25, 0x0B	; 11
     2ba:	9a 95       	dec	r25
     2bc:	f1 f7       	brne	.-4      	; 0x2ba <_Z20Read_DATA_SPI_ALTERAv+0x36>
     2be:	00 00       	nop
  _delay_us(3);
 b=b + GET_ALTERA_SDO*tmp[m]; 
     2c0:	93 b3       	in	r25, 0x13	; 19
     2c2:	41 91       	ld	r20, Z+
     2c4:	92 fb       	bst	r25, 2
     2c6:	99 27       	eor	r25, r25
     2c8:	90 f9       	bld	r25, 0
     2ca:	49 9f       	mul	r20, r25
     2cc:	80 0d       	add	r24, r0
     2ce:	11 24       	eor	r1, r1
  SET_ALTERA_SCLK(1); 
     2d0:	a8 9a       	sbi	0x15, 0	; 21
     2d2:	97 e0       	ldi	r25, 0x07	; 7
     2d4:	9a 95       	dec	r25
     2d6:	f1 f7       	brne	.-4      	; 0x2d4 <_Z20Read_DATA_SPI_ALTERAv+0x50>
     2d8:	00 c0       	rjmp	.+0      	; 0x2da <_Z20Read_DATA_SPI_ALTERAv+0x56>
{
 unsigned char m,b;
 unsigned char tmp[8]={128, 64, 32, 16, 8, 4 ,2 ,1};  
 
 b=0;
 for (m=0;m<8;m++)
     2da:	e2 17       	cp	r30, r18
     2dc:	f3 07       	cpc	r31, r19
     2de:	59 f7       	brne	.-42     	; 0x2b6 <_Z20Read_DATA_SPI_ALTERAv+0x32>
  _delay_us(3);
 b=b + GET_ALTERA_SDO*tmp[m]; 
  SET_ALTERA_SCLK(1); 
 delay_us(2);  // скважность около 2
 }  
  SET_ALTERA_SCLK(0);  
     2e0:	a8 98       	cbi	0x15, 0	; 21
 return b;
}
     2e2:	28 96       	adiw	r28, 0x08	; 8
     2e4:	0f b6       	in	r0, 0x3f	; 63
     2e6:	f8 94       	cli
     2e8:	de bf       	out	0x3e, r29	; 62
     2ea:	0f be       	out	0x3f, r0	; 63
     2ec:	cd bf       	out	0x3d, r28	; 61
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	08 95       	ret

000002f4 <_Z14Write_ControlljPh>:
//////////////////////////////////////////////////////////////////////////

  void Write_Controll(unsigned int adress,unsigned char* ad)
{
     2f4:	ef 92       	push	r14
     2f6:	ff 92       	push	r15
     2f8:	1f 93       	push	r17
     2fa:	cf 93       	push	r28
     2fc:	df 93       	push	r29
     2fe:	00 d0       	rcall	.+0      	; 0x300 <_Z14Write_ControlljPh+0xc>
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
unsigned char k;  
 SET_ALTERA_CS2(0); SET_ALTERA_CS3(0);
     304:	ae 98       	cbi	0x15, 6	; 21
     306:	af 98       	cbi	0x15, 7	; 21
 SET_ALTERA_CS1(0);
     308:	ad 98       	cbi	0x15, 5	; 21
Write_Adress_SPI_ALTERA(adress);
     30a:	69 83       	std	Y+1, r22	; 0x01
     30c:	7a 83       	std	Y+2, r23	; 0x02
     30e:	4b df       	rcall	.-362    	; 0x1a6 <_Z23Write_Adress_SPI_ALTERAj>
     310:	84 e0       	ldi	r24, 0x04	; 4
     312:	8a 95       	dec	r24
     314:	f1 f7       	brne	.-4      	; 0x312 <_Z14Write_ControlljPh+0x1e>
     316:	69 81       	ldd	r22, Y+1	; 0x01
     318:	e6 2e       	mov	r14, r22
     31a:	7a 81       	ldd	r23, Y+2	; 0x02
     31c:	f7 2e       	mov	r15, r23
     31e:	14 e0       	ldi	r17, 0x04	; 4
delay_us(1);
for (k=0;k<4;k++) Write_DATA_SPI_ALTERA(ad[k]); //  Write_DATA_SPI_ALTERA(*(ad+k));
     320:	f7 01       	movw	r30, r14
     322:	81 91       	ld	r24, Z+
     324:	7f 01       	movw	r14, r30
     326:	78 df       	rcall	.-272    	; 0x218 <_Z21Write_DATA_SPI_ALTERAh>
     328:	11 50       	subi	r17, 0x01	; 1
     32a:	d1 f7       	brne	.-12     	; 0x320 <_Z14Write_ControlljPh+0x2c>
 SET_ALTERA_CS1(1);  
     32c:	ad 9a       	sbi	0x15, 5	; 21
}
     32e:	0f 90       	pop	r0
     330:	0f 90       	pop	r0
     332:	df 91       	pop	r29
     334:	cf 91       	pop	r28
     336:	1f 91       	pop	r17
     338:	ff 90       	pop	r15
     33a:	ef 90       	pop	r14
     33c:	08 95       	ret

0000033e <_Z13Read_ControlljPh>:

//////////////////////////////////////////////////////////////////////////
  void Read_Controll(unsigned int adress,unsigned char* ad)
{
     33e:	ef 92       	push	r14
     340:	ff 92       	push	r15
     342:	1f 93       	push	r17
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	00 d0       	rcall	.+0      	; 0x34a <_Z13Read_ControlljPh+0xc>
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
unsigned char k; 
 SET_ALTERA_CS2(0); SET_ALTERA_CS3(0); 
     34e:	ae 98       	cbi	0x15, 6	; 21
     350:	af 98       	cbi	0x15, 7	; 21
 SET_ALTERA_CS1(0);
     352:	ad 98       	cbi	0x15, 5	; 21
Write_Adress_SPI_ALTERA(adress);
     354:	69 83       	std	Y+1, r22	; 0x01
     356:	7a 83       	std	Y+2, r23	; 0x02
     358:	26 df       	rcall	.-436    	; 0x1a6 <_Z23Write_Adress_SPI_ALTERAj>
     35a:	84 e0       	ldi	r24, 0x04	; 4
     35c:	8a 95       	dec	r24
     35e:	f1 f7       	brne	.-4      	; 0x35c <_Z13Read_ControlljPh+0x1e>
     360:	69 81       	ldd	r22, Y+1	; 0x01
     362:	e6 2e       	mov	r14, r22
     364:	7a 81       	ldd	r23, Y+2	; 0x02
     366:	f7 2e       	mov	r15, r23
     368:	14 e0       	ldi	r17, 0x04	; 4
delay_us(1);
for (k=0;k<4;k++)  ad[k]=Read_DATA_SPI_ALTERA(); //*(ad+k)=Read_DATA_SPI_ALTERA();
     36a:	8c df       	rcall	.-232    	; 0x284 <_Z20Read_DATA_SPI_ALTERAv>
     36c:	f7 01       	movw	r30, r14
     36e:	81 93       	st	Z+, r24
     370:	7f 01       	movw	r14, r30
     372:	11 50       	subi	r17, 0x01	; 1
     374:	d1 f7       	brne	.-12     	; 0x36a <_Z13Read_ControlljPh+0x2c>
 SET_ALTERA_CS1(1);                                                                          
     376:	ad 9a       	sbi	0x15, 5	; 21
}
     378:	0f 90       	pop	r0
     37a:	0f 90       	pop	r0
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	1f 91       	pop	r17
     382:	ff 90       	pop	r15
     384:	ef 90       	pop	r14
     386:	08 95       	ret

00000388 <_Z6IndOfFj>:
static const unsigned int Fr[NDIAP + 1]  ={150,300,600,1200,2400,3000};//граничные частоты диапазонов
static const unsigned int df[NDIAP + 1]  ={5,  10, 20,  40,  80, 100};//шаги частот в диапазонах
static const unsigned int N[NDIAP + 1]  = { 300,300, 300, 300,     75};//количество точек в диапазонах
//////////////////////////////////////////////////////////////////////////
unsigned int //возвращает позицию частоты во flash возможна ошибка в одну позиции по тому что не учитываются десятые и сотые доли
	IndOfF(unsigned int f){
     388:	0f 93       	push	r16
     38a:	1f 93       	push	r17
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	ec 01       	movw	r28, r24
     392:	a8 e9       	ldi	r26, 0x98	; 152
     394:	b2 e0       	ldi	r27, 0x02	; 2
	unsigned int i = 0, Fc = 0, Nd = 0xFFFF, Npc = 0, Nf = 0;// Fc - частота без двух младших, Nd - номер диапазона, Npc - номер частоты в диапазоне, Nf - номер частоты во флешке
     396:	ef ef       	ldi	r30, 0xFF	; 255
     398:	ff ef       	ldi	r31, 0xFF	; 255
	unsigned int Fcl = 0;// младшие разряды частоты для решения в какую сторону притягниваться
	Fc = f;//приводим частоту к виду Fr, частота в 10 кГц
	for(i = 0; i < NDIAP+1; i++){
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
		if (Fc > ((unsigned int)(Fr[i]))*10)//определяем в какой диапазон попала наша частота
     39e:	6a e0       	ldi	r22, 0x0A	; 10
     3a0:	4d 91       	ld	r20, X+
     3a2:	5d 91       	ld	r21, X+
     3a4:	64 9f       	mul	r22, r20
     3a6:	c0 01       	movw	r24, r0
     3a8:	65 9f       	mul	r22, r21
     3aa:	90 0d       	add	r25, r0
     3ac:	11 24       	eor	r1, r1
     3ae:	8c 17       	cp	r24, r28
     3b0:	9d 07       	cpc	r25, r29
     3b2:	28 f4       	brcc	.+10     	; 0x3be <_Z6IndOfFj+0x36>
		if(i != NDIAP)  (Nd = i);
     3b4:	25 30       	cpi	r18, 0x05	; 5
     3b6:	31 05       	cpc	r19, r1
     3b8:	09 f4       	brne	.+2      	; 0x3bc <_Z6IndOfFj+0x34>
     3ba:	59 c0       	rjmp	.+178    	; 0x46e <_Z6IndOfFj+0xe6>
     3bc:	f9 01       	movw	r30, r18
unsigned int //возвращает позицию частоты во flash возможна ошибка в одну позиции по тому что не учитываются десятые и сотые доли
	IndOfF(unsigned int f){
	unsigned int i = 0, Fc = 0, Nd = 0xFFFF, Npc = 0, Nf = 0;// Fc - частота без двух младших, Nd - номер диапазона, Npc - номер частоты в диапазоне, Nf - номер частоты во флешке
	unsigned int Fcl = 0;// младшие разряды частоты для решения в какую сторону притягниваться
	Fc = f;//приводим частоту к виду Fr, частота в 10 кГц
	for(i = 0; i < NDIAP+1; i++){
     3be:	2f 5f       	subi	r18, 0xFF	; 255
     3c0:	3f 4f       	sbci	r19, 0xFF	; 255
     3c2:	26 30       	cpi	r18, 0x06	; 6
     3c4:	31 05       	cpc	r19, r1
     3c6:	61 f7       	brne	.-40     	; 0x3a0 <_Z6IndOfFj+0x18>
			for(i = 0; i < NDIAP+1; i++)
			maxInd +=  ((unsigned int)(N[i]));
			return maxInd;
		};//если частота выше самой верхней
	}
	if (Nd == 0xFFFF) return 0;//если частота ниже самой нижней граничной
     3c8:	ef 3f       	cpi	r30, 0xFF	; 255
     3ca:	8f ef       	ldi	r24, 0xFF	; 255
     3cc:	f8 07       	cpc	r31, r24
     3ce:	09 f4       	brne	.+2      	; 0x3d2 <_Z6IndOfFj+0x4a>
     3d0:	51 c0       	rjmp	.+162    	; 0x474 <_Z6IndOfFj+0xec>
	//SendCOMBytes((uchar*)&Nd,2);
	if(Fc > (unsigned int)(Fr[Nd])*10)
     3d2:	8f 01       	movw	r16, r30
     3d4:	00 0f       	add	r16, r16
     3d6:	11 1f       	adc	r17, r17
     3d8:	d8 01       	movw	r26, r16
     3da:	a8 56       	subi	r26, 0x68	; 104
     3dc:	bd 4f       	sbci	r27, 0xFD	; 253
     3de:	8d 91       	ld	r24, X+
     3e0:	9c 91       	ld	r25, X
     3e2:	4a e0       	ldi	r20, 0x0A	; 10
     3e4:	48 9f       	mul	r20, r24
     3e6:	90 01       	movw	r18, r0
     3e8:	49 9f       	mul	r20, r25
     3ea:	30 0d       	add	r19, r0
     3ec:	11 24       	eor	r1, r1
     3ee:	2c 17       	cp	r18, r28
     3f0:	3d 07       	cpc	r19, r29
     3f2:	58 f4       	brcc	.+22     	; 0x40a <_Z6IndOfFj+0x82>
	Npc = (Fc - (unsigned int)(Fr[Nd])*10)/(unsigned int)(df[Nd]);  //номер в поддиапазоне
     3f4:	d8 01       	movw	r26, r16
     3f6:	a4 57       	subi	r26, 0x74	; 116
     3f8:	bd 4f       	sbci	r27, 0xFD	; 253
     3fa:	6d 91       	ld	r22, X+
     3fc:	7c 91       	ld	r23, X
     3fe:	ce 01       	movw	r24, r28
     400:	82 1b       	sub	r24, r18
     402:	93 0b       	sbc	r25, r19
     404:	0e 94 bc 19 	call	0x3378	; 0x3378 <__udivmodhi4>
     408:	02 c0       	rjmp	.+4      	; 0x40e <_Z6IndOfFj+0x86>
static const unsigned int df[NDIAP + 1]  ={5,  10, 20,  40,  80, 100};//шаги частот в диапазонах
static const unsigned int N[NDIAP + 1]  = { 300,300, 300, 300,     75};//количество точек в диапазонах
//////////////////////////////////////////////////////////////////////////
unsigned int //возвращает позицию частоты во flash возможна ошибка в одну позиции по тому что не учитываются десятые и сотые доли
	IndOfF(unsigned int f){
	unsigned int i = 0, Fc = 0, Nd = 0xFFFF, Npc = 0, Nf = 0;// Fc - частота без двух младших, Nd - номер диапазона, Npc - номер частоты в диапазоне, Nf - номер частоты во флешке
     40a:	60 e0       	ldi	r22, 0x00	; 0
     40c:	70 e0       	ldi	r23, 0x00	; 0
	if (Nd == 0xFFFF) return 0;//если частота ниже самой нижней граничной
	//SendCOMBytes((uchar*)&Nd,2);
	if(Fc > (unsigned int)(Fr[Nd])*10)
	Npc = (Fc - (unsigned int)(Fr[Nd])*10)/(unsigned int)(df[Nd]);  //номер в поддиапазоне
	
	Fcl = f - (unsigned int)Npc*(unsigned int)(df[Nd]) - (unsigned int)(Fr[Nd])*10;// разница между получившейся частотой в поддиапазоне и исходной частотой
     40e:	d8 01       	movw	r26, r16
     410:	a4 57       	subi	r26, 0x74	; 116
     412:	bd 4f       	sbci	r27, 0xFD	; 253
     414:	4d 91       	ld	r20, X+
     416:	5c 91       	ld	r21, X
     418:	64 9f       	mul	r22, r20
     41a:	c0 01       	movw	r24, r0
     41c:	65 9f       	mul	r22, r21
     41e:	90 0d       	add	r25, r0
     420:	74 9f       	mul	r23, r20
     422:	90 0d       	add	r25, r0
     424:	11 24       	eor	r1, r1
     426:	c8 1b       	sub	r28, r24
     428:	d9 0b       	sbc	r29, r25
     42a:	c2 1b       	sub	r28, r18
     42c:	d3 0b       	sbc	r29, r19
     42e:	a0 e8       	ldi	r26, 0x80	; 128
     430:	b2 e0       	ldi	r27, 0x02	; 2
static const unsigned int df[NDIAP + 1]  ={5,  10, 20,  40,  80, 100};//шаги частот в диапазонах
static const unsigned int N[NDIAP + 1]  = { 300,300, 300, 300,     75};//количество точек в диапазонах
//////////////////////////////////////////////////////////////////////////
unsigned int //возвращает позицию частоты во flash возможна ошибка в одну позиции по тому что не учитываются десятые и сотые доли
	IndOfF(unsigned int f){
	unsigned int i = 0, Fc = 0, Nd = 0xFFFF, Npc = 0, Nf = 0;// Fc - частота без двух младших, Nd - номер диапазона, Npc - номер частоты в диапазоне, Nf - номер частоты во флешке
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
	if(Fc > (unsigned int)(Fr[Nd])*10)
	Npc = (Fc - (unsigned int)(Fr[Nd])*10)/(unsigned int)(df[Nd]);  //номер в поддиапазоне
	
	Fcl = f - (unsigned int)Npc*(unsigned int)(df[Nd]) - (unsigned int)(Fr[Nd])*10;// разница между получившейся частотой в поддиапазоне и исходной частотой

	for(i = 0; i < Nd; i++){// увеличиваем сдвиг от начала флешки на количество диапазонов
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	2e 17       	cp	r18, r30
     43c:	3f 07       	cpc	r19, r31
     43e:	39 f0       	breq	.+14     	; 0x44e <_Z6IndOfFj+0xc6>
		Nf += (unsigned int)(N[i]);
     440:	0d 91       	ld	r16, X+
     442:	1d 91       	ld	r17, X+
     444:	80 0f       	add	r24, r16
     446:	91 1f       	adc	r25, r17
	if(Fc > (unsigned int)(Fr[Nd])*10)
	Npc = (Fc - (unsigned int)(Fr[Nd])*10)/(unsigned int)(df[Nd]);  //номер в поддиапазоне
	
	Fcl = f - (unsigned int)Npc*(unsigned int)(df[Nd]) - (unsigned int)(Fr[Nd])*10;// разница между получившейся частотой в поддиапазоне и исходной частотой

	for(i = 0; i < Nd; i++){// увеличиваем сдвиг от начала флешки на количество диапазонов
     448:	2f 5f       	subi	r18, 0xFF	; 255
     44a:	3f 4f       	sbci	r19, 0xFF	; 255
     44c:	f6 cf       	rjmp	.-20     	; 0x43a <_Z6IndOfFj+0xb2>
		Nf += (unsigned int)(N[i]);

	}

	if (Fcl >= ((unsigned int)(df[Nd])/2))//Если больше или равно чем пол шага сетки то увеличиваем номер
     44e:	56 95       	lsr	r21
     450:	47 95       	ror	r20
     452:	c4 17       	cp	r28, r20
     454:	d5 07       	cpc	r29, r21
     456:	10 f0       	brcs	.+4      	; 0x45c <_Z6IndOfFj+0xd4>
										// (Fcl >= ((unsigned int)(df[Nd])/2)) - вызывает перескок по частоте на шаге 5 кГц раньше чем нужно
	Nf = Npc + Nf + 1;
     458:	6f 5f       	subi	r22, 0xFF	; 255
     45a:	7f 4f       	sbci	r23, 0xFF	; 255
	else
	Nf = Npc + Nf;
     45c:	68 0f       	add	r22, r24
     45e:	79 1f       	adc	r23, r25
	
	//SendCOMBytes((uchar*)&Nf,2);
	return Nf*(unsigned int)DATASIZE;
     460:	26 e0       	ldi	r18, 0x06	; 6
     462:	26 9f       	mul	r18, r22
     464:	c0 01       	movw	r24, r0
     466:	27 9f       	mul	r18, r23
     468:	90 0d       	add	r25, r0
     46a:	11 24       	eor	r1, r1
     46c:	05 c0       	rjmp	.+10     	; 0x478 <_Z6IndOfFj+0xf0>
		if (Fc > ((unsigned int)(Fr[i]))*10)//определяем в какой диапазон попала наша частота
		if(i != NDIAP)  (Nd = i);
		else {
			unsigned int maxInd = 0;
			for(i = 0; i < NDIAP+1; i++)
			maxInd +=  ((unsigned int)(N[i]));
     46e:	8b ef       	ldi	r24, 0xFB	; 251
     470:	94 e0       	ldi	r25, 0x04	; 4
     472:	02 c0       	rjmp	.+4      	; 0x478 <_Z6IndOfFj+0xf0>
			return maxInd;
		};//если частота выше самой верхней
	}
	if (Nd == 0xFFFF) return 0;//если частота ниже самой нижней граничной
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	90 e0       	ldi	r25, 0x00	; 0
	else
	Nf = Npc + Nf;
	
	//SendCOMBytes((uchar*)&Nf,2);
	return Nf*(unsigned int)DATASIZE;
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	08 95       	ret

00000482 <_Z10CharFtoIndPh>:
//////////////////////////////////////////////////////////////////////////
const unsigned int ves[7] = {10000,1000,100,10,1,0,0};
unsigned int CharFtoInd(unsigned char* f){//зависит от длины частоты
     482:	dc 01       	movw	r26, r24
     484:	e2 e7       	ldi	r30, 0x72	; 114
     486:	f2 e0       	ldi	r31, 0x02	; 2
	unsigned int dF = 0;
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	90 e0       	ldi	r25, 0x00	; 0
	char i;
	for( i = 0; i < 7; i++){
		dF += ((unsigned int)(f[i] & 0x0F))*(ves[i]);
     48c:	6d 91       	ld	r22, X+
     48e:	41 91       	ld	r20, Z+
     490:	51 91       	ld	r21, Z+
     492:	6f 70       	andi	r22, 0x0F	; 15
     494:	64 9f       	mul	r22, r20
     496:	90 01       	movw	r18, r0
     498:	65 9f       	mul	r22, r21
     49a:	30 0d       	add	r19, r0
     49c:	11 24       	eor	r1, r1
     49e:	82 0f       	add	r24, r18
     4a0:	93 1f       	adc	r25, r19
//////////////////////////////////////////////////////////////////////////
const unsigned int ves[7] = {10000,1000,100,10,1,0,0};
unsigned int CharFtoInd(unsigned char* f){//зависит от длины частоты
	unsigned int dF = 0;
	char i;
	for( i = 0; i < 7; i++){
     4a2:	22 e0       	ldi	r18, 0x02	; 2
     4a4:	e0 38       	cpi	r30, 0x80	; 128
     4a6:	f2 07       	cpc	r31, r18
     4a8:	89 f7       	brne	.-30     	; 0x48c <_Z10CharFtoIndPh+0xa>
		dF += ((unsigned int)(f[i] & 0x0F))*(ves[i]);
	}
	return IndOfF(dF);
     4aa:	6e cf       	rjmp	.-292    	; 0x388 <_Z6IndOfFj>

000004ac <_Z10ErrorFlashv>:
}

void ErrorFlash()
{
	lcd_clrscr();
     4ac:	65 d1       	rcall	.+714    	; 0x778 <_Z10lcd_clrscrv>
	lcd_puts("   SEL FLASH ERROR  ");
     4ae:	8d e5       	ldi	r24, 0x5D	; 93
     4b0:	92 e0       	ldi	r25, 0x02	; 2
     4b2:	75 d1       	rcall	.+746    	; 0x79e <_Z8lcd_putsPKc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4b4:	2f ef       	ldi	r18, 0xFF	; 255
     4b6:	8f ed       	ldi	r24, 0xDF	; 223
     4b8:	90 e1       	ldi	r25, 0x10	; 16
     4ba:	21 50       	subi	r18, 0x01	; 1
     4bc:	80 40       	sbci	r24, 0x00	; 0
     4be:	90 40       	sbci	r25, 0x00	; 0
     4c0:	e1 f7       	brne	.-8      	; 0x4ba <_Z10ErrorFlashv+0xe>
     4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <_Z10ErrorFlashv+0x18>
     4c4:	00 00       	nop
     4c6:	08 95       	ret

000004c8 <_Z18WriteData2FlashIICjPhh>:
 * Created: 19.09.2014 13:48:43
 *  Author: USER
 */ 
#include "flashiic.h"
//////////////////////////////////////////////////////////////////////////
void WriteData2FlashIIC(unsigned int startAddr,uchar *data,uchar numOfDataBytes){//запись в память n байт по адресу
     4c8:	ef 92       	push	r14
     4ca:	ff 92       	push	r15
     4cc:	0f 93       	push	r16
     4ce:	1f 93       	push	r17
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	f4 2e       	mov	r15, r20
     4d6:	e6 2e       	mov	r14, r22
	////SendCOMBytes(&data[i],1);
	//}
	//IICStop();	//конец передачи
	char i=0;
	//реализация побайтной записи
	for ( i = 0; i < numOfDataBytes; i++)									//байты данных
     4d8:	8c 01       	movw	r16, r24
     4da:	eb 01       	movw	r28, r22
     4dc:	8c 2f       	mov	r24, r28
     4de:	8e 19       	sub	r24, r14
     4e0:	8f 15       	cp	r24, r15
     4e2:	f8 f4       	brcc	.+62     	; 0x522 <_Z18WriteData2FlashIICjPhh+0x5a>
	{
		IICStart();
     4e4:	8b d0       	rcall	.+278    	; 0x5fc <_Z8IICStartv>
		if(IICByteWrite( (DEVICE_ADDR + WRITE) ) == 0x01)				//запись адреса устройства
     4e6:	80 ea       	ldi	r24, 0xA0	; 160
     4e8:	ce d0       	rcall	.+412    	; 0x686 <_Z12IICByteWritec>
     4ea:	81 30       	cpi	r24, 0x01	; 1
     4ec:	09 f4       	brne	.+2      	; 0x4f0 <_Z18WriteData2FlashIICjPhh+0x28>
		ErrorFlash();
     4ee:	de df       	rcall	.-68     	; 0x4ac <_Z10ErrorFlashv>
		if(IICByteWrite( (uchar)(((startAddr+i)&0xFF00) >> 8)) == 0x01)		//старшая часть адреса ячейки
     4f0:	81 2f       	mov	r24, r17
     4f2:	c9 d0       	rcall	.+402    	; 0x686 <_Z12IICByteWritec>
     4f4:	81 30       	cpi	r24, 0x01	; 1
     4f6:	09 f4       	brne	.+2      	; 0x4fa <_Z18WriteData2FlashIICjPhh+0x32>
		ErrorFlash();
     4f8:	d9 df       	rcall	.-78     	; 0x4ac <_Z10ErrorFlashv>
		if(IICByteWrite( (uchar)(((startAddr+i)&0x00FF))) == 0x01)			//младшая часть адреса ячейки
     4fa:	80 2f       	mov	r24, r16
     4fc:	c4 d0       	rcall	.+392    	; 0x686 <_Z12IICByteWritec>
     4fe:	81 30       	cpi	r24, 0x01	; 1
     500:	09 f4       	brne	.+2      	; 0x504 <_Z18WriteData2FlashIICjPhh+0x3c>
		ErrorFlash();
     502:	d4 df       	rcall	.-88     	; 0x4ac <_Z10ErrorFlashv>

		if(IICByteWrite( data[i] ) == 0x01)
     504:	89 91       	ld	r24, Y+
     506:	bf d0       	rcall	.+382    	; 0x686 <_Z12IICByteWritec>
     508:	81 30       	cpi	r24, 0x01	; 1
     50a:	09 f4       	brne	.+2      	; 0x50e <_Z18WriteData2FlashIICjPhh+0x46>
		ErrorFlash();
     50c:	cf df       	rcall	.-98     	; 0x4ac <_Z10ErrorFlashv>
		//SendCOMBytes(&data[i],1);
		
		IICStop();
     50e:	88 d0       	rcall	.+272    	; 0x620 <_Z7IICStopv>
     510:	8f ef       	ldi	r24, 0xFF	; 255
     512:	95 e3       	ldi	r25, 0x35	; 53
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <_Z18WriteData2FlashIICjPhh+0x4c>
     518:	00 c0       	rjmp	.+0      	; 0x51a <_Z18WriteData2FlashIICjPhh+0x52>
     51a:	00 00       	nop
     51c:	0f 5f       	subi	r16, 0xFF	; 255
     51e:	1f 4f       	sbci	r17, 0xFF	; 255
     520:	dd cf       	rjmp	.-70     	; 0x4dc <_Z18WriteData2FlashIICjPhh+0x14>
		_delay_ms(5);
	}
	
}
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	ff 90       	pop	r15
     52c:	ef 90       	pop	r14
     52e:	08 95       	ret

00000530 <_Z17WriteLCAout2FlashjPh>:
}
//////////////////////////////////////////////////////////////////////////
void WriteLCAout2Flash(unsigned int addr,uchar *data){//обертка для записи данных из EEPROM контроллера во flash
	//	uchar temp_data[6];
	//	eeprom_read_block(temp_data,data,6);
	WriteData2FlashIIC(addr,data,DATASIZE);
     530:	46 e0       	ldi	r20, 0x06	; 6
     532:	ca cf       	rjmp	.-108    	; 0x4c8 <_Z18WriteData2FlashIICjPhh>

00000534 <_Z17WriteDetCal2FlashjPh>:
//////////////////////////////////////////////////////////////////////////
//Функция записи калибровочного коэффициента
void WriteDetCal2Flash( unsigned int addr,uchar* data )
{
	unsigned int shift_addr = addr + DETCAL_START_ADDR;
	WriteData2FlashIIC(shift_addr,data,1);
     534:	41 e0       	ldi	r20, 0x01	; 1
     536:	9a 95       	dec	r25
     538:	c7 cf       	rjmp	.-114    	; 0x4c8 <_Z18WriteData2FlashIICjPhh>

0000053a <_Z18ReadDataInFlashIICPjPhh>:
}

//////////////////////////////////////////////////////////////////////////

void ReadDataInFlashIIC(unsigned int* startAddr,uchar *data,uchar numOfDataBytes)
{//используется произвольный доступ к памяти
     53a:	df 92       	push	r13
     53c:	ef 92       	push	r14
     53e:	ff 92       	push	r15
     540:	0f 93       	push	r16
     542:	1f 93       	push	r17
     544:	cf 93       	push	r28
     546:	df 93       	push	r29
     548:	ec 01       	movw	r28, r24
     54a:	f6 2e       	mov	r15, r22
     54c:	07 2f       	mov	r16, r23
     54e:	d4 2e       	mov	r13, r20
	char i=0;
	IICStart();
     550:	55 d0       	rcall	.+170    	; 0x5fc <_Z8IICStartv>
	if(IICByteWrite( (DEVICE_ADDR + WRITE) ) == 0x01)				//запись адреса устройства
     552:	80 ea       	ldi	r24, 0xA0	; 160
     554:	98 d0       	rcall	.+304    	; 0x686 <_Z12IICByteWritec>
     556:	11 e0       	ldi	r17, 0x01	; 1
     558:	81 30       	cpi	r24, 0x01	; 1
     55a:	09 f0       	breq	.+2      	; 0x55e <_Z18ReadDataInFlashIICPjPhh+0x24>
     55c:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	if(IICByteWrite( (uchar)((*startAddr&0xFF00) >> 8)) == 0x01)		//старшая часть адреса ячейки
     55e:	89 81       	ldd	r24, Y+1	; 0x01
     560:	92 d0       	rcall	.+292    	; 0x686 <_Z12IICByteWritec>
     562:	81 30       	cpi	r24, 0x01	; 1
     564:	09 f4       	brne	.+2      	; 0x568 <_Z18ReadDataInFlashIICPjPhh+0x2e>
		i++;
     566:	1f 5f       	subi	r17, 0xFF	; 255
	if(IICByteWrite( (uchar)((*startAddr&0x00FF))) == 0x01)			//младшая часть адреса ячейки
     568:	88 81       	ld	r24, Y
     56a:	8d d0       	rcall	.+282    	; 0x686 <_Z12IICByteWritec>
     56c:	81 30       	cpi	r24, 0x01	; 1
     56e:	09 f4       	brne	.+2      	; 0x572 <_Z18ReadDataInFlashIICPjPhh+0x38>
		i++;
     570:	1f 5f       	subi	r17, 0xFF	; 255
	IICStart();
     572:	44 d0       	rcall	.+136    	; 0x5fc <_Z8IICStartv>
	if(IICByteWrite( (DEVICE_ADDR + READ) ) == 0x01)				//запись адреса устройства
     574:	81 ea       	ldi	r24, 0xA1	; 161
     576:	87 d0       	rcall	.+270    	; 0x686 <_Z12IICByteWritec>
     578:	81 30       	cpi	r24, 0x01	; 1
     57a:	09 f0       	breq	.+2      	; 0x57e <_Z18ReadDataInFlashIICPjPhh+0x44>
		i++;
	if (i > 0) ErrorFlash();
     57c:	11 11       	cpse	r17, r1
     57e:	96 df       	rcall	.-212    	; 0x4ac <_Z10ErrorFlashv>
     580:	cf 2d       	mov	r28, r15
     582:	d0 2f       	mov	r29, r16
}

//////////////////////////////////////////////////////////////////////////

void ReadDataInFlashIIC(unsigned int* startAddr,uchar *data,uchar numOfDataBytes)
{//используется произвольный доступ к памяти
     584:	00 e0       	ldi	r16, 0x00	; 0
     586:	10 e0       	ldi	r17, 0x00	; 0
	if(IICByteWrite( (DEVICE_ADDR + READ) ) == 0x01)				//запись адреса устройства
		i++;
	if (i > 0) ErrorFlash();
	for ( i = 0; i < numOfDataBytes; i++)									//побайтное чтение из памяти. у предпоследнего символа нет ACK
	{
		data[i] = IICByteRead((uchar) (i == (numOfDataBytes - 1)));
     588:	ed 2c       	mov	r14, r13
     58a:	f1 2c       	mov	r15, r1
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	e8 1a       	sub	r14, r24
     590:	f1 08       	sbc	r15, r1
		i++;
	IICStart();
	if(IICByteWrite( (DEVICE_ADDR + READ) ) == 0x01)				//запись адреса устройства
		i++;
	if (i > 0) ErrorFlash();
	for ( i = 0; i < numOfDataBytes; i++)									//побайтное чтение из памяти. у предпоследнего символа нет ACK
     592:	0d 15       	cp	r16, r13
     594:	50 f4       	brcc	.+20     	; 0x5aa <_Z18ReadDataInFlashIICPjPhh+0x70>
	{
		data[i] = IICByteRead((uchar) (i == (numOfDataBytes - 1)));
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	0e 15       	cp	r16, r14
     59a:	1f 05       	cpc	r17, r15
     59c:	09 f0       	breq	.+2      	; 0x5a0 <_Z18ReadDataInFlashIICPjPhh+0x66>
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	7a d0       	rcall	.+244    	; 0x696 <_Z11IICByteReadc>
     5a2:	89 93       	st	Y+, r24
     5a4:	0f 5f       	subi	r16, 0xFF	; 255
     5a6:	1f 4f       	sbci	r17, 0xFF	; 255
     5a8:	f4 cf       	rjmp	.-24     	; 0x592 <_Z18ReadDataInFlashIICPjPhh+0x58>
	//	uart_putchar(i);
	}
	//SendCOMBytes(data,6);
	IICStop();
}
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	1f 91       	pop	r17
     5b0:	0f 91       	pop	r16
     5b2:	ff 90       	pop	r15
     5b4:	ef 90       	pop	r14
     5b6:	df 90       	pop	r13
	{
		data[i] = IICByteRead((uchar) (i == (numOfDataBytes - 1)));
	//	uart_putchar(i);
	}
	//SendCOMBytes(data,6);
	IICStop();
     5b8:	33 c0       	rjmp	.+102    	; 0x620 <_Z7IICStopv>

000005ba <_Z19ReadLCAoutFromFlashjPh>:
}
//////////////////////////////////////////////////////////////////////////
void ReadLCAoutFromFlash(unsigned int addr,uchar *data)
{//обертка для записи данных из EEPROM контроллера во flash
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	00 d0       	rcall	.+0      	; 0x5c0 <_Z19ReadLCAoutFromFlashjPh+0x6>
     5c0:	cd b7       	in	r28, 0x3d	; 61
     5c2:	de b7       	in	r29, 0x3e	; 62
     5c4:	9a 83       	std	Y+2, r25	; 0x02
     5c6:	89 83       	std	Y+1, r24	; 0x01
	//uchar temp_data[DATASIZE];
	//uart_putchar('a');
	ReadDataInFlashIIC(&addr,data,DATASIZE);
     5c8:	46 e0       	ldi	r20, 0x06	; 6
     5ca:	ce 01       	movw	r24, r28
     5cc:	01 96       	adiw	r24, 0x01	; 1
     5ce:	b5 df       	rcall	.-150    	; 0x53a <_Z18ReadDataInFlashIICPjPhh>
	//SendCOMBytes((uchar*)data,6);
	//eeprom_update_block(temp_data,data,DATASIZE);
	
}
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	08 95       	ret

000005da <_Z17ReadDetCalInFlashjPh>:
	unsigned int shift_addr = addr + DETCAL_START_ADDR;
	WriteData2FlashIIC(shift_addr,data,1);
}
//Функция чтения калибровочного коэффициента
void ReadDetCalInFlash( unsigned int addr,uchar* data )
{
     5da:	cf 93       	push	r28
     5dc:	df 93       	push	r29
     5de:	00 d0       	rcall	.+0      	; 0x5e0 <_Z17ReadDetCalInFlashjPh+0x6>
     5e0:	cd b7       	in	r28, 0x3d	; 61
     5e2:	de b7       	in	r29, 0x3e	; 62
	unsigned int shift_addr = addr + DETCAL_START_ADDR;
     5e4:	9a 95       	dec	r25
     5e6:	9a 83       	std	Y+2, r25	; 0x02
     5e8:	89 83       	std	Y+1, r24	; 0x01
	ReadDataInFlashIIC(&shift_addr,data,1);
     5ea:	41 e0       	ldi	r20, 0x01	; 1
     5ec:	ce 01       	movw	r24, r28
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	a4 df       	rcall	.-184    	; 0x53a <_Z18ReadDataInFlashIICPjPhh>
}
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	08 95       	ret

000005fc <_Z8IICStartv>:
}

//ФУНКЦИЯ ФОРМИРОВАНИЯ СОСТОЯНИЯ START ПО ИНТЕРФЕЙСУ IIC
void IICStart (void)
{
	IICDDR &= ~(IICData | IICClc);
     5fc:	87 b3       	in	r24, 0x17	; 23
     5fe:	87 7e       	andi	r24, 0xE7	; 231
     600:	87 bb       	out	0x17, r24	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     602:	8b e0       	ldi	r24, 0x0B	; 11
     604:	8a 95       	dec	r24
     606:	f1 f7       	brne	.-4      	; 0x604 <_Z8IICStartv+0x8>
     608:	00 00       	nop
	_delay_us (IICPause);
	IICDDR |= IICData;                            //подтяжка data к нулю
     60a:	bb 9a       	sbi	0x17, 3	; 23
     60c:	8b e0       	ldi	r24, 0x0B	; 11
     60e:	8a 95       	dec	r24
     610:	f1 f7       	brne	.-4      	; 0x60e <_Z8IICStartv+0x12>
     612:	00 00       	nop
	_delay_us (IICPause);
	IICDDR |= IICClc;                            //подтяжка clc к нулю
     614:	bc 9a       	sbi	0x17, 4	; 23
     616:	8b e0       	ldi	r24, 0x0B	; 11
     618:	8a 95       	dec	r24
     61a:	f1 f7       	brne	.-4      	; 0x618 <_Z8IICStartv+0x1c>
     61c:	00 00       	nop
     61e:	08 95       	ret

00000620 <_Z7IICStopv>:


//ФУНКЦИЯ ФОРМИРОВАНИЯ СОСТОЯНИЯ STOP ПО ИНТЕРФЕЙСУ IIC
void IICStop (void)
{
	IICDDR |= (IICData | IICClc);
     620:	87 b3       	in	r24, 0x17	; 23
     622:	88 61       	ori	r24, 0x18	; 24
     624:	87 bb       	out	0x17, r24	; 23
     626:	8b e0       	ldi	r24, 0x0B	; 11
     628:	8a 95       	dec	r24
     62a:	f1 f7       	brne	.-4      	; 0x628 <_Z7IICStopv+0x8>
     62c:	00 00       	nop
	_delay_us (IICPause);
	IICDDR &= ~IICClc;                            //подтяжка data к нулю
     62e:	bc 98       	cbi	0x17, 4	; 23
     630:	8b e0       	ldi	r24, 0x0B	; 11
     632:	8a 95       	dec	r24
     634:	f1 f7       	brne	.-4      	; 0x632 <_Z7IICStopv+0x12>
     636:	00 00       	nop
	_delay_us (IICPause);
	IICDDR &= ~IICData;                            //подтяжка clc к нулю
     638:	bb 98       	cbi	0x17, 3	; 23
     63a:	8b e0       	ldi	r24, 0x0B	; 11
     63c:	8a 95       	dec	r24
     63e:	f1 f7       	brne	.-4      	; 0x63c <_Z7IICStopv+0x1c>
     640:	00 00       	nop
     642:	08 95       	ret

00000644 <_Z6IICBitc>:
//ФУНКЦИЯ ЗАПИСИ\ЧТЕНИЯ БИТА ПО ИНТЕРФЕЙСУ IIC
//выводится значение старшего бита аргумента
//принятый бит возвращается в младшем бите предварительно сдвинутого влево аргумента
char IICBit (char byte)
{char temp = 0;
	if (byte & 0x80)                        //выводимый бит
     644:	87 ff       	sbrs	r24, 7
     646:	02 c0       	rjmp	.+4      	; 0x64c <_Z6IICBitc+0x8>
	IICDDR &= ~IICData;                 //вывод 1 на линию данных
     648:	bb 98       	cbi	0x17, 3	; 23
     64a:	01 c0       	rjmp	.+2      	; 0x64e <_Z6IICBitc+0xa>
	else
	IICDDR |= IICData;                    //вывод 0 на линию данных
     64c:	bb 9a       	sbi	0x17, 3	; 23
     64e:	2b e0       	ldi	r18, 0x0B	; 11
     650:	2a 95       	dec	r18
     652:	f1 f7       	brne	.-4      	; 0x650 <_Z6IICBitc+0xc>
     654:	00 00       	nop
	_delay_us (IICPause);
	IICDDR &= ~IICClc;                        //старт строб импульса
     656:	bc 98       	cbi	0x17, 4	; 23
		
		while (! (IICPIN & IICClc)){//ожидание формирования строба
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	b4 99       	sbic	0x16, 4	; 22
     65c:	08 c0       	rjmp	.+16     	; 0x66e <_Z6IICBitc+0x2a>
			temp++;				//пока ожидаем увеличиваем счетчик
			if (temp == 0)			//если прождали 255 пауз то прекращаем ждать
     65e:	9f 3f       	cpi	r25, 0xFF	; 255
     660:	31 f0       	breq	.+12     	; 0x66e <_Z6IICBitc+0x2a>
     662:	2b e0       	ldi	r18, 0x0B	; 11
     664:	2a 95       	dec	r18
     666:	f1 f7       	brne	.-4      	; 0x664 <_Z6IICBitc+0x20>
     668:	00 00       	nop
     66a:	9f 5f       	subi	r25, 0xFF	; 255
     66c:	f6 cf       	rjmp	.-20     	; 0x65a <_Z6IICBitc+0x16>
     66e:	9b e0       	ldi	r25, 0x0B	; 11
     670:	9a 95       	dec	r25
     672:	f1 f7       	brne	.-4      	; 0x670 <_Z6IICBitc+0x2c>
     674:	00 00       	nop
			break;
			_delay_us(IICPause);
		}
	_delay_us (IICPause);
	
	if (IICPIN & IICData)                    //принимаем бит
     676:	96 b3       	in	r25, 0x16	; 22
	temp = 1;
	else
	temp = 0;
	IICDDR |= IICClc;                        //завершить строб
     678:	bc 9a       	sbi	0x17, 4	; 23
	byte <<= 1;
     67a:	88 0f       	add	r24, r24
			break;
			_delay_us(IICPause);
		}
	_delay_us (IICPause);
	
	if (IICPIN & IICData)                    //принимаем бит
     67c:	93 fb       	bst	r25, 3
     67e:	99 27       	eor	r25, r25
     680:	90 f9       	bld	r25, 0
	temp = 0;
	IICDDR |= IICClc;                        //завершить строб
	byte <<= 1;
	byte |= temp;
	return byte;
}
     682:	89 2b       	or	r24, r25
     684:	08 95       	ret

00000686 <_Z12IICByteWritec>:

//ФУНКЦИЯ ЗАПИСИ БАЙТА ПО ИНТЕРФЕЙСУ IIC
//АРГУМЕНТ - байт данных для вывода по IIC
//ЗНАЧЕНИЕ - флаг подтверждения 0 (есть подтверждение) или 1 (нет подтверждения)
char IICByteWrite (char byte)
{
     686:	cf 93       	push	r28
     688:	c8 e0       	ldi	r28, 0x08	; 8
	char i;
	for (i = 0; i<8; i++)
	byte = IICBit (byte);
     68a:	dc df       	rcall	.-72     	; 0x644 <_Z6IICBitc>
     68c:	c1 50       	subi	r28, 0x01	; 1
//АРГУМЕНТ - байт данных для вывода по IIC
//ЗНАЧЕНИЕ - флаг подтверждения 0 (есть подтверждение) или 1 (нет подтверждения)
char IICByteWrite (char byte)
{
	char i;
	for (i = 0; i<8; i++)
     68e:	e9 f7       	brne	.-6      	; 0x68a <_Z12IICByteWritec+0x4>
	byte = IICBit (byte);
	byte = 0x80;
	return IICBit (byte);                        //возвращаем бит подтверждения (0-есть бит подтверждения, 1-нет)
     690:	80 e8       	ldi	r24, 0x80	; 128
}
     692:	cf 91       	pop	r28
{
	char i;
	for (i = 0; i<8; i++)
	byte = IICBit (byte);
	byte = 0x80;
	return IICBit (byte);                        //возвращаем бит подтверждения (0-есть бит подтверждения, 1-нет)
     694:	d7 cf       	rjmp	.-82     	; 0x644 <_Z6IICBitc>

00000696 <_Z11IICByteReadc>:

//ФУНКЦИЯ ЧТЕНИЯ БАЙТА ПО ИНТЕРФЕЙСУ IIC
//АРГУМЕНТ - значение бита подтверждения (0 - есть подтверждение, 1 - нет подтверждения)
//ЗНАЧЕНИЕ - принятый байт
char IICByteRead(char on_bit)
{char i;
     696:	1f 93       	push	r17
     698:	cf 93       	push	r28
     69a:	df 93       	push	r29
     69c:	18 2f       	mov	r17, r24
     69e:	d8 e0       	ldi	r29, 0x08	; 8
	char byte = 0xFF;
     6a0:	cf ef       	ldi	r28, 0xFF	; 255
	for ( i = 0; i<8; i++)
	byte = IICBit (byte);
     6a2:	8c 2f       	mov	r24, r28
     6a4:	cf df       	rcall	.-98     	; 0x644 <_Z6IICBitc>
     6a6:	c8 2f       	mov	r28, r24
     6a8:	d1 50       	subi	r29, 0x01	; 1
//АРГУМЕНТ - значение бита подтверждения (0 - есть подтверждение, 1 - нет подтверждения)
//ЗНАЧЕНИЕ - принятый байт
char IICByteRead(char on_bit)
{char i;
	char byte = 0xFF;
	for ( i = 0; i<8; i++)
     6aa:	d9 f7       	brne	.-10     	; 0x6a2 <_Z11IICByteReadc+0xc>
	byte = IICBit (byte);
	on_bit <<= 7;
	IICBit (on_bit);                                //передать значение бита подтверждения
     6ac:	81 2f       	mov	r24, r17
     6ae:	87 95       	ror	r24
     6b0:	88 27       	eor	r24, r24
     6b2:	87 95       	ror	r24
     6b4:	c7 df       	rcall	.-114    	; 0x644 <_Z6IICBitc>
	return byte;                                //возвращаем принятый байт
}
     6b6:	8c 2f       	mov	r24, r28
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	08 95       	ret

000006c0 <_ZL8toggle_ev>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     6c0:	ae 9a       	sbi	0x15, 6	; 21
     6c2:	83 e0       	ldi	r24, 0x03	; 3
     6c4:	8a 95       	dec	r24
     6c6:	f1 f7       	brne	.-4      	; 0x6c4 <_ZL8toggle_ev+0x4>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <_ZL8toggle_ev+0xa>
     6ca:	ae 98       	cbi	0x15, 6	; 21
     6cc:	08 95       	ret

000006ce <_ZL9lcd_writehh>:
     6ce:	1f 93       	push	r17
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	1f 92       	push	r1
     6d6:	cd b7       	in	r28, 0x3d	; 61
     6d8:	de b7       	in	r29, 0x3e	; 62
     6da:	66 23       	and	r22, r22
     6dc:	11 f0       	breq	.+4      	; 0x6e2 <_ZL9lcd_writehh+0x14>
     6de:	ac 9a       	sbi	0x15, 4	; 21
     6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <_ZL9lcd_writehh+0x16>
     6e2:	ac 98       	cbi	0x15, 4	; 21
     6e4:	ad 98       	cbi	0x15, 5	; 21
     6e6:	94 b3       	in	r25, 0x14	; 20
     6e8:	9f 60       	ori	r25, 0x0F	; 15
     6ea:	94 bb       	out	0x14, r25	; 20
     6ec:	15 b3       	in	r17, 0x15	; 21
     6ee:	10 7f       	andi	r17, 0xF0	; 240
     6f0:	98 2f       	mov	r25, r24
     6f2:	92 95       	swap	r25
     6f4:	9f 70       	andi	r25, 0x0F	; 15
     6f6:	91 2b       	or	r25, r17
     6f8:	95 bb       	out	0x15, r25	; 21
     6fa:	89 83       	std	Y+1, r24	; 0x01
     6fc:	e1 df       	rcall	.-62     	; 0x6c0 <_ZL8toggle_ev>
     6fe:	89 81       	ldd	r24, Y+1	; 0x01
     700:	8f 70       	andi	r24, 0x0F	; 15
     702:	81 2b       	or	r24, r17
     704:	85 bb       	out	0x15, r24	; 21
     706:	dc df       	rcall	.-72     	; 0x6c0 <_ZL8toggle_ev>
     708:	1f 60       	ori	r17, 0x0F	; 15
     70a:	15 bb       	out	0x15, r17	; 21
     70c:	0f 90       	pop	r0
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	1f 91       	pop	r17
     714:	08 95       	ret

00000716 <_ZL8lcd_readh.constprop.0>:
     716:	ac 98       	cbi	0x15, 4	; 21
     718:	ad 9a       	sbi	0x15, 5	; 21
     71a:	84 b3       	in	r24, 0x14	; 20
     71c:	80 7f       	andi	r24, 0xF0	; 240
     71e:	84 bb       	out	0x14, r24	; 20
     720:	ae 9a       	sbi	0x15, 6	; 21
     722:	83 e0       	ldi	r24, 0x03	; 3
     724:	8a 95       	dec	r24
     726:	f1 f7       	brne	.-4      	; 0x724 <_ZL8lcd_readh.constprop.0+0xe>
     728:	00 c0       	rjmp	.+0      	; 0x72a <_ZL8lcd_readh.constprop.0+0x14>
     72a:	83 b3       	in	r24, 0x13	; 19
     72c:	ae 98       	cbi	0x15, 6	; 21
     72e:	93 e0       	ldi	r25, 0x03	; 3
     730:	9a 95       	dec	r25
     732:	f1 f7       	brne	.-4      	; 0x730 <_ZL8lcd_readh.constprop.0+0x1a>
     734:	00 c0       	rjmp	.+0      	; 0x736 <_ZL8lcd_readh.constprop.0+0x20>
     736:	ae 9a       	sbi	0x15, 6	; 21
     738:	93 e0       	ldi	r25, 0x03	; 3
     73a:	9a 95       	dec	r25
     73c:	f1 f7       	brne	.-4      	; 0x73a <_ZL8lcd_readh.constprop.0+0x24>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <_ZL8lcd_readh.constprop.0+0x2a>
     740:	93 b3       	in	r25, 0x13	; 19
     742:	ae 98       	cbi	0x15, 6	; 21
     744:	9f 70       	andi	r25, 0x0F	; 15
     746:	82 95       	swap	r24
     748:	80 7f       	andi	r24, 0xF0	; 240
     74a:	89 2b       	or	r24, r25
     74c:	08 95       	ret

0000074e <_ZL12lcd_waitbusyv>:
     74e:	e3 df       	rcall	.-58     	; 0x716 <_ZL8lcd_readh.constprop.0>
     750:	87 fd       	sbrc	r24, 7
     752:	fd cf       	rjmp	.-6      	; 0x74e <_ZL12lcd_waitbusyv>
     754:	8e e0       	ldi	r24, 0x0E	; 14
     756:	8a 95       	dec	r24
     758:	f1 f7       	brne	.-4      	; 0x756 <_ZL12lcd_waitbusyv+0x8>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <_ZL12lcd_waitbusyv+0xe>
     75c:	dc cf       	rjmp	.-72     	; 0x716 <_ZL8lcd_readh.constprop.0>

0000075e <_Z11lcd_commandh>:
     75e:	cf 93       	push	r28
     760:	c8 2f       	mov	r28, r24
     762:	f5 df       	rcall	.-22     	; 0x74e <_ZL12lcd_waitbusyv>
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	8c 2f       	mov	r24, r28
     768:	cf 91       	pop	r28
     76a:	b1 cf       	rjmp	.-158    	; 0x6ce <_ZL9lcd_writehh>

0000076c <_Z10lcd_gotoxyhh>:
     76c:	61 11       	cpse	r22, r1
     76e:	02 c0       	rjmp	.+4      	; 0x774 <_Z10lcd_gotoxyhh+0x8>
     770:	80 58       	subi	r24, 0x80	; 128
     772:	01 c0       	rjmp	.+2      	; 0x776 <_Z10lcd_gotoxyhh+0xa>
     774:	80 54       	subi	r24, 0x40	; 64
     776:	f3 cf       	rjmp	.-26     	; 0x75e <_Z11lcd_commandh>

00000778 <_Z10lcd_clrscrv>:
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	f1 cf       	rjmp	.-30     	; 0x75e <_Z11lcd_commandh>

0000077c <_Z8lcd_putcc>:
     77c:	cf 93       	push	r28
     77e:	c8 2f       	mov	r28, r24
     780:	e6 df       	rcall	.-52     	; 0x74e <_ZL12lcd_waitbusyv>
     782:	ca 30       	cpi	r28, 0x0A	; 10
     784:	41 f4       	brne	.+16     	; 0x796 <_Z8lcd_putcc+0x1a>
     786:	80 34       	cpi	r24, 0x40	; 64
     788:	10 f4       	brcc	.+4      	; 0x78e <_Z8lcd_putcc+0x12>
     78a:	80 e4       	ldi	r24, 0x40	; 64
     78c:	01 c0       	rjmp	.+2      	; 0x790 <_Z8lcd_putcc+0x14>
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	80 58       	subi	r24, 0x80	; 128
     792:	cf 91       	pop	r28
     794:	e4 cf       	rjmp	.-56     	; 0x75e <_Z11lcd_commandh>
     796:	61 e0       	ldi	r22, 0x01	; 1
     798:	8c 2f       	mov	r24, r28
     79a:	cf 91       	pop	r28
     79c:	98 cf       	rjmp	.-208    	; 0x6ce <_ZL9lcd_writehh>

0000079e <_Z8lcd_putsPKc>:
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	ec 01       	movw	r28, r24
     7a4:	89 91       	ld	r24, Y+
     7a6:	88 23       	and	r24, r24
     7a8:	11 f0       	breq	.+4      	; 0x7ae <_Z8lcd_putsPKc+0x10>
     7aa:	e8 df       	rcall	.-48     	; 0x77c <_Z8lcd_putcc>
     7ac:	fb cf       	rjmp	.-10     	; 0x7a4 <_Z8lcd_putsPKc+0x6>
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <_Z8lcd_inith>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     7b4:	cf 93       	push	r28
     7b6:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
     7b8:	94 b3       	in	r25, 0x14	; 20
     7ba:	9f 67       	ori	r25, 0x7F	; 127
     7bc:	94 bb       	out	0x14, r25	; 20
     7be:	8f ed       	ldi	r24, 0xDF	; 223
     7c0:	9b ea       	ldi	r25, 0xAB	; 171
     7c2:	01 97       	sbiw	r24, 0x01	; 1
     7c4:	f1 f7       	brne	.-4      	; 0x7c2 <_Z8lcd_inith+0xe>
     7c6:	00 c0       	rjmp	.+0      	; 0x7c8 <_Z8lcd_inith+0x14>
     7c8:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     7ca:	a9 9a       	sbi	0x15, 1	; 21
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     7cc:	a8 9a       	sbi	0x15, 0	; 21
    lcd_e_toggle();
     7ce:	78 df       	rcall	.-272    	; 0x6c0 <_ZL8toggle_ev>
     7d0:	85 eb       	ldi	r24, 0xB5	; 181
     7d2:	95 e3       	ldi	r25, 0x35	; 53
     7d4:	01 97       	sbiw	r24, 0x01	; 1
     7d6:	f1 f7       	brne	.-4      	; 0x7d4 <_Z8lcd_inith+0x20>
     7d8:	00 c0       	rjmp	.+0      	; 0x7da <_Z8lcd_inith+0x26>
     7da:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     7dc:	71 df       	rcall	.-286    	; 0x6c0 <_ZL8toggle_ev>
     7de:	9a ee       	ldi	r25, 0xEA	; 234
     7e0:	9a 95       	dec	r25
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <_Z8lcd_inith+0x2c>
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <_Z8lcd_inith+0x32>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     7e6:	6c df       	rcall	.-296    	; 0x6c0 <_ZL8toggle_ev>
     7e8:	8a ee       	ldi	r24, 0xEA	; 234
     7ea:	8a 95       	dec	r24
     7ec:	f1 f7       	brne	.-4      	; 0x7ea <_Z8lcd_inith+0x36>
     7ee:	00 c0       	rjmp	.+0      	; 0x7f0 <_Z8lcd_inith+0x3c>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     7f0:	a8 98       	cbi	0x15, 0	; 21
    lcd_e_toggle();
     7f2:	66 df       	rcall	.-308    	; 0x6c0 <_ZL8toggle_ev>
     7f4:	9a ee       	ldi	r25, 0xEA	; 234
     7f6:	9a 95       	dec	r25
     7f8:	f1 f7       	brne	.-4      	; 0x7f6 <_Z8lcd_inith+0x42>
     7fa:	00 c0       	rjmp	.+0      	; 0x7fc <_Z8lcd_inith+0x48>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     7fc:	88 e2       	ldi	r24, 0x28	; 40
     7fe:	af df       	rcall	.-162    	; 0x75e <_Z11lcd_commandh>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     800:	88 e0       	ldi	r24, 0x08	; 8
     802:	ad df       	rcall	.-166    	; 0x75e <_Z11lcd_commandh>
    lcd_clrscr();                           /* display clear                */ 
     804:	b9 df       	rcall	.-142    	; 0x778 <_Z10lcd_clrscrv>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     806:	86 e0       	ldi	r24, 0x06	; 6
     808:	aa df       	rcall	.-172    	; 0x75e <_Z11lcd_commandh>
    lcd_command(dispAttr);                  /* display/cursor control       */
     80a:	8c 2f       	mov	r24, r28

}/* lcd_init */
     80c:	cf 91       	pop	r28
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
    lcd_clrscr();                           /* display clear                */ 
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
    lcd_command(dispAttr);                  /* display/cursor control       */
     80e:	a7 cf       	rjmp	.-178    	; 0x75e <_Z11lcd_commandh>

00000810 <_Z11noEventMenuP9CMenuItem>:
			SetZselOpen(val == 0);//TODO: отпирание запирание селектора захарова
		}		
		
}
//////////////////////////////////////////////////////////////////////////
void SetOTPLines(){
     810:	08 95       	ret

00000812 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_>:
     812:	3f 92       	push	r3
     814:	4f 92       	push	r4
     816:	5f 92       	push	r5
     818:	6f 92       	push	r6
     81a:	7f 92       	push	r7
     81c:	8f 92       	push	r8
     81e:	9f 92       	push	r9
     820:	af 92       	push	r10
     822:	bf 92       	push	r11
     824:	cf 92       	push	r12
     826:	df 92       	push	r13
     828:	ef 92       	push	r14
     82a:	ff 92       	push	r15
     82c:	0f 93       	push	r16
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	cd b7       	in	r28, 0x3d	; 61
     836:	de b7       	in	r29, 0x3e	; 62
     838:	fc 01       	movw	r30, r24
     83a:	fc 8c       	ldd	r15, Y+28	; 0x1c
     83c:	5d 8c       	ldd	r5, Y+29	; 0x1d
     83e:	6e 8c       	ldd	r6, Y+30	; 0x1e
     840:	3f 8c       	ldd	r3, Y+31	; 0x1f
     842:	78 a0       	ldd	r7, Y+32	; 0x20
     844:	49 a0       	ldd	r4, Y+33	; 0x21
     846:	70 8f       	std	Z+24, r23	; 0x18
     848:	67 8b       	std	Z+23, r22	; 0x17
     84a:	52 8f       	std	Z+26, r21	; 0x1a
     84c:	41 8f       	std	Z+25, r20	; 0x19
     84e:	31 83       	std	Z+1, r19	; 0x01
     850:	20 83       	st	Z, r18
     852:	f0 aa       	std	Z+48, r15	; 0x30
     854:	dc 01       	movw	r26, r24
     856:	aa 5b       	subi	r26, 0xBA	; 186
     858:	bf 4f       	sbci	r27, 0xFF	; 255
     85a:	3c 92       	st	X, r3
     85c:	13 96       	adiw	r26, 0x03	; 3
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	8c 93       	st	X, r24
     862:	11 97       	sbiw	r26, 0x01	; 1
     864:	1c 92       	st	X, r1
     866:	e6 8a       	std	Z+22, r14	; 0x16
     868:	b8 01       	movw	r22, r16
     86a:	cf 01       	movw	r24, r30
     86c:	40 e0       	ldi	r20, 0x00	; 0
     86e:	02 96       	adiw	r24, 0x02	; 2
     870:	4e 15       	cp	r20, r14
     872:	49 f0       	breq	.+18     	; 0x886 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x74>
     874:	db 01       	movw	r26, r22
     876:	2d 91       	ld	r18, X+
     878:	3d 91       	ld	r19, X+
     87a:	bd 01       	movw	r22, r26
     87c:	dc 01       	movw	r26, r24
     87e:	2d 93       	st	X+, r18
     880:	3c 93       	st	X, r19
     882:	4f 5f       	subi	r20, 0xFF	; 255
     884:	f4 cf       	rjmp	.-24     	; 0x86e <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x5c>
     886:	ff 20       	and	r15, r15
     888:	29 f0       	breq	.+10     	; 0x894 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x82>
     88a:	65 2d       	mov	r22, r5
     88c:	76 2d       	mov	r23, r6
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	04 c0       	rjmp	.+8      	; 0x89c <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x8a>
     894:	81 e0       	ldi	r24, 0x01	; 1
     896:	83 8f       	std	Z+27, r24	; 0x1b
     898:	81 ab       	std	Z+49, r24	; 0x31
     89a:	1e c0       	rjmp	.+60     	; 0x8d8 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xc6>
     89c:	8f 15       	cp	r24, r15
     89e:	58 f4       	brcc	.+22     	; 0x8b6 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xa4>
     8a0:	db 01       	movw	r26, r22
     8a2:	4d 91       	ld	r20, X+
     8a4:	bd 01       	movw	r22, r26
     8a6:	9f 01       	movw	r18, r30
     8a8:	28 0f       	add	r18, r24
     8aa:	39 1f       	adc	r19, r25
     8ac:	d9 01       	movw	r26, r18
     8ae:	5b 96       	adiw	r26, 0x1b	; 27
     8b0:	4c 93       	st	X, r20
     8b2:	01 96       	adiw	r24, 0x01	; 1
     8b4:	f3 cf       	rjmp	.-26     	; 0x89c <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x8a>
     8b6:	67 2d       	mov	r22, r7
     8b8:	74 2d       	mov	r23, r4
     8ba:	80 e0       	ldi	r24, 0x00	; 0
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	83 15       	cp	r24, r3
     8c0:	58 f4       	brcc	.+22     	; 0x8d8 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xc6>
     8c2:	db 01       	movw	r26, r22
     8c4:	4d 91       	ld	r20, X+
     8c6:	bd 01       	movw	r22, r26
     8c8:	9f 01       	movw	r18, r30
     8ca:	28 0f       	add	r18, r24
     8cc:	39 1f       	adc	r19, r25
     8ce:	d9 01       	movw	r26, r18
     8d0:	d1 96       	adiw	r26, 0x31	; 49
     8d2:	4c 93       	st	X, r20
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	f3 cf       	rjmp	.-26     	; 0x8be <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xac>
     8d8:	df 01       	movw	r26, r30
     8da:	a4 5b       	subi	r26, 0xB4	; 180
     8dc:	bf 4f       	sbci	r27, 0xFF	; 255
     8de:	c1 14       	cp	r12, r1
     8e0:	d1 04       	cpc	r13, r1
     8e2:	29 f4       	brne	.+10     	; 0x8ee <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xdc>
     8e4:	88 e0       	ldi	r24, 0x08	; 8
     8e6:	94 e0       	ldi	r25, 0x04	; 4
     8e8:	8d 93       	st	X+, r24
     8ea:	9c 93       	st	X, r25
     8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xe0>
     8ee:	cd 92       	st	X+, r12
     8f0:	dc 92       	st	X, r13
     8f2:	df 01       	movw	r26, r30
     8f4:	a8 5a       	subi	r26, 0xA8	; 168
     8f6:	bf 4f       	sbci	r27, 0xFF	; 255
     8f8:	81 14       	cp	r8, r1
     8fa:	91 04       	cpc	r9, r1
     8fc:	29 f4       	brne	.+10     	; 0x908 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xf6>
     8fe:	88 e0       	ldi	r24, 0x08	; 8
     900:	94 e0       	ldi	r25, 0x04	; 4
     902:	8d 93       	st	X+, r24
     904:	9c 93       	st	X, r25
     906:	02 c0       	rjmp	.+4      	; 0x90c <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0xfa>
     908:	8d 92       	st	X+, r8
     90a:	9c 92       	st	X, r9
     90c:	df 01       	movw	r26, r30
     90e:	a2 5b       	subi	r26, 0xB2	; 178
     910:	bf 4f       	sbci	r27, 0xFF	; 255
     912:	a1 14       	cp	r10, r1
     914:	b1 04       	cpc	r11, r1
     916:	29 f4       	brne	.+10     	; 0x922 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x110>
     918:	88 e0       	ldi	r24, 0x08	; 8
     91a:	94 e0       	ldi	r25, 0x04	; 4
     91c:	8d 93       	st	X+, r24
     91e:	9c 93       	st	X, r25
     920:	02 c0       	rjmp	.+4      	; 0x926 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x114>
     922:	ad 92       	st	X+, r10
     924:	bc 92       	st	X, r11
     926:	df 01       	movw	r26, r30
     928:	a0 5b       	subi	r26, 0xB0	; 176
     92a:	bf 4f       	sbci	r27, 0xFF	; 255
     92c:	8c 89       	ldd	r24, Y+20	; 0x14
     92e:	9d 89       	ldd	r25, Y+21	; 0x15
     930:	89 2b       	or	r24, r25
     932:	19 f4       	brne	.+6      	; 0x93a <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x128>
     934:	88 e0       	ldi	r24, 0x08	; 8
     936:	94 e0       	ldi	r25, 0x04	; 4
     938:	02 c0       	rjmp	.+4      	; 0x93e <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x12c>
     93a:	8c 89       	ldd	r24, Y+20	; 0x14
     93c:	9d 89       	ldd	r25, Y+21	; 0x15
     93e:	8d 93       	st	X+, r24
     940:	9c 93       	st	X, r25
     942:	df 01       	movw	r26, r30
     944:	ae 5a       	subi	r26, 0xAE	; 174
     946:	bf 4f       	sbci	r27, 0xFF	; 255
     948:	8e 89       	ldd	r24, Y+22	; 0x16
     94a:	9f 89       	ldd	r25, Y+23	; 0x17
     94c:	89 2b       	or	r24, r25
     94e:	19 f4       	brne	.+6      	; 0x956 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x144>
     950:	88 e0       	ldi	r24, 0x08	; 8
     952:	94 e0       	ldi	r25, 0x04	; 4
     954:	02 c0       	rjmp	.+4      	; 0x95a <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x148>
     956:	8e 89       	ldd	r24, Y+22	; 0x16
     958:	9f 89       	ldd	r25, Y+23	; 0x17
     95a:	8d 93       	st	X+, r24
     95c:	9c 93       	st	X, r25
     95e:	df 01       	movw	r26, r30
     960:	ac 5a       	subi	r26, 0xAC	; 172
     962:	bf 4f       	sbci	r27, 0xFF	; 255
     964:	88 8d       	ldd	r24, Y+24	; 0x18
     966:	99 8d       	ldd	r25, Y+25	; 0x19
     968:	89 2b       	or	r24, r25
     96a:	19 f4       	brne	.+6      	; 0x972 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x160>
     96c:	88 e0       	ldi	r24, 0x08	; 8
     96e:	94 e0       	ldi	r25, 0x04	; 4
     970:	02 c0       	rjmp	.+4      	; 0x976 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x164>
     972:	88 8d       	ldd	r24, Y+24	; 0x18
     974:	99 8d       	ldd	r25, Y+25	; 0x19
     976:	8d 93       	st	X+, r24
     978:	9c 93       	st	X, r25
     97a:	df 01       	movw	r26, r30
     97c:	aa 5a       	subi	r26, 0xAA	; 170
     97e:	bf 4f       	sbci	r27, 0xFF	; 255
     980:	8a 8d       	ldd	r24, Y+26	; 0x1a
     982:	9b 8d       	ldd	r25, Y+27	; 0x1b
     984:	89 2b       	or	r24, r25
     986:	19 f4       	brne	.+6      	; 0x98e <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x17c>
     988:	88 e0       	ldi	r24, 0x08	; 8
     98a:	94 e0       	ldi	r25, 0x04	; 4
     98c:	02 c0       	rjmp	.+4      	; 0x992 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_+0x180>
     98e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     990:	9b 8d       	ldd	r25, Y+27	; 0x1b
     992:	8d 93       	st	X+, r24
     994:	9c 93       	st	X, r25
     996:	df 01       	movw	r26, r30
     998:	a6 5b       	subi	r26, 0xB6	; 182
     99a:	bf 4f       	sbci	r27, 0xFF	; 255
     99c:	fc 92       	st	X, r15
     99e:	e5 5b       	subi	r30, 0xB5	; 181
     9a0:	ff 4f       	sbci	r31, 0xFF	; 255
     9a2:	30 82       	st	Z, r3
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	ff 90       	pop	r15
     9ae:	ef 90       	pop	r14
     9b0:	df 90       	pop	r13
     9b2:	cf 90       	pop	r12
     9b4:	bf 90       	pop	r11
     9b6:	af 90       	pop	r10
     9b8:	9f 90       	pop	r9
     9ba:	8f 90       	pop	r8
     9bc:	7f 90       	pop	r7
     9be:	6f 90       	pop	r6
     9c0:	5f 90       	pop	r5
     9c2:	4f 90       	pop	r4
     9c4:	3f 90       	pop	r3
     9c6:	08 95       	ret

000009c8 <_Z41__static_initialization_and_destruction_0ii.part.5>:
     9c8:	2f 92       	push	r2
     9ca:	3f 92       	push	r3
     9cc:	4f 92       	push	r4
     9ce:	5f 92       	push	r5
     9d0:	6f 92       	push	r6
     9d2:	7f 92       	push	r7
     9d4:	8f 92       	push	r8
     9d6:	9f 92       	push	r9
     9d8:	af 92       	push	r10
     9da:	bf 92       	push	r11
     9dc:	cf 92       	push	r12
     9de:	df 92       	push	r13
     9e0:	ef 92       	push	r14
     9e2:	ff 92       	push	r15
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
     9e8:	cf 93       	push	r28
     9ea:	df 93       	push	r29
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	c6 58       	subi	r28, 0x86	; 134
     9f2:	d1 40       	sbci	r29, 0x01	; 1
     9f4:	0f b6       	in	r0, 0x3f	; 63
     9f6:	f8 94       	cli
     9f8:	de bf       	out	0x3e, r29	; 62
     9fa:	0f be       	out	0x3f, r0	; 63
     9fc:	cd bf       	out	0x3d, r28	; 61
     9fe:	86 e1       	ldi	r24, 0x16	; 22
     a00:	58 2e       	mov	r5, r24
     a02:	ae 01       	movw	r20, r28
     a04:	4f 5f       	subi	r20, 0xFF	; 255
     a06:	5f 4f       	sbci	r21, 0xFF	; 255
     a08:	da 01       	movw	r26, r20
     a0a:	e5 2d       	mov	r30, r5
     a0c:	1d 92       	st	X+, r1
     a0e:	ea 95       	dec	r30
     a10:	e9 f7       	brne	.-6      	; 0xa0c <_Z41__static_initialization_and_destruction_0ii.part.5+0x44>
     a12:	9e 01       	movw	r18, r28
     a14:	29 5e       	subi	r18, 0xE9	; 233
     a16:	3f 4f       	sbci	r19, 0xFF	; 255
     a18:	d9 01       	movw	r26, r18
     a1a:	e5 2d       	mov	r30, r5
     a1c:	1d 92       	st	X+, r1
     a1e:	ea 95       	dec	r30
     a20:	e9 f7       	brne	.-6      	; 0xa1c <_Z41__static_initialization_and_destruction_0ii.part.5+0x54>
     a22:	fe 01       	movw	r30, r28
     a24:	e7 5f       	subi	r30, 0xF7	; 247
     a26:	fe 4f       	sbci	r31, 0xFE	; 254
     a28:	df 01       	movw	r26, r30
     a2a:	85 e1       	ldi	r24, 0x15	; 21
     a2c:	1d 92       	st	X+, r1
     a2e:	8a 95       	dec	r24
     a30:	e9 f7       	brne	.-6      	; 0xa2c <_Z41__static_initialization_and_destruction_0ii.part.5+0x64>
     a32:	a5 e8       	ldi	r26, 0x85	; 133
     a34:	b3 e0       	ldi	r27, 0x03	; 3
     a36:	b1 83       	std	Z+1, r27	; 0x01
     a38:	a0 83       	st	Z, r26
     a3a:	77 24       	eor	r7, r7
     a3c:	73 94       	inc	r7
     a3e:	74 8a       	std	Z+20, r7	; 0x14
     a40:	85 e1       	ldi	r24, 0x15	; 21
     a42:	de 01       	movw	r26, r28
     a44:	a8 5b       	subi	r26, 0xB8	; 184
     a46:	be 4f       	sbci	r27, 0xFE	; 254
     a48:	01 90       	ld	r0, Z+
     a4a:	0d 92       	st	X+, r0
     a4c:	8a 95       	dec	r24
     a4e:	e1 f7       	brne	.-8      	; 0xa48 <_Z41__static_initialization_and_destruction_0ii.part.5+0x80>
     a50:	b3 e0       	ldi	r27, 0x03	; 3
     a52:	bf 8b       	std	Y+23, r27	; 0x17
     a54:	94 e0       	ldi	r25, 0x04	; 4
     a56:	49 2e       	mov	r4, r25
     a58:	48 8e       	std	Y+24, r4	; 0x18
     a5a:	e5 e0       	ldi	r30, 0x05	; 5
     a5c:	e9 8f       	std	Y+25, r30	; 0x19
     a5e:	f6 e0       	ldi	r31, 0x06	; 6
     a60:	fa 8f       	std	Y+26, r31	; 0x1a
     a62:	87 e0       	ldi	r24, 0x07	; 7
     a64:	8b 8f       	std	Y+27, r24	; 0x1b
     a66:	69 e0       	ldi	r22, 0x09	; 9
     a68:	f6 2e       	mov	r15, r22
     a6a:	fc 8e       	std	Y+28, r15	; 0x1c
     a6c:	9a e0       	ldi	r25, 0x0A	; 10
     a6e:	9d 8f       	std	Y+29, r25	; 0x1d
     a70:	a0 e1       	ldi	r26, 0x10	; 16
     a72:	ae 8f       	std	Y+30, r26	; 0x1e
     a74:	78 e0       	ldi	r23, 0x08	; 8
     a76:	67 2e       	mov	r6, r23
     a78:	6c a6       	std	Y+44, r6	; 0x2c
     a7a:	ce 01       	movw	r24, r28
     a7c:	8b 57       	subi	r24, 0x7B	; 123
     a7e:	9f 4f       	sbci	r25, 0xFF	; 255
     a80:	66 e1       	ldi	r22, 0x16	; 22
     a82:	f9 01       	movw	r30, r18
     a84:	dc 01       	movw	r26, r24
     a86:	01 90       	ld	r0, Z+
     a88:	0d 92       	st	X+, r0
     a8a:	6a 95       	dec	r22
     a8c:	e1 f7       	brne	.-8      	; 0xa86 <_Z41__static_initialization_and_destruction_0ii.part.5+0xbe>
     a8e:	79 82       	std	Y+1, r7	; 0x01
     a90:	fa 82       	std	Y+2, r15	; 0x02
     a92:	bc e0       	ldi	r27, 0x0C	; 12
     a94:	bb 83       	std	Y+3, r27	; 0x03
     a96:	e2 e1       	ldi	r30, 0x12	; 18
     a98:	2e 2e       	mov	r2, r30
     a9a:	2c 82       	std	Y+4, r2	; 0x04
     a9c:	4e 8a       	std	Y+22, r4	; 0x16
     a9e:	2c 57       	subi	r18, 0x7C	; 124
     aa0:	3f 4f       	sbci	r19, 0xFF	; 255
     aa2:	66 e1       	ldi	r22, 0x16	; 22
     aa4:	fa 01       	movw	r30, r20
     aa6:	d9 01       	movw	r26, r18
     aa8:	01 90       	ld	r0, Z+
     aaa:	0d 92       	st	X+, r0
     aac:	6a 95       	dec	r22
     aae:	e1 f7       	brne	.-8      	; 0xaa8 <_Z41__static_initialization_and_destruction_0ii.part.5+0xe0>
     ab0:	3f 93       	push	r19
     ab2:	2f 93       	push	r18
     ab4:	4f 92       	push	r4
     ab6:	9f 93       	push	r25
     ab8:	8f 93       	push	r24
     aba:	6f 92       	push	r6
     abc:	8d ec       	ldi	r24, 0xCD	; 205
     abe:	96 e1       	ldi	r25, 0x16	; 22
     ac0:	9f 93       	push	r25
     ac2:	8f 93       	push	r24
     ac4:	85 e6       	ldi	r24, 0x65	; 101
     ac6:	96 e1       	ldi	r25, 0x16	; 22
     ac8:	9f 93       	push	r25
     aca:	8f 93       	push	r24
     acc:	ae e8       	ldi	r26, 0x8E	; 142
     ace:	b7 e0       	ldi	r27, 0x07	; 7
     ad0:	bf 93       	push	r27
     ad2:	af 93       	push	r26
     ad4:	ac ed       	ldi	r26, 0xDC	; 220
     ad6:	b7 e0       	ldi	r27, 0x07	; 7
     ad8:	bf 93       	push	r27
     ada:	af 93       	push	r26
     adc:	fa e4       	ldi	r31, 0x4A	; 74
     ade:	8f 2e       	mov	r8, r31
     ae0:	fb e0       	ldi	r31, 0x0B	; 11
     ae2:	9f 2e       	mov	r9, r31
     ae4:	ab e1       	ldi	r26, 0x1B	; 27
     ae6:	aa 2e       	mov	r10, r26
     ae8:	a8 e0       	ldi	r26, 0x08	; 8
     aea:	ba 2e       	mov	r11, r26
     aec:	b7 e6       	ldi	r27, 0x67	; 103
     aee:	cb 2e       	mov	r12, r27
     af0:	b5 e1       	ldi	r27, 0x15	; 21
     af2:	db 2e       	mov	r13, r27
     af4:	ee 24       	eor	r14, r14
     af6:	e3 94       	inc	r14
     af8:	8e 01       	movw	r16, r28
     afa:	08 5b       	subi	r16, 0xB8	; 184
     afc:	1e 4f       	sbci	r17, 0xFE	; 254
     afe:	24 e9       	ldi	r18, 0x94	; 148
     b00:	34 e0       	ldi	r19, 0x04	; 4
     b02:	49 ea       	ldi	r20, 0xA9	; 169
     b04:	52 e0       	ldi	r21, 0x02	; 2
     b06:	6d eb       	ldi	r22, 0xBD	; 189
     b08:	72 e0       	ldi	r23, 0x02	; 2
     b0a:	c9 01       	movw	r24, r18
     b0c:	82 de       	rcall	.-764    	; 0x812 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_>
     b0e:	ae 01       	movw	r20, r28
     b10:	43 5d       	subi	r20, 0xD3	; 211
     b12:	5f 4f       	sbci	r21, 0xFF	; 255
     b14:	da 01       	movw	r26, r20
     b16:	e5 2d       	mov	r30, r5
     b18:	1d 92       	st	X+, r1
     b1a:	ea 95       	dec	r30
     b1c:	e9 f7       	brne	.-6      	; 0xb18 <_Z41__static_initialization_and_destruction_0ii.part.5+0x150>
     b1e:	ce 01       	movw	r24, r28
     b20:	8d 5b       	subi	r24, 0xBD	; 189
     b22:	9f 4f       	sbci	r25, 0xFF	; 255
     b24:	dc 01       	movw	r26, r24
     b26:	e5 2d       	mov	r30, r5
     b28:	1d 92       	st	X+, r1
     b2a:	ea 95       	dec	r30
     b2c:	e9 f7       	brne	.-6      	; 0xb28 <_Z41__static_initialization_and_destruction_0ii.part.5+0x160>
     b2e:	fe 01       	movw	r30, r28
     b30:	e2 5e       	subi	r30, 0xE2	; 226
     b32:	fe 4f       	sbci	r31, 0xFE	; 254
     b34:	df 01       	movw	r26, r30
     b36:	25 e1       	ldi	r18, 0x15	; 21
     b38:	1d 92       	st	X+, r1
     b3a:	2a 95       	dec	r18
     b3c:	e9 f7       	brne	.-6      	; 0xb38 <_Z41__static_initialization_and_destruction_0ii.part.5+0x170>
     b3e:	2a e3       	ldi	r18, 0x3A	; 58
     b40:	34 e0       	ldi	r19, 0x04	; 4
     b42:	31 83       	std	Z+1, r19	; 0x01
     b44:	20 83       	st	Z, r18
     b46:	74 8a       	std	Z+20, r7	; 0x14
     b48:	25 e1       	ldi	r18, 0x15	; 21
     b4a:	de 01       	movw	r26, r28
     b4c:	a3 5a       	subi	r26, 0xA3	; 163
     b4e:	be 4f       	sbci	r27, 0xFE	; 254
     b50:	01 90       	ld	r0, Z+
     b52:	0d 92       	st	X+, r0
     b54:	2a 95       	dec	r18
     b56:	e1 f7       	brne	.-8      	; 0xb50 <_Z41__static_initialization_and_destruction_0ii.part.5+0x188>
     b58:	dc 01       	movw	r26, r24
     b5a:	7c 92       	st	X, r7
     b5c:	11 96       	adiw	r26, 0x01	; 1
     b5e:	fc 92       	st	X, r15
     b60:	11 97       	sbiw	r26, 0x01	; 1
     b62:	ea e0       	ldi	r30, 0x0A	; 10
     b64:	12 96       	adiw	r26, 0x02	; 2
     b66:	ec 93       	st	X, r30
     b68:	12 97       	sbiw	r26, 0x02	; 2
     b6a:	fc e0       	ldi	r31, 0x0C	; 12
     b6c:	13 96       	adiw	r26, 0x03	; 3
     b6e:	fc 93       	st	X, r31
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	6d e0       	ldi	r22, 0x0D	; 13
     b74:	14 96       	adiw	r26, 0x04	; 4
     b76:	6c 93       	st	X, r22
     b78:	14 97       	sbiw	r26, 0x04	; 4
     b7a:	2f e0       	ldi	r18, 0x0F	; 15
     b7c:	15 96       	adiw	r26, 0x05	; 5
     b7e:	2c 93       	st	X, r18
     b80:	15 97       	sbiw	r26, 0x05	; 5
     b82:	30 e1       	ldi	r19, 0x10	; 16
     b84:	16 96       	adiw	r26, 0x06	; 6
     b86:	3c 93       	st	X, r19
     b88:	16 97       	sbiw	r26, 0x06	; 6
     b8a:	17 96       	adiw	r26, 0x07	; 7
     b8c:	2c 92       	st	X, r2
     b8e:	17 97       	sbiw	r26, 0x07	; 7
     b90:	23 e1       	ldi	r18, 0x13	; 19
     b92:	32 2e       	mov	r3, r18
     b94:	18 96       	adiw	r26, 0x08	; 8
     b96:	3c 92       	st	X, r3
     b98:	18 97       	sbiw	r26, 0x08	; 8
     b9a:	55 96       	adiw	r26, 0x15	; 21
     b9c:	fc 92       	st	X, r15
     b9e:	9e 01       	movw	r18, r28
     ba0:	2f 54       	subi	r18, 0x4F	; 79
     ba2:	3f 4f       	sbci	r19, 0xFF	; 255
     ba4:	76 e1       	ldi	r23, 0x16	; 22
     ba6:	fc 01       	movw	r30, r24
     ba8:	d9 01       	movw	r26, r18
     baa:	01 90       	ld	r0, Z+
     bac:	0d 92       	st	X+, r0
     bae:	7a 95       	dec	r23
     bb0:	e1 f7       	brne	.-8      	; 0xbaa <_Z41__static_initialization_and_destruction_0ii.part.5+0x1e2>
     bb2:	fd a6       	std	Y+45, r15	; 0x2d
     bb4:	8a e0       	ldi	r24, 0x0A	; 10
     bb6:	8e a7       	std	Y+46, r24	; 0x2e
     bb8:	9c e0       	ldi	r25, 0x0C	; 12
     bba:	9f a7       	std	Y+47, r25	; 0x2f
     bbc:	68 ab       	std	Y+48, r22	; 0x30
     bbe:	af e0       	ldi	r26, 0x0F	; 15
     bc0:	a9 ab       	std	Y+49, r26	; 0x31
     bc2:	b0 e1       	ldi	r27, 0x10	; 16
     bc4:	ba ab       	std	Y+50, r27	; 0x32
     bc6:	2b aa       	std	Y+51, r2	; 0x33
     bc8:	3c aa       	std	Y+52, r3	; 0x34
     bca:	23 96       	adiw	r28, 0x03	; 3
     bcc:	6f ae       	std	Y+63, r6	; 0x3f
     bce:	23 97       	sbiw	r28, 0x03	; 3
     bd0:	ce 01       	movw	r24, r28
     bd2:	89 53       	subi	r24, 0x39	; 57
     bd4:	9f 4f       	sbci	r25, 0xFF	; 255
     bd6:	66 e1       	ldi	r22, 0x16	; 22
     bd8:	fa 01       	movw	r30, r20
     bda:	dc 01       	movw	r26, r24
     bdc:	01 90       	ld	r0, Z+
     bde:	0d 92       	st	X+, r0
     be0:	6a 95       	dec	r22
     be2:	e1 f7       	brne	.-8      	; 0xbdc <_Z41__static_initialization_and_destruction_0ii.part.5+0x214>
     be4:	9f 93       	push	r25
     be6:	8f 93       	push	r24
     be8:	6f 92       	push	r6
     bea:	3f 93       	push	r19
     bec:	2f 93       	push	r18
     bee:	ff 92       	push	r15
     bf0:	89 ec       	ldi	r24, 0xC9	; 201
     bf2:	98 e0       	ldi	r25, 0x08	; 8
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	84 e8       	ldi	r24, 0x84	; 132
     bfa:	98 e0       	ldi	r25, 0x08	; 8
     bfc:	9f 93       	push	r25
     bfe:	8f 93       	push	r24
     c00:	ae e8       	ldi	r26, 0x8E	; 142
     c02:	b7 e0       	ldi	r27, 0x07	; 7
     c04:	bf 93       	push	r27
     c06:	af 93       	push	r26
     c08:	ac ed       	ldi	r26, 0xDC	; 220
     c0a:	b7 e0       	ldi	r27, 0x07	; 7
     c0c:	bf 93       	push	r27
     c0e:	af 93       	push	r26
     c10:	35 ee       	ldi	r19, 0xE5	; 229
     c12:	83 2e       	mov	r8, r19
     c14:	3b e0       	ldi	r19, 0x0B	; 11
     c16:	93 2e       	mov	r9, r19
     c18:	44 e5       	ldi	r20, 0x54	; 84
     c1a:	a4 2e       	mov	r10, r20
     c1c:	48 e0       	ldi	r20, 0x08	; 8
     c1e:	b4 2e       	mov	r11, r20
     c20:	5d e3       	ldi	r21, 0x3D	; 61
     c22:	c5 2e       	mov	r12, r21
     c24:	59 e0       	ldi	r21, 0x09	; 9
     c26:	d5 2e       	mov	r13, r21
     c28:	0b 5e       	subi	r16, 0xEB	; 235
     c2a:	1f 4f       	sbci	r17, 0xFF	; 255
     c2c:	24 e9       	ldi	r18, 0x94	; 148
     c2e:	34 e0       	ldi	r19, 0x04	; 4
     c30:	42 ed       	ldi	r20, 0xD2	; 210
     c32:	52 e0       	ldi	r21, 0x02	; 2
     c34:	67 ee       	ldi	r22, 0xE7	; 231
     c36:	72 e0       	ldi	r23, 0x02	; 2
     c38:	8a e3       	ldi	r24, 0x3A	; 58
     c3a:	94 e0       	ldi	r25, 0x04	; 4
     c3c:	ea dd       	rcall	.-1068   	; 0x812 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_>
     c3e:	8c ef       	ldi	r24, 0xFC	; 252
     c40:	92 e0       	ldi	r25, 0x02	; 2
     c42:	90 93 f7 03 	sts	0x03F7, r25
     c46:	80 93 f6 03 	sts	0x03F6, r24
     c4a:	81 e1       	ldi	r24, 0x11	; 17
     c4c:	93 e0       	ldi	r25, 0x03	; 3
     c4e:	90 93 f9 03 	sts	0x03F9, r25
     c52:	80 93 f8 03 	sts	0x03F8, r24
     c56:	84 e9       	ldi	r24, 0x94	; 148
     c58:	94 e0       	ldi	r25, 0x04	; 4
     c5a:	90 93 e0 03 	sts	0x03E0, r25
     c5e:	80 93 df 03 	sts	0x03DF, r24
     c62:	10 92 0f 04 	sts	0x040F, r1
     c66:	10 92 25 04 	sts	0x0425, r1
     c6a:	70 92 28 04 	sts	0x0428, r7
     c6e:	10 92 27 04 	sts	0x0427, r1
     c72:	70 92 f5 03 	sts	0x03F5, r7
     c76:	90 93 e2 03 	sts	0x03E2, r25
     c7a:	80 93 e1 03 	sts	0x03E1, r24
     c7e:	70 92 fa 03 	sts	0x03FA, r7
     c82:	70 92 10 04 	sts	0x0410, r7
     c86:	88 e0       	ldi	r24, 0x08	; 8
     c88:	94 e0       	ldi	r25, 0x04	; 4
     c8a:	90 93 2c 04 	sts	0x042C, r25
     c8e:	80 93 2b 04 	sts	0x042B, r24
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
     c9c:	2e ef       	ldi	r18, 0xFE	; 254
     c9e:	3e e0       	ldi	r19, 0x0E	; 14
     ca0:	30 93 38 04 	sts	0x0438, r19
     ca4:	20 93 37 04 	sts	0x0437, r18
     ca8:	2f e0       	ldi	r18, 0x0F	; 15
     caa:	39 e0       	ldi	r19, 0x09	; 9
     cac:	30 93 2e 04 	sts	0x042E, r19
     cb0:	20 93 2d 04 	sts	0x042D, r18
     cb4:	90 93 30 04 	sts	0x0430, r25
     cb8:	80 93 2f 04 	sts	0x042F, r24
     cbc:	90 93 32 04 	sts	0x0432, r25
     cc0:	80 93 31 04 	sts	0x0431, r24
     cc4:	90 93 34 04 	sts	0x0434, r25
     cc8:	80 93 33 04 	sts	0x0433, r24
     ccc:	90 93 36 04 	sts	0x0436, r25
     cd0:	80 93 35 04 	sts	0x0435, r24
     cd4:	10 92 29 04 	sts	0x0429, r1
     cd8:	10 92 2a 04 	sts	0x042A, r1
     cdc:	ce 01       	movw	r24, r28
     cde:	87 5a       	subi	r24, 0xA7	; 167
     ce0:	9f 4f       	sbci	r25, 0xFF	; 255
     ce2:	dc 01       	movw	r26, r24
     ce4:	e5 2d       	mov	r30, r5
     ce6:	1d 92       	st	X+, r1
     ce8:	ea 95       	dec	r30
     cea:	e9 f7       	brne	.-6      	; 0xce6 <_Z41__static_initialization_and_destruction_0ii.part.5+0x31e>
     cec:	9e 01       	movw	r18, r28
     cee:	21 59       	subi	r18, 0x91	; 145
     cf0:	3f 4f       	sbci	r19, 0xFF	; 255
     cf2:	d9 01       	movw	r26, r18
     cf4:	1d 92       	st	X+, r1
     cf6:	5a 94       	dec	r5
     cf8:	e9 f7       	brne	.-6      	; 0xcf4 <_Z41__static_initialization_and_destruction_0ii.part.5+0x32c>
     cfa:	fe 01       	movw	r30, r28
     cfc:	ed 5c       	subi	r30, 0xCD	; 205
     cfe:	fe 4f       	sbci	r31, 0xFE	; 254
     d00:	df 01       	movw	r26, r30
     d02:	45 e1       	ldi	r20, 0x15	; 21
     d04:	1d 92       	st	X+, r1
     d06:	4a 95       	dec	r20
     d08:	e9 f7       	brne	.-6      	; 0xd04 <_Z41__static_initialization_and_destruction_0ii.part.5+0x33c>
     d0a:	a5 e8       	ldi	r26, 0x85	; 133
     d0c:	b3 e0       	ldi	r27, 0x03	; 3
     d0e:	b1 83       	std	Z+1, r27	; 0x01
     d10:	a0 83       	st	Z, r26
     d12:	74 8a       	std	Z+20, r7	; 0x14
     d14:	45 e1       	ldi	r20, 0x15	; 21
     d16:	de 01       	movw	r26, r28
     d18:	ae 58       	subi	r26, 0x8E	; 142
     d1a:	be 4f       	sbci	r27, 0xFE	; 254
     d1c:	01 90       	ld	r0, Z+
     d1e:	0d 92       	st	X+, r0
     d20:	4a 95       	dec	r20
     d22:	e1 f7       	brne	.-8      	; 0xd1c <_Z41__static_initialization_and_destruction_0ii.part.5+0x354>
     d24:	43 e0       	ldi	r20, 0x03	; 3
     d26:	f9 01       	movw	r30, r18
     d28:	40 83       	st	Z, r20
     d2a:	41 82       	std	Z+1, r4	; 0x01
     d2c:	62 82       	std	Z+2, r6	; 0x02
     d2e:	f3 82       	std	Z+3, r15	; 0x03
     d30:	4e e0       	ldi	r20, 0x0E	; 14
     d32:	44 83       	std	Z+4, r20	; 0x04
     d34:	5f e0       	ldi	r21, 0x0F	; 15
     d36:	55 83       	std	Z+5, r21	; 0x05
     d38:	36 82       	std	Z+6, r3	; 0x06
     d3a:	64 e1       	ldi	r22, 0x14	; 20
     d3c:	67 83       	std	Z+7, r22	; 0x07
     d3e:	65 8a       	std	Z+21, r6	; 0x15
     d40:	ae 01       	movw	r20, r28
     d42:	43 52       	subi	r20, 0x23	; 35
     d44:	5f 4f       	sbci	r21, 0xFF	; 255
     d46:	76 e1       	ldi	r23, 0x16	; 22
     d48:	da 01       	movw	r26, r20
     d4a:	01 90       	ld	r0, Z+
     d4c:	0d 92       	st	X+, r0
     d4e:	7a 95       	dec	r23
     d50:	e1 f7       	brne	.-8      	; 0xd4a <_Z41__static_initialization_and_destruction_0ii.part.5+0x382>
     d52:	dc 01       	movw	r26, r24
     d54:	4c 92       	st	X, r4
     d56:	e5 e0       	ldi	r30, 0x05	; 5
     d58:	11 96       	adiw	r26, 0x01	; 1
     d5a:	ec 93       	st	X, r30
     d5c:	11 97       	sbiw	r26, 0x01	; 1
     d5e:	f6 e0       	ldi	r31, 0x06	; 6
     d60:	12 96       	adiw	r26, 0x02	; 2
     d62:	fc 93       	st	X, r31
     d64:	12 97       	sbiw	r26, 0x02	; 2
     d66:	27 e0       	ldi	r18, 0x07	; 7
     d68:	13 96       	adiw	r26, 0x03	; 3
     d6a:	2c 93       	st	X, r18
     d6c:	13 97       	sbiw	r26, 0x03	; 3
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	6c 92       	st	X, r6
     d72:	14 97       	sbiw	r26, 0x04	; 4
     d74:	21 e1       	ldi	r18, 0x11	; 17
     d76:	15 96       	adiw	r26, 0x05	; 5
     d78:	2c 93       	st	X, r18
     d7a:	15 97       	sbiw	r26, 0x05	; 5
     d7c:	16 96       	adiw	r26, 0x06	; 6
     d7e:	2c 92       	st	X, r2
     d80:	16 97       	sbiw	r26, 0x06	; 6
     d82:	17 96       	adiw	r26, 0x07	; 7
     d84:	3c 92       	st	X, r3
     d86:	17 97       	sbiw	r26, 0x07	; 7
     d88:	18 96       	adiw	r26, 0x08	; 8
     d8a:	6c 93       	st	X, r22
     d8c:	18 97       	sbiw	r26, 0x08	; 8
     d8e:	55 96       	adiw	r26, 0x15	; 21
     d90:	fc 92       	st	X, r15
     d92:	9e 01       	movw	r18, r28
     d94:	2d 50       	subi	r18, 0x0D	; 13
     d96:	3f 4f       	sbci	r19, 0xFF	; 255
     d98:	66 e1       	ldi	r22, 0x16	; 22
     d9a:	fc 01       	movw	r30, r24
     d9c:	d9 01       	movw	r26, r18
     d9e:	01 90       	ld	r0, Z+
     da0:	0d 92       	st	X+, r0
     da2:	6a 95       	dec	r22
     da4:	e1 f7       	brne	.-8      	; 0xd9e <_Z41__static_initialization_and_destruction_0ii.part.5+0x3d6>
     da6:	3f 93       	push	r19
     da8:	2f 93       	push	r18
     daa:	ff 92       	push	r15
     dac:	5f 93       	push	r21
     dae:	4f 93       	push	r20
     db0:	6f 92       	push	r6
     db2:	8b e2       	ldi	r24, 0x2B	; 43
     db4:	9a e0       	ldi	r25, 0x0A	; 10
     db6:	9f 93       	push	r25
     db8:	8f 93       	push	r24
     dba:	86 e5       	ldi	r24, 0x56	; 86
     dbc:	99 e0       	ldi	r25, 0x09	; 9
     dbe:	9f 93       	push	r25
     dc0:	8f 93       	push	r24
     dc2:	8e ea       	ldi	r24, 0xAE	; 174
     dc4:	97 e0       	ldi	r25, 0x07	; 7
     dc6:	9f 93       	push	r25
     dc8:	8f 93       	push	r24
     dca:	8d ee       	ldi	r24, 0xED	; 237
     dcc:	97 e0       	ldi	r25, 0x07	; 7
     dce:	9f 93       	push	r25
     dd0:	8f 93       	push	r24
     dd2:	67 ea       	ldi	r22, 0xA7	; 167
     dd4:	86 2e       	mov	r8, r22
     dd6:	6c e0       	ldi	r22, 0x0C	; 12
     dd8:	96 2e       	mov	r9, r22
     dda:	77 e1       	ldi	r23, 0x17	; 23
     ddc:	a7 2e       	mov	r10, r23
     dde:	79 e0       	ldi	r23, 0x09	; 9
     de0:	b7 2e       	mov	r11, r23
     de2:	ea e6       	ldi	r30, 0x6A	; 106
     de4:	ce 2e       	mov	r12, r30
     de6:	e3 e1       	ldi	r30, 0x13	; 19
     de8:	de 2e       	mov	r13, r30
     dea:	0b 5e       	subi	r16, 0xEB	; 235
     dec:	1f 4f       	sbci	r17, 0xFF	; 255
     dee:	24 e9       	ldi	r18, 0x94	; 148
     df0:	34 e0       	ldi	r19, 0x04	; 4
     df2:	46 e2       	ldi	r20, 0x26	; 38
     df4:	53 e0       	ldi	r21, 0x03	; 3
     df6:	6b e3       	ldi	r22, 0x3B	; 59
     df8:	73 e0       	ldi	r23, 0x03	; 3
     dfa:	85 e8       	ldi	r24, 0x85	; 133
     dfc:	93 e0       	ldi	r25, 0x03	; 3
     dfe:	09 dd       	rcall	.-1518   	; 0x812 <_ZN9CMenuItem9initClassEPcS0_PS_PS1_cPFvS1_ES4_S4_S4_S4_S4_S4_cS0_cS0_>
     e00:	0f b6       	in	r0, 0x3f	; 63
     e02:	f8 94       	cli
     e04:	de bf       	out	0x3e, r29	; 62
     e06:	0f be       	out	0x3f, r0	; 63
     e08:	cd bf       	out	0x3d, r28	; 61
     e0a:	ca 57       	subi	r28, 0x7A	; 122
     e0c:	de 4f       	sbci	r29, 0xFE	; 254
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	de bf       	out	0x3e, r29	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	cd bf       	out	0x3d, r28	; 61
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	ff 90       	pop	r15
     e22:	ef 90       	pop	r14
     e24:	df 90       	pop	r13
     e26:	cf 90       	pop	r12
     e28:	bf 90       	pop	r11
     e2a:	af 90       	pop	r10
     e2c:	9f 90       	pop	r9
     e2e:	8f 90       	pop	r8
     e30:	7f 90       	pop	r7
     e32:	6f 90       	pop	r6
     e34:	5f 90       	pop	r5
     e36:	4f 90       	pop	r4
     e38:	3f 90       	pop	r3
     e3a:	2f 90       	pop	r2
     e3c:	08 95       	ret

00000e3e <_ZN9CMenuItem17getCursorPositionEv>:
     e3e:	fc 01       	movw	r30, r24
     e40:	e7 5b       	subi	r30, 0xB7	; 183
     e42:	ff 4f       	sbci	r31, 0xFF	; 255
     e44:	20 81       	ld	r18, Z
     e46:	21 30       	cpi	r18, 0x01	; 1
     e48:	39 f4       	brne	.+14     	; 0xe58 <_ZN9CMenuItem17getCursorPositionEv+0x1a>
     e4a:	31 97       	sbiw	r30, 0x01	; 1
     e4c:	30 81       	ld	r19, Z
     e4e:	fc 01       	movw	r30, r24
     e50:	e3 0f       	add	r30, r19
     e52:	f1 1d       	adc	r31, r1
     e54:	33 8d       	ldd	r19, Z+27	; 0x1b
     e56:	0a c0       	rjmp	.+20     	; 0xe6c <_ZN9CMenuItem17getCursorPositionEv+0x2e>
     e58:	22 30       	cpi	r18, 0x02	; 2
     e5a:	41 f4       	brne	.+16     	; 0xe6c <_ZN9CMenuItem17getCursorPositionEv+0x2e>
     e5c:	fc 01       	movw	r30, r24
     e5e:	e8 5b       	subi	r30, 0xB8	; 184
     e60:	ff 4f       	sbci	r31, 0xFF	; 255
     e62:	30 81       	ld	r19, Z
     e64:	fc 01       	movw	r30, r24
     e66:	e3 0f       	add	r30, r19
     e68:	f1 1d       	adc	r31, r1
     e6a:	31 a9       	ldd	r19, Z+49	; 0x31
     e6c:	c9 01       	movw	r24, r18
     e6e:	08 95       	ret

00000e70 <_ZN9CMenuItem10incrCurPosEv>:
     e70:	fc 01       	movw	r30, r24
     e72:	e8 5b       	subi	r30, 0xB8	; 184
     e74:	ff 4f       	sbci	r31, 0xFF	; 255
     e76:	40 81       	ld	r20, Z
     e78:	24 2f       	mov	r18, r20
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	dc 01       	movw	r26, r24
     e7e:	a7 5b       	subi	r26, 0xB7	; 183
     e80:	bf 4f       	sbci	r27, 0xFF	; 255
     e82:	5c 91       	ld	r21, X
     e84:	85 0f       	add	r24, r21
     e86:	91 1d       	adc	r25, r1
     e88:	dc 01       	movw	r26, r24
     e8a:	a7 5b       	subi	r26, 0xB7	; 183
     e8c:	bf 4f       	sbci	r27, 0xFF	; 255
     e8e:	8c 91       	ld	r24, X
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	01 97       	sbiw	r24, 0x01	; 1
     e94:	28 17       	cp	r18, r24
     e96:	39 07       	cpc	r19, r25
     e98:	11 f4       	brne	.+4      	; 0xe9e <_ZN9CMenuItem10incrCurPosEv+0x2e>
     e9a:	10 82       	st	Z, r1
     e9c:	08 95       	ret
     e9e:	4f 5f       	subi	r20, 0xFF	; 255
     ea0:	40 83       	st	Z, r20
     ea2:	08 95       	ret

00000ea4 <_ZN9CMenuItem10decrCurPosEv>:
     ea4:	fc 01       	movw	r30, r24
     ea6:	e8 5b       	subi	r30, 0xB8	; 184
     ea8:	ff 4f       	sbci	r31, 0xFF	; 255
     eaa:	20 81       	ld	r18, Z
     eac:	21 11       	cpse	r18, r1
     eae:	0d c0       	rjmp	.+26     	; 0xeca <_ZN9CMenuItem10decrCurPosEv+0x26>
     eb0:	dc 01       	movw	r26, r24
     eb2:	a7 5b       	subi	r26, 0xB7	; 183
     eb4:	bf 4f       	sbci	r27, 0xFF	; 255
     eb6:	2c 91       	ld	r18, X
     eb8:	82 0f       	add	r24, r18
     eba:	91 1d       	adc	r25, r1
     ebc:	dc 01       	movw	r26, r24
     ebe:	a7 5b       	subi	r26, 0xB7	; 183
     ec0:	bf 4f       	sbci	r27, 0xFF	; 255
     ec2:	8c 91       	ld	r24, X
     ec4:	81 50       	subi	r24, 0x01	; 1
     ec6:	80 83       	st	Z, r24
     ec8:	08 95       	ret
     eca:	21 50       	subi	r18, 0x01	; 1
     ecc:	20 83       	st	Z, r18
     ece:	08 95       	ret

00000ed0 <_ZN9CMenuItem9changeRowEv>:
     ed0:	fc 01       	movw	r30, r24
     ed2:	e7 5b       	subi	r30, 0xB7	; 183
     ed4:	ff 4f       	sbci	r31, 0xFF	; 255
     ed6:	20 81       	ld	r18, Z
     ed8:	21 30       	cpi	r18, 0x01	; 1
     eda:	51 f4       	brne	.+20     	; 0xef0 <_ZN9CMenuItem9changeRowEv+0x20>
     edc:	dc 01       	movw	r26, r24
     ede:	a5 5b       	subi	r26, 0xB5	; 181
     ee0:	bf 4f       	sbci	r27, 0xFF	; 255
     ee2:	2c 91       	ld	r18, X
     ee4:	22 23       	and	r18, r18
     ee6:	91 f0       	breq	.+36     	; 0xf0c <_ZN9CMenuItem9changeRowEv+0x3c>
     ee8:	22 e0       	ldi	r18, 0x02	; 2
     eea:	20 83       	st	Z, r18
     eec:	31 97       	sbiw	r30, 0x01	; 1
     eee:	0d c0       	rjmp	.+26     	; 0xf0a <_ZN9CMenuItem9changeRowEv+0x3a>
     ef0:	22 30       	cpi	r18, 0x02	; 2
     ef2:	61 f4       	brne	.+24     	; 0xf0c <_ZN9CMenuItem9changeRowEv+0x3c>
     ef4:	dc 01       	movw	r26, r24
     ef6:	a6 5b       	subi	r26, 0xB6	; 182
     ef8:	bf 4f       	sbci	r27, 0xFF	; 255
     efa:	2c 91       	ld	r18, X
     efc:	22 23       	and	r18, r18
     efe:	31 f0       	breq	.+12     	; 0xf0c <_ZN9CMenuItem9changeRowEv+0x3c>
     f00:	21 e0       	ldi	r18, 0x01	; 1
     f02:	20 83       	st	Z, r18
     f04:	fc 01       	movw	r30, r24
     f06:	e8 5b       	subi	r30, 0xB8	; 184
     f08:	ff 4f       	sbci	r31, 0xFF	; 255
     f0a:	10 82       	st	Z, r1
     f0c:	08 95       	ret

00000f0e <_ZN9CMenuItem4drawEv>:
     f0e:	fc 01       	movw	r30, r24
     f10:	e8 5a       	subi	r30, 0xA8	; 168
     f12:	ff 4f       	sbci	r31, 0xFF	; 255
     f14:	01 90       	ld	r0, Z+
     f16:	f0 81       	ld	r31, Z
     f18:	e0 2d       	mov	r30, r0
     f1a:	09 94       	ijmp

00000f1c <_Z9rightFuncP9CMenuItem>:
     f1c:	cf 93       	push	r28
     f1e:	df 93       	push	r29
     f20:	ec 01       	movw	r28, r24
     f22:	fc 01       	movw	r30, r24
     f24:	e8 5b       	subi	r30, 0xB8	; 184
     f26:	ff 4f       	sbci	r31, 0xFF	; 255
     f28:	20 81       	ld	r18, Z
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	31 96       	adiw	r30, 0x01	; 1
     f2e:	80 81       	ld	r24, Z
     f30:	81 30       	cpi	r24, 0x01	; 1
     f32:	11 f4       	brne	.+4      	; 0xf38 <_Z9rightFuncP9CMenuItem+0x1c>
     f34:	88 a9       	ldd	r24, Y+48	; 0x30
     f36:	04 c0       	rjmp	.+8      	; 0xf40 <_Z9rightFuncP9CMenuItem+0x24>
     f38:	fe 01       	movw	r30, r28
     f3a:	ea 5b       	subi	r30, 0xBA	; 186
     f3c:	ff 4f       	sbci	r31, 0xFF	; 255
     f3e:	80 81       	ld	r24, Z
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	01 97       	sbiw	r24, 0x01	; 1
     f44:	28 17       	cp	r18, r24
     f46:	39 07       	cpc	r19, r25
     f48:	19 f4       	brne	.+6      	; 0xf50 <_Z9rightFuncP9CMenuItem+0x34>
     f4a:	ce 01       	movw	r24, r28
     f4c:	c1 df       	rcall	.-126    	; 0xed0 <_ZN9CMenuItem9changeRowEv>
     f4e:	02 c0       	rjmp	.+4      	; 0xf54 <_Z9rightFuncP9CMenuItem+0x38>
     f50:	ce 01       	movw	r24, r28
     f52:	8e df       	rcall	.-228    	; 0xe70 <_ZN9CMenuItem10incrCurPosEv>
     f54:	ce 01       	movw	r24, r28
     f56:	df 91       	pop	r29
     f58:	cf 91       	pop	r28
     f5a:	d9 cf       	rjmp	.-78     	; 0xf0e <_ZN9CMenuItem4drawEv>

00000f5c <_Z17rightFuncZselItemP9CMenuItem>:
     f5c:	0f 93       	push	r16
     f5e:	1f 93       	push	r17
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	ec 01       	movw	r28, r24
     f66:	da df       	rcall	.-76     	; 0xf1c <_Z9rightFuncP9CMenuItem>
     f68:	8e 01       	movw	r16, r28
     f6a:	07 5b       	subi	r16, 0xB7	; 183
     f6c:	1f 4f       	sbci	r17, 0xFF	; 255
     f6e:	f8 01       	movw	r30, r16
     f70:	80 81       	ld	r24, Z
     f72:	81 30       	cpi	r24, 0x01	; 1
     f74:	49 f4       	brne	.+18     	; 0xf88 <_Z17rightFuncZselItemP9CMenuItem+0x2c>
     f76:	31 97       	sbiw	r30, 0x01	; 1
     f78:	e0 81       	ld	r30, Z
     f7a:	e6 95       	lsr	r30
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	ee 5f       	subi	r30, 0xFE	; 254
     f80:	fe 4f       	sbci	r31, 0xFE	; 254
     f82:	80 81       	ld	r24, Z
     f84:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <_Z9ChangeReg7regAddr>
     f88:	f8 01       	movw	r30, r16
     f8a:	80 81       	ld	r24, Z
     f8c:	82 30       	cpi	r24, 0x02	; 2
     f8e:	79 f4       	brne	.+30     	; 0xfae <_Z17rightFuncZselItemP9CMenuItem+0x52>
     f90:	c8 5b       	subi	r28, 0xB8	; 184
     f92:	df 4f       	sbci	r29, 0xFF	; 255
     f94:	e8 81       	ld	r30, Y
     f96:	e6 95       	lsr	r30
     f98:	e6 95       	lsr	r30
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	e0 50       	subi	r30, 0x00	; 0
     f9e:	ff 4f       	sbci	r31, 0xFF	; 255
     fa0:	80 81       	ld	r24, Z
     fa2:	df 91       	pop	r29
     fa4:	cf 91       	pop	r28
     fa6:	1f 91       	pop	r17
     fa8:	0f 91       	pop	r16
     faa:	0c 94 d0 17 	jmp	0x2fa0	; 0x2fa0 <_Z9ChangeReg7regAddr>
     fae:	df 91       	pop	r29
     fb0:	cf 91       	pop	r28
     fb2:	1f 91       	pop	r17
     fb4:	0f 91       	pop	r16
     fb6:	08 95       	ret

00000fb8 <_Z8leftFuncP9CMenuItem>:
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	ec 01       	movw	r28, r24
     fbe:	fc 01       	movw	r30, r24
     fc0:	e8 5b       	subi	r30, 0xB8	; 184
     fc2:	ff 4f       	sbci	r31, 0xFF	; 255
     fc4:	80 81       	ld	r24, Z
     fc6:	81 11       	cpse	r24, r1
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <_Z8leftFuncP9CMenuItem+0x16>
     fca:	ce 01       	movw	r24, r28
     fcc:	81 df       	rcall	.-254    	; 0xed0 <_ZN9CMenuItem9changeRowEv>
     fce:	ce 01       	movw	r24, r28
     fd0:	69 df       	rcall	.-302    	; 0xea4 <_ZN9CMenuItem10decrCurPosEv>
     fd2:	ce 01       	movw	r24, r28
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	9a cf       	rjmp	.-204    	; 0xf0e <_ZN9CMenuItem4drawEv>

00000fda <_Z16leftFuncZselItemP9CMenuItem>:
     fda:	0f 93       	push	r16
     fdc:	1f 93       	push	r17
     fde:	cf 93       	push	r28
     fe0:	df 93       	push	r29
     fe2:	ec 01       	movw	r28, r24
     fe4:	e9 df       	rcall	.-46     	; 0xfb8 <_Z8leftFuncP9CMenuItem>
     fe6:	8e 01       	movw	r16, r28
     fe8:	07 5b       	subi	r16, 0xB7	; 183
     fea:	1f 4f       	sbci	r17, 0xFF	; 255
     fec:	f8 01       	movw	r30, r16
     fee:	80 81       	ld	r24, Z
     ff0:	81 30       	cpi	r24, 0x01	; 1
     ff2:	49 f4       	brne	.+18     	; 0x1006 <_Z16leftFuncZselItemP9CMenuItem+0x2c>
     ff4:	31 97       	sbiw	r30, 0x01	; 1
     ff6:	e0 81       	ld	r30, Z
     ff8:	e6 95       	lsr	r30
     ffa:	f0 e0       	ldi	r31, 0x00	; 0
     ffc:	ee 5f       	subi	r30, 0xFE	; 254
     ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    1000:	80 81       	ld	r24, Z
    1002:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <_Z9ChangeReg7regAddr>
    1006:	f8 01       	movw	r30, r16
    1008:	80 81       	ld	r24, Z
    100a:	82 30       	cpi	r24, 0x02	; 2
    100c:	79 f4       	brne	.+30     	; 0x102c <_Z16leftFuncZselItemP9CMenuItem+0x52>
    100e:	c8 5b       	subi	r28, 0xB8	; 184
    1010:	df 4f       	sbci	r29, 0xFF	; 255
    1012:	e8 81       	ld	r30, Y
    1014:	e6 95       	lsr	r30
    1016:	e6 95       	lsr	r30
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	e0 50       	subi	r30, 0x00	; 0
    101c:	ff 4f       	sbci	r31, 0xFF	; 255
    101e:	80 81       	ld	r24, Z
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	1f 91       	pop	r17
    1026:	0f 91       	pop	r16
    1028:	0c 94 d0 17 	jmp	0x2fa0	; 0x2fa0 <_Z9ChangeReg7regAddr>
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	1f 91       	pop	r17
    1032:	0f 91       	pop	r16
    1034:	08 95       	ret

00001036 <_Z7escFuncP9CMenuItem>:
    1036:	fc 01       	movw	r30, r24
    1038:	e8 5b       	subi	r30, 0xB8	; 184
    103a:	ff 4f       	sbci	r31, 0xFF	; 255
    103c:	10 82       	st	Z, r1
    103e:	31 96       	adiw	r30, 0x01	; 1
    1040:	21 e0       	ldi	r18, 0x01	; 1
    1042:	20 83       	st	Z, r18
    1044:	fc 01       	movw	r30, r24
    1046:	80 81       	ld	r24, Z
    1048:	91 81       	ldd	r25, Z+1	; 0x01
    104a:	90 93 53 05 	sts	0x0553, r25
    104e:	80 93 52 05 	sts	0x0552, r24
    1052:	10 92 ef 04 	sts	0x04EF, r1
    1056:	85 e0       	ldi	r24, 0x05	; 5
    1058:	8f d8       	rcall	.-3810   	; 0x178 <_Z15read_steady_adch>
    105a:	80 93 ee 04 	sts	0x04EE, r24
    105e:	80 91 49 05 	lds	r24, 0x0549
    1062:	81 11       	cpse	r24, r1
    1064:	0c c0       	rjmp	.+24     	; 0x107e <_Z7escFuncP9CMenuItem+0x48>
    1066:	8f ed       	ldi	r24, 0xDF	; 223
    1068:	93 e0       	ldi	r25, 0x03	; 3
    106a:	51 df       	rcall	.-350    	; 0xf0e <_ZN9CMenuItem4drawEv>
    106c:	ff ef       	ldi	r31, 0xFF	; 255
    106e:	2f e9       	ldi	r18, 0x9F	; 159
    1070:	82 e3       	ldi	r24, 0x32	; 50
    1072:	f1 50       	subi	r31, 0x01	; 1
    1074:	20 40       	sbci	r18, 0x00	; 0
    1076:	80 40       	sbci	r24, 0x00	; 0
    1078:	e1 f7       	brne	.-8      	; 0x1072 <_Z7escFuncP9CMenuItem+0x3c>
    107a:	00 c0       	rjmp	.+0      	; 0x107c <_Z7escFuncP9CMenuItem+0x46>
    107c:	00 00       	nop
    107e:	80 91 49 05 	lds	r24, 0x0549
    1082:	81 30       	cpi	r24, 0x01	; 1
    1084:	61 f4       	brne	.+24     	; 0x109e <_Z7escFuncP9CMenuItem+0x68>
    1086:	85 e8       	ldi	r24, 0x85	; 133
    1088:	93 e0       	ldi	r25, 0x03	; 3
    108a:	41 df       	rcall	.-382    	; 0xf0e <_ZN9CMenuItem4drawEv>
    108c:	9f ef       	ldi	r25, 0xFF	; 255
    108e:	ef e9       	ldi	r30, 0x9F	; 159
    1090:	f2 e3       	ldi	r31, 0x32	; 50
    1092:	91 50       	subi	r25, 0x01	; 1
    1094:	e0 40       	sbci	r30, 0x00	; 0
    1096:	f0 40       	sbci	r31, 0x00	; 0
    1098:	e1 f7       	brne	.-8      	; 0x1092 <_Z7escFuncP9CMenuItem+0x5c>
    109a:	00 c0       	rjmp	.+0      	; 0x109c <_Z7escFuncP9CMenuItem+0x66>
    109c:	00 00       	nop
    109e:	80 91 52 05 	lds	r24, 0x0552
    10a2:	90 91 53 05 	lds	r25, 0x0553
    10a6:	33 cf       	rjmp	.-410    	; 0xf0e <_ZN9CMenuItem4drawEv>

000010a8 <_Z14escFuncPrkMenuP9CMenuItem>:
    10a8:	fc 01       	movw	r30, r24
    10aa:	e7 5b       	subi	r30, 0xB7	; 183
    10ac:	ff 4f       	sbci	r31, 0xFF	; 255
    10ae:	20 81       	ld	r18, Z
    10b0:	dc 01       	movw	r26, r24
    10b2:	a8 5b       	subi	r26, 0xB8	; 184
    10b4:	bf 4f       	sbci	r27, 0xFF	; 255
    10b6:	21 30       	cpi	r18, 0x01	; 1
    10b8:	19 f4       	brne	.+6      	; 0x10c0 <_Z14escFuncPrkMenuP9CMenuItem+0x18>
    10ba:	2c 91       	ld	r18, X
    10bc:	22 23       	and	r18, r18
    10be:	e1 f0       	breq	.+56     	; 0x10f8 <_Z14escFuncPrkMenuP9CMenuItem+0x50>
    10c0:	1c 92       	st	X, r1
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	80 83       	st	Z, r24
    10c6:	69 ef       	ldi	r22, 0xF9	; 249
    10c8:	74 e0       	ldi	r23, 0x04	; 4
    10ca:	8f ef       	ldi	r24, 0xFF	; 255
    10cc:	9f e0       	ldi	r25, 0x0F	; 15
    10ce:	37 d9       	rcall	.-3474   	; 0x33e <_Z13Read_ControlljPh>
    10d0:	6d ef       	ldi	r22, 0xFD	; 253
    10d2:	74 e0       	ldi	r23, 0x04	; 4
    10d4:	8e ef       	ldi	r24, 0xFE	; 254
    10d6:	9f e0       	ldi	r25, 0x0F	; 15
    10d8:	32 d9       	rcall	.-3484   	; 0x33e <_Z13Read_ControlljPh>
    10da:	61 e0       	ldi	r22, 0x01	; 1
    10dc:	75 e0       	ldi	r23, 0x05	; 5
    10de:	8d ef       	ldi	r24, 0xFD	; 253
    10e0:	9f e0       	ldi	r25, 0x0F	; 15
    10e2:	2d d9       	rcall	.-3494   	; 0x33e <_Z13Read_ControlljPh>
    10e4:	65 e0       	ldi	r22, 0x05	; 5
    10e6:	75 e0       	ldi	r23, 0x05	; 5
    10e8:	8c ef       	ldi	r24, 0xFC	; 252
    10ea:	9f e0       	ldi	r25, 0x0F	; 15
    10ec:	28 d9       	rcall	.-3504   	; 0x33e <_Z13Read_ControlljPh>
    10ee:	80 91 52 05 	lds	r24, 0x0552
    10f2:	90 91 53 05 	lds	r25, 0x0553
    10f6:	0b cf       	rjmp	.-490    	; 0xf0e <_ZN9CMenuItem4drawEv>
    10f8:	fc 01       	movw	r30, r24
    10fa:	80 81       	ld	r24, Z
    10fc:	91 81       	ldd	r25, Z+1	; 0x01
    10fe:	90 93 53 05 	sts	0x0553, r25
    1102:	80 93 52 05 	sts	0x0552, r24
    1106:	df cf       	rjmp	.-66     	; 0x10c6 <_Z14escFuncPrkMenuP9CMenuItem+0x1e>

00001108 <_Z13upFuncPrkMenuP9CMenuItem>:
    1108:	fc 01       	movw	r30, r24
    110a:	e8 5b       	subi	r30, 0xB8	; 184
    110c:	ff 4f       	sbci	r31, 0xFF	; 255
    110e:	40 81       	ld	r20, Z
    1110:	31 96       	adiw	r30, 0x01	; 1
    1112:	20 91 39 04 	lds	r18, 0x0439
    1116:	41 11       	cpse	r20, r1
    1118:	03 c0       	rjmp	.+6      	; 0x1120 <_Z13upFuncPrkMenuP9CMenuItem+0x18>
    111a:	30 81       	ld	r19, Z
    111c:	31 30       	cpi	r19, 0x01	; 1
    111e:	89 f1       	breq	.+98     	; 0x1182 <_Z13upFuncPrkMenuP9CMenuItem+0x7a>
    1120:	e0 81       	ld	r30, Z
    1122:	3e 2f       	mov	r19, r30
    1124:	31 70       	andi	r19, 0x01	; 1
    1126:	43 1b       	sub	r20, r19
    1128:	e6 95       	lsr	r30
    112a:	34 2f       	mov	r19, r20
    112c:	36 95       	lsr	r19
    112e:	40 fd       	sbrc	r20, 0
    1130:	13 c0       	rjmp	.+38     	; 0x1158 <_Z13upFuncPrkMenuP9CMenuItem+0x50>
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	e2 0f       	add	r30, r18
    1136:	f1 1d       	adc	r31, r1
    1138:	e2 0f       	add	r30, r18
    113a:	f1 1d       	adc	r31, r1
    113c:	ee 0f       	add	r30, r30
    113e:	ff 1f       	adc	r31, r31
    1140:	ee 0f       	add	r30, r30
    1142:	ff 1f       	adc	r31, r31
    1144:	e0 51       	subi	r30, 0x10	; 16
    1146:	fb 4f       	sbci	r31, 0xFB	; 251
    1148:	e3 0f       	add	r30, r19
    114a:	f1 1d       	adc	r31, r1
    114c:	31 85       	ldd	r19, Z+9	; 0x09
    114e:	23 2f       	mov	r18, r19
    1150:	20 7f       	andi	r18, 0xF0	; 240
    1152:	20 5f       	subi	r18, 0xF0	; 240
    1154:	3f 70       	andi	r19, 0x0F	; 15
    1156:	12 c0       	rjmp	.+36     	; 0x117c <_Z13upFuncPrkMenuP9CMenuItem+0x74>
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	e2 0f       	add	r30, r18
    115c:	f1 1d       	adc	r31, r1
    115e:	e2 0f       	add	r30, r18
    1160:	f1 1d       	adc	r31, r1
    1162:	ee 0f       	add	r30, r30
    1164:	ff 1f       	adc	r31, r31
    1166:	ee 0f       	add	r30, r30
    1168:	ff 1f       	adc	r31, r31
    116a:	e0 51       	subi	r30, 0x10	; 16
    116c:	fb 4f       	sbci	r31, 0xFB	; 251
    116e:	e3 0f       	add	r30, r19
    1170:	f1 1d       	adc	r31, r1
    1172:	31 85       	ldd	r19, Z+9	; 0x09
    1174:	21 e0       	ldi	r18, 0x01	; 1
    1176:	23 0f       	add	r18, r19
    1178:	2f 70       	andi	r18, 0x0F	; 15
    117a:	30 7f       	andi	r19, 0xF0	; 240
    117c:	23 2b       	or	r18, r19
    117e:	21 87       	std	Z+9, r18	; 0x09
    1180:	c6 ce       	rjmp	.-628    	; 0xf0e <_ZN9CMenuItem4drawEv>
    1182:	21 11       	cpse	r18, r1
    1184:	03 c0       	rjmp	.+6      	; 0x118c <_Z13upFuncPrkMenuP9CMenuItem+0x84>
    1186:	30 93 39 04 	sts	0x0439, r19
    118a:	fa cf       	rjmp	.-12     	; 0x1180 <_Z13upFuncPrkMenuP9CMenuItem+0x78>
    118c:	10 92 39 04 	sts	0x0439, r1
    1190:	f7 cf       	rjmp	.-18     	; 0x1180 <_Z13upFuncPrkMenuP9CMenuItem+0x78>

00001192 <_Z15downFuncPrkMenuP9CMenuItem>:
    1192:	fc 01       	movw	r30, r24
    1194:	e8 5b       	subi	r30, 0xB8	; 184
    1196:	ff 4f       	sbci	r31, 0xFF	; 255
    1198:	40 81       	ld	r20, Z
    119a:	31 96       	adiw	r30, 0x01	; 1
    119c:	20 91 39 04 	lds	r18, 0x0439
    11a0:	41 11       	cpse	r20, r1
    11a2:	03 c0       	rjmp	.+6      	; 0x11aa <_Z15downFuncPrkMenuP9CMenuItem+0x18>
    11a4:	30 81       	ld	r19, Z
    11a6:	31 30       	cpi	r19, 0x01	; 1
    11a8:	89 f1       	breq	.+98     	; 0x120c <_Z15downFuncPrkMenuP9CMenuItem+0x7a>
    11aa:	e0 81       	ld	r30, Z
    11ac:	3e 2f       	mov	r19, r30
    11ae:	31 70       	andi	r19, 0x01	; 1
    11b0:	43 1b       	sub	r20, r19
    11b2:	e6 95       	lsr	r30
    11b4:	34 2f       	mov	r19, r20
    11b6:	36 95       	lsr	r19
    11b8:	40 fd       	sbrc	r20, 0
    11ba:	13 c0       	rjmp	.+38     	; 0x11e2 <_Z15downFuncPrkMenuP9CMenuItem+0x50>
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	e2 0f       	add	r30, r18
    11c0:	f1 1d       	adc	r31, r1
    11c2:	e2 0f       	add	r30, r18
    11c4:	f1 1d       	adc	r31, r1
    11c6:	ee 0f       	add	r30, r30
    11c8:	ff 1f       	adc	r31, r31
    11ca:	ee 0f       	add	r30, r30
    11cc:	ff 1f       	adc	r31, r31
    11ce:	e0 51       	subi	r30, 0x10	; 16
    11d0:	fb 4f       	sbci	r31, 0xFB	; 251
    11d2:	e3 0f       	add	r30, r19
    11d4:	f1 1d       	adc	r31, r1
    11d6:	31 85       	ldd	r19, Z+9	; 0x09
    11d8:	23 2f       	mov	r18, r19
    11da:	20 7f       	andi	r18, 0xF0	; 240
    11dc:	20 51       	subi	r18, 0x10	; 16
    11de:	3f 70       	andi	r19, 0x0F	; 15
    11e0:	12 c0       	rjmp	.+36     	; 0x1206 <_Z15downFuncPrkMenuP9CMenuItem+0x74>
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	e2 0f       	add	r30, r18
    11e6:	f1 1d       	adc	r31, r1
    11e8:	e2 0f       	add	r30, r18
    11ea:	f1 1d       	adc	r31, r1
    11ec:	ee 0f       	add	r30, r30
    11ee:	ff 1f       	adc	r31, r31
    11f0:	ee 0f       	add	r30, r30
    11f2:	ff 1f       	adc	r31, r31
    11f4:	e0 51       	subi	r30, 0x10	; 16
    11f6:	fb 4f       	sbci	r31, 0xFB	; 251
    11f8:	e3 0f       	add	r30, r19
    11fa:	f1 1d       	adc	r31, r1
    11fc:	31 85       	ldd	r19, Z+9	; 0x09
    11fe:	2f ef       	ldi	r18, 0xFF	; 255
    1200:	23 0f       	add	r18, r19
    1202:	2f 70       	andi	r18, 0x0F	; 15
    1204:	30 7f       	andi	r19, 0xF0	; 240
    1206:	23 2b       	or	r18, r19
    1208:	21 87       	std	Z+9, r18	; 0x09
    120a:	81 ce       	rjmp	.-766    	; 0xf0e <_ZN9CMenuItem4drawEv>
    120c:	22 23       	and	r18, r18
    120e:	21 f0       	breq	.+8      	; 0x1218 <_Z15downFuncPrkMenuP9CMenuItem+0x86>
    1210:	21 50       	subi	r18, 0x01	; 1
    1212:	20 93 39 04 	sts	0x0439, r18
    1216:	f9 cf       	rjmp	.-14     	; 0x120a <_Z15downFuncPrkMenuP9CMenuItem+0x78>
    1218:	30 93 39 04 	sts	0x0439, r19
    121c:	f6 cf       	rjmp	.-20     	; 0x120a <_Z15downFuncPrkMenuP9CMenuItem+0x78>

0000121e <_Z10escFuncLCAP9CMenuItem>:
    121e:	fc 01       	movw	r30, r24
    1220:	80 81       	ld	r24, Z
    1222:	91 81       	ldd	r25, Z+1	; 0x01
    1224:	90 93 53 05 	sts	0x0553, r25
    1228:	80 93 52 05 	sts	0x0552, r24
    122c:	70 ce       	rjmp	.-800    	; 0xf0e <_ZN9CMenuItem4drawEv>

0000122e <_Z15escFuncZselMenuP9CMenuItem>:
    122e:	fc 01       	movw	r30, r24
    1230:	e7 5b       	subi	r30, 0xB7	; 183
    1232:	ff 4f       	sbci	r31, 0xFF	; 255
    1234:	20 81       	ld	r18, Z
    1236:	21 30       	cpi	r18, 0x01	; 1
    1238:	21 f4       	brne	.+8      	; 0x1242 <_Z15escFuncZselMenuP9CMenuItem+0x14>
    123a:	31 97       	sbiw	r30, 0x01	; 1
    123c:	20 81       	ld	r18, Z
    123e:	22 23       	and	r18, r18
    1240:	81 f0       	breq	.+32     	; 0x1262 <_Z15escFuncZselMenuP9CMenuItem+0x34>
    1242:	80 91 52 05 	lds	r24, 0x0552
    1246:	90 91 53 05 	lds	r25, 0x0553
    124a:	fc 01       	movw	r30, r24
    124c:	e8 5b       	subi	r30, 0xB8	; 184
    124e:	ff 4f       	sbci	r31, 0xFF	; 255
    1250:	10 82       	st	Z, r1
    1252:	31 96       	adiw	r30, 0x01	; 1
    1254:	21 e0       	ldi	r18, 0x01	; 1
    1256:	20 83       	st	Z, r18
    1258:	80 91 52 05 	lds	r24, 0x0552
    125c:	90 91 53 05 	lds	r25, 0x0553
    1260:	56 ce       	rjmp	.-852    	; 0xf0e <_ZN9CMenuItem4drawEv>
    1262:	fc 01       	movw	r30, r24
    1264:	80 81       	ld	r24, Z
    1266:	91 81       	ldd	r25, Z+1	; 0x01
    1268:	90 93 53 05 	sts	0x0553, r25
    126c:	80 93 52 05 	sts	0x0552, r24
    1270:	f3 cf       	rjmp	.-26     	; 0x1258 <_Z15escFuncZselMenuP9CMenuItem+0x2a>

00001272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>:
    1272:	42 e6       	ldi	r20, 0x62	; 98
    1274:	50 e0       	ldi	r21, 0x00	; 0
    1276:	0c 94 15 1a 	jmp	0x342a	; 0x342a <__eeupd_block_m128>

0000127a <_Z13okFuncPrkMenuP9CMenuItem>:
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	80 ef       	ldi	r24, 0xF0	; 240
    1280:	94 e0       	ldi	r25, 0x04	; 4
    1282:	f7 df       	rcall	.-18     	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    1284:	69 ef       	ldi	r22, 0xF9	; 249
    1286:	74 e0       	ldi	r23, 0x04	; 4
    1288:	8f ef       	ldi	r24, 0xFF	; 255
    128a:	97 e0       	ldi	r25, 0x07	; 7
    128c:	33 d8       	rcall	.-3994   	; 0x2f4 <_Z14Write_ControlljPh>
    128e:	6d ef       	ldi	r22, 0xFD	; 253
    1290:	74 e0       	ldi	r23, 0x04	; 4
    1292:	8e ef       	ldi	r24, 0xFE	; 254
    1294:	97 e0       	ldi	r25, 0x07	; 7
    1296:	2e d8       	rcall	.-4004   	; 0x2f4 <_Z14Write_ControlljPh>
    1298:	61 e0       	ldi	r22, 0x01	; 1
    129a:	75 e0       	ldi	r23, 0x05	; 5
    129c:	8d ef       	ldi	r24, 0xFD	; 253
    129e:	97 e0       	ldi	r25, 0x07	; 7
    12a0:	29 d8       	rcall	.-4014   	; 0x2f4 <_Z14Write_ControlljPh>
    12a2:	65 e0       	ldi	r22, 0x05	; 5
    12a4:	75 e0       	ldi	r23, 0x05	; 5
    12a6:	8c ef       	ldi	r24, 0xFC	; 252
    12a8:	97 e0       	ldi	r25, 0x07	; 7
    12aa:	24 c8       	rjmp	.-4024   	; 0x2f4 <_Z14Write_ControlljPh>

000012ac <_Z14upFuncZselMenuP9CMenuItem>:
    12ac:	cf 93       	push	r28
    12ae:	df 93       	push	r29
    12b0:	ec 01       	movw	r28, r24
    12b2:	e0 91 52 05 	lds	r30, 0x0552
    12b6:	f0 91 53 05 	lds	r31, 0x0553
    12ba:	e7 5b       	subi	r30, 0xB7	; 183
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	80 81       	ld	r24, Z
    12c0:	81 30       	cpi	r24, 0x01	; 1
    12c2:	09 f0       	breq	.+2      	; 0x12c6 <_Z14upFuncZselMenuP9CMenuItem+0x1a>
    12c4:	51 c0       	rjmp	.+162    	; 0x1368 <_Z14upFuncZselMenuP9CMenuItem+0xbc>
    12c6:	fe 01       	movw	r30, r28
    12c8:	e8 5b       	subi	r30, 0xB8	; 184
    12ca:	ff 4f       	sbci	r31, 0xFF	; 255
    12cc:	40 81       	ld	r20, Z
    12ce:	84 2f       	mov	r24, r20
    12d0:	86 95       	lsr	r24
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	fc 01       	movw	r30, r24
    12d6:	ee 0f       	add	r30, r30
    12d8:	ff 1f       	adc	r31, r31
    12da:	e6 5f       	subi	r30, 0xF6	; 246
    12dc:	fe 4f       	sbci	r31, 0xFE	; 254
    12de:	01 90       	ld	r0, Z+
    12e0:	f0 81       	ld	r31, Z
    12e2:	e0 2d       	mov	r30, r0
    12e4:	70 81       	ld	r23, Z
    12e6:	27 2f       	mov	r18, r23
    12e8:	30 e0       	ldi	r19, 0x00	; 0
    12ea:	64 2f       	mov	r22, r20
    12ec:	61 70       	andi	r22, 0x01	; 1
    12ee:	40 ff       	sbrs	r20, 0
    12f0:	03 c0       	rjmp	.+6      	; 0x12f8 <_Z14upFuncZselMenuP9CMenuItem+0x4c>
    12f2:	4f e0       	ldi	r20, 0x0F	; 15
    12f4:	50 e0       	ldi	r21, 0x00	; 0
    12f6:	02 c0       	rjmp	.+4      	; 0x12fc <_Z14upFuncZselMenuP9CMenuItem+0x50>
    12f8:	40 ef       	ldi	r20, 0xF0	; 240
    12fa:	50 e0       	ldi	r21, 0x00	; 0
    12fc:	42 23       	and	r20, r18
    12fe:	53 23       	and	r21, r19
    1300:	61 11       	cpse	r22, r1
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <_Z14upFuncZselMenuP9CMenuItem+0x5c>
    1304:	24 e0       	ldi	r18, 0x04	; 4
    1306:	01 c0       	rjmp	.+2      	; 0x130a <_Z14upFuncZselMenuP9CMenuItem+0x5e>
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	da 01       	movw	r26, r20
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <_Z14upFuncZselMenuP9CMenuItem+0x66>
    130e:	b5 95       	asr	r27
    1310:	a7 95       	ror	r26
    1312:	2a 95       	dec	r18
    1314:	e2 f7       	brpl	.-8      	; 0x130e <_Z14upFuncZselMenuP9CMenuItem+0x62>
    1316:	9d 01       	movw	r18, r26
    1318:	af 30       	cpi	r26, 0x0F	; 15
    131a:	10 f4       	brcc	.+4      	; 0x1320 <_Z14upFuncZselMenuP9CMenuItem+0x74>
    131c:	2f 5f       	subi	r18, 0xFF	; 255
    131e:	01 c0       	rjmp	.+2      	; 0x1322 <_Z14upFuncZselMenuP9CMenuItem+0x76>
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	61 11       	cpse	r22, r1
    1324:	02 c0       	rjmp	.+4      	; 0x132a <_Z14upFuncZselMenuP9CMenuItem+0x7e>
    1326:	3f e0       	ldi	r19, 0x0F	; 15
    1328:	01 c0       	rjmp	.+2      	; 0x132c <_Z14upFuncZselMenuP9CMenuItem+0x80>
    132a:	30 ef       	ldi	r19, 0xF0	; 240
    132c:	73 23       	and	r23, r19
    132e:	42 2f       	mov	r20, r18
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	66 23       	and	r22, r22
    1334:	11 f0       	breq	.+4      	; 0x133a <_Z14upFuncZselMenuP9CMenuItem+0x8e>
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	01 c0       	rjmp	.+2      	; 0x133c <_Z14upFuncZselMenuP9CMenuItem+0x90>
    133a:	34 e0       	ldi	r19, 0x04	; 4
    133c:	da 01       	movw	r26, r20
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <_Z14upFuncZselMenuP9CMenuItem+0x98>
    1340:	aa 0f       	add	r26, r26
    1342:	bb 1f       	adc	r27, r27
    1344:	3a 95       	dec	r19
    1346:	e2 f7       	brpl	.-8      	; 0x1340 <_Z14upFuncZselMenuP9CMenuItem+0x94>
    1348:	9d 01       	movw	r18, r26
    134a:	27 0f       	add	r18, r23
    134c:	20 83       	st	Z, r18
    134e:	fc 01       	movw	r30, r24
    1350:	ee 5f       	subi	r30, 0xFE	; 254
    1352:	fe 4f       	sbci	r31, 0xFE	; 254
    1354:	60 81       	ld	r22, Z
    1356:	8a e4       	ldi	r24, 0x4A	; 74
    1358:	95 e0       	ldi	r25, 0x05	; 5
    135a:	0e 94 59 18 	call	0x30b2	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
    135e:	60 e0       	ldi	r22, 0x00	; 0
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	80 ef       	ldi	r24, 0xF0	; 240
    1364:	94 e0       	ldi	r25, 0x04	; 4
    1366:	85 df       	rcall	.-246    	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    1368:	e0 91 52 05 	lds	r30, 0x0552
    136c:	f0 91 53 05 	lds	r31, 0x0553
    1370:	e7 5b       	subi	r30, 0xB7	; 183
    1372:	ff 4f       	sbci	r31, 0xFF	; 255
    1374:	80 81       	ld	r24, Z
    1376:	82 30       	cpi	r24, 0x02	; 2
    1378:	09 f0       	breq	.+2      	; 0x137c <_Z14upFuncZselMenuP9CMenuItem+0xd0>
    137a:	66 c0       	rjmp	.+204    	; 0x1448 <_Z14upFuncZselMenuP9CMenuItem+0x19c>
    137c:	ce 01       	movw	r24, r28
    137e:	5f dd       	rcall	.-1346   	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    1380:	91 51       	subi	r25, 0x11	; 17
    1382:	91 31       	cpi	r25, 0x11	; 17
    1384:	70 f4       	brcc	.+28     	; 0x13a2 <_Z14upFuncZselMenuP9CMenuItem+0xf6>
    1386:	ce 01       	movw	r24, r28
    1388:	5a dd       	rcall	.-1356   	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    138a:	e9 2f       	mov	r30, r25
    138c:	f0 e0       	ldi	r31, 0x00	; 0
    138e:	e1 52       	subi	r30, 0x21	; 33
    1390:	fb 4f       	sbci	r31, 0xFB	; 251
    1392:	82 81       	ldd	r24, Z+2	; 0x02
    1394:	89 30       	cpi	r24, 0x09	; 9
    1396:	18 f4       	brcc	.+6      	; 0x139e <_Z14upFuncZselMenuP9CMenuItem+0xf2>
    1398:	8f 5f       	subi	r24, 0xFF	; 255
    139a:	82 83       	std	Z+2, r24	; 0x02
    139c:	55 c0       	rjmp	.+170    	; 0x1448 <_Z14upFuncZselMenuP9CMenuItem+0x19c>
    139e:	12 82       	std	Z+2, r1	; 0x02
    13a0:	53 c0       	rjmp	.+166    	; 0x1448 <_Z14upFuncZselMenuP9CMenuItem+0x19c>
    13a2:	c8 5b       	subi	r28, 0xB8	; 184
    13a4:	df 4f       	sbci	r29, 0xFF	; 255
    13a6:	28 81       	ld	r18, Y
    13a8:	82 2f       	mov	r24, r18
    13aa:	65 e0       	ldi	r22, 0x05	; 5
    13ac:	0e 94 b0 19 	call	0x3360	; 0x3360 <__udivmodqi4>
    13b0:	c8 2f       	mov	r28, r24
    13b2:	d0 e0       	ldi	r29, 0x00	; 0
    13b4:	fe 01       	movw	r30, r28
    13b6:	ee 0f       	add	r30, r30
    13b8:	ff 1f       	adc	r31, r31
    13ba:	ea 5f       	subi	r30, 0xFA	; 250
    13bc:	fe 4f       	sbci	r31, 0xFE	; 254
    13be:	01 90       	ld	r0, Z+
    13c0:	f0 81       	ld	r31, Z
    13c2:	e0 2d       	mov	r30, r0
    13c4:	a0 81       	ld	r26, Z
    13c6:	b1 81       	ldd	r27, Z+1	; 0x01
    13c8:	24 30       	cpi	r18, 0x04	; 4
    13ca:	21 f4       	brne	.+8      	; 0x13d4 <_Z14upFuncZselMenuP9CMenuItem+0x128>
    13cc:	11 96       	adiw	r26, 0x01	; 1
    13ce:	b1 83       	std	Z+1, r27	; 0x01
    13d0:	a0 83       	st	Z, r26
    13d2:	2e c0       	rjmp	.+92     	; 0x1430 <_Z14upFuncZselMenuP9CMenuItem+0x184>
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	20 95       	com	r18
    13d8:	30 95       	com	r19
    13da:	23 70       	andi	r18, 0x03	; 3
    13dc:	33 27       	eor	r19, r19
    13de:	22 0f       	add	r18, r18
    13e0:	33 1f       	adc	r19, r19
    13e2:	22 0f       	add	r18, r18
    13e4:	33 1f       	adc	r19, r19
    13e6:	6f e0       	ldi	r22, 0x0F	; 15
    13e8:	70 e0       	ldi	r23, 0x00	; 0
    13ea:	02 2e       	mov	r0, r18
    13ec:	02 c0       	rjmp	.+4      	; 0x13f2 <_Z14upFuncZselMenuP9CMenuItem+0x146>
    13ee:	66 0f       	add	r22, r22
    13f0:	77 1f       	adc	r23, r23
    13f2:	0a 94       	dec	r0
    13f4:	e2 f7       	brpl	.-8      	; 0x13ee <_Z14upFuncZselMenuP9CMenuItem+0x142>
    13f6:	ab 01       	movw	r20, r22
    13f8:	4a 23       	and	r20, r26
    13fa:	5b 23       	and	r21, r27
    13fc:	02 2e       	mov	r0, r18
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <_Z14upFuncZselMenuP9CMenuItem+0x158>
    1400:	56 95       	lsr	r21
    1402:	47 95       	ror	r20
    1404:	0a 94       	dec	r0
    1406:	e2 f7       	brpl	.-8      	; 0x1400 <_Z14upFuncZselMenuP9CMenuItem+0x154>
    1408:	4f 30       	cpi	r20, 0x0F	; 15
    140a:	10 f4       	brcc	.+4      	; 0x1410 <_Z14upFuncZselMenuP9CMenuItem+0x164>
    140c:	4f 5f       	subi	r20, 0xFF	; 255
    140e:	01 c0       	rjmp	.+2      	; 0x1412 <_Z14upFuncZselMenuP9CMenuItem+0x166>
    1410:	40 e0       	ldi	r20, 0x00	; 0
    1412:	50 e0       	ldi	r21, 0x00	; 0
    1414:	02 c0       	rjmp	.+4      	; 0x141a <_Z14upFuncZselMenuP9CMenuItem+0x16e>
    1416:	44 0f       	add	r20, r20
    1418:	55 1f       	adc	r21, r21
    141a:	2a 95       	dec	r18
    141c:	e2 f7       	brpl	.-8      	; 0x1416 <_Z14upFuncZselMenuP9CMenuItem+0x16a>
    141e:	9b 01       	movw	r18, r22
    1420:	20 95       	com	r18
    1422:	30 95       	com	r19
    1424:	2a 23       	and	r18, r26
    1426:	3b 23       	and	r19, r27
    1428:	42 0f       	add	r20, r18
    142a:	53 1f       	adc	r21, r19
    142c:	51 83       	std	Z+1, r21	; 0x01
    142e:	40 83       	st	Z, r20
    1430:	c0 50       	subi	r28, 0x00	; 0
    1432:	df 4f       	sbci	r29, 0xFF	; 255
    1434:	68 81       	ld	r22, Y
    1436:	8a e4       	ldi	r24, 0x4A	; 74
    1438:	95 e0       	ldi	r25, 0x05	; 5
    143a:	0e 94 59 18 	call	0x30b2	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	80 ef       	ldi	r24, 0xF0	; 240
    1444:	94 e0       	ldi	r25, 0x04	; 4
    1446:	15 df       	rcall	.-470    	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    1448:	80 91 52 05 	lds	r24, 0x0552
    144c:	90 91 53 05 	lds	r25, 0x0553
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	5c cd       	rjmp	.-1352   	; 0xf0e <_ZN9CMenuItem4drawEv>

00001456 <_Z16downFuncZselMenuP9CMenuItem>:
    1456:	cf 93       	push	r28
    1458:	df 93       	push	r29
    145a:	ec 01       	movw	r28, r24
    145c:	80 91 52 05 	lds	r24, 0x0552
    1460:	90 91 53 05 	lds	r25, 0x0553
    1464:	fc 01       	movw	r30, r24
    1466:	e7 5b       	subi	r30, 0xB7	; 183
    1468:	ff 4f       	sbci	r31, 0xFF	; 255
    146a:	20 81       	ld	r18, Z
    146c:	21 30       	cpi	r18, 0x01	; 1
    146e:	09 f0       	breq	.+2      	; 0x1472 <_Z16downFuncZselMenuP9CMenuItem+0x1c>
    1470:	4f c0       	rjmp	.+158    	; 0x1510 <_Z16downFuncZselMenuP9CMenuItem+0xba>
    1472:	31 97       	sbiw	r30, 0x01	; 1
    1474:	40 81       	ld	r20, Z
    1476:	84 2f       	mov	r24, r20
    1478:	86 95       	lsr	r24
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	fc 01       	movw	r30, r24
    147e:	ee 0f       	add	r30, r30
    1480:	ff 1f       	adc	r31, r31
    1482:	e6 5f       	subi	r30, 0xF6	; 246
    1484:	fe 4f       	sbci	r31, 0xFE	; 254
    1486:	01 90       	ld	r0, Z+
    1488:	f0 81       	ld	r31, Z
    148a:	e0 2d       	mov	r30, r0
    148c:	70 81       	ld	r23, Z
    148e:	27 2f       	mov	r18, r23
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	64 2f       	mov	r22, r20
    1494:	61 70       	andi	r22, 0x01	; 1
    1496:	40 ff       	sbrs	r20, 0
    1498:	03 c0       	rjmp	.+6      	; 0x14a0 <_Z16downFuncZselMenuP9CMenuItem+0x4a>
    149a:	4f e0       	ldi	r20, 0x0F	; 15
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	02 c0       	rjmp	.+4      	; 0x14a4 <_Z16downFuncZselMenuP9CMenuItem+0x4e>
    14a0:	40 ef       	ldi	r20, 0xF0	; 240
    14a2:	50 e0       	ldi	r21, 0x00	; 0
    14a4:	42 23       	and	r20, r18
    14a6:	53 23       	and	r21, r19
    14a8:	61 11       	cpse	r22, r1
    14aa:	02 c0       	rjmp	.+4      	; 0x14b0 <_Z16downFuncZselMenuP9CMenuItem+0x5a>
    14ac:	24 e0       	ldi	r18, 0x04	; 4
    14ae:	01 c0       	rjmp	.+2      	; 0x14b2 <_Z16downFuncZselMenuP9CMenuItem+0x5c>
    14b0:	20 e0       	ldi	r18, 0x00	; 0
    14b2:	da 01       	movw	r26, r20
    14b4:	02 c0       	rjmp	.+4      	; 0x14ba <_Z16downFuncZselMenuP9CMenuItem+0x64>
    14b6:	b5 95       	asr	r27
    14b8:	a7 95       	ror	r26
    14ba:	2a 95       	dec	r18
    14bc:	e2 f7       	brpl	.-8      	; 0x14b6 <_Z16downFuncZselMenuP9CMenuItem+0x60>
    14be:	9d 01       	movw	r18, r26
    14c0:	aa 23       	and	r26, r26
    14c2:	11 f0       	breq	.+4      	; 0x14c8 <_Z16downFuncZselMenuP9CMenuItem+0x72>
    14c4:	21 50       	subi	r18, 0x01	; 1
    14c6:	01 c0       	rjmp	.+2      	; 0x14ca <_Z16downFuncZselMenuP9CMenuItem+0x74>
    14c8:	2f e0       	ldi	r18, 0x0F	; 15
    14ca:	61 11       	cpse	r22, r1
    14cc:	02 c0       	rjmp	.+4      	; 0x14d2 <_Z16downFuncZselMenuP9CMenuItem+0x7c>
    14ce:	3f e0       	ldi	r19, 0x0F	; 15
    14d0:	01 c0       	rjmp	.+2      	; 0x14d4 <_Z16downFuncZselMenuP9CMenuItem+0x7e>
    14d2:	30 ef       	ldi	r19, 0xF0	; 240
    14d4:	73 23       	and	r23, r19
    14d6:	42 2f       	mov	r20, r18
    14d8:	50 e0       	ldi	r21, 0x00	; 0
    14da:	66 23       	and	r22, r22
    14dc:	11 f0       	breq	.+4      	; 0x14e2 <_Z16downFuncZselMenuP9CMenuItem+0x8c>
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	01 c0       	rjmp	.+2      	; 0x14e4 <_Z16downFuncZselMenuP9CMenuItem+0x8e>
    14e2:	34 e0       	ldi	r19, 0x04	; 4
    14e4:	da 01       	movw	r26, r20
    14e6:	02 c0       	rjmp	.+4      	; 0x14ec <_Z16downFuncZselMenuP9CMenuItem+0x96>
    14e8:	aa 0f       	add	r26, r26
    14ea:	bb 1f       	adc	r27, r27
    14ec:	3a 95       	dec	r19
    14ee:	e2 f7       	brpl	.-8      	; 0x14e8 <_Z16downFuncZselMenuP9CMenuItem+0x92>
    14f0:	9d 01       	movw	r18, r26
    14f2:	27 0f       	add	r18, r23
    14f4:	20 83       	st	Z, r18
    14f6:	fc 01       	movw	r30, r24
    14f8:	ee 5f       	subi	r30, 0xFE	; 254
    14fa:	fe 4f       	sbci	r31, 0xFE	; 254
    14fc:	60 81       	ld	r22, Z
    14fe:	8a e4       	ldi	r24, 0x4A	; 74
    1500:	95 e0       	ldi	r25, 0x05	; 5
    1502:	0e 94 59 18 	call	0x30b2	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
    1506:	60 e0       	ldi	r22, 0x00	; 0
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	80 ef       	ldi	r24, 0xF0	; 240
    150c:	94 e0       	ldi	r25, 0x04	; 4
    150e:	b1 de       	rcall	.-670    	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    1510:	e0 91 52 05 	lds	r30, 0x0552
    1514:	f0 91 53 05 	lds	r31, 0x0553
    1518:	e7 5b       	subi	r30, 0xB7	; 183
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	80 81       	ld	r24, Z
    151e:	82 30       	cpi	r24, 0x02	; 2
    1520:	09 f0       	breq	.+2      	; 0x1524 <_Z16downFuncZselMenuP9CMenuItem+0xce>
    1522:	6a c0       	rjmp	.+212    	; 0x15f8 <_Z16downFuncZselMenuP9CMenuItem+0x1a2>
    1524:	ce 01       	movw	r24, r28
    1526:	8b dc       	rcall	.-1770   	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    1528:	91 51       	subi	r25, 0x11	; 17
    152a:	91 31       	cpi	r25, 0x11	; 17
    152c:	70 f4       	brcc	.+28     	; 0x154a <_Z16downFuncZselMenuP9CMenuItem+0xf4>
    152e:	ce 01       	movw	r24, r28
    1530:	86 dc       	rcall	.-1780   	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    1532:	e9 2f       	mov	r30, r25
    1534:	f0 e0       	ldi	r31, 0x00	; 0
    1536:	e1 52       	subi	r30, 0x21	; 33
    1538:	fb 4f       	sbci	r31, 0xFB	; 251
    153a:	82 81       	ldd	r24, Z+2	; 0x02
    153c:	88 23       	and	r24, r24
    153e:	11 f0       	breq	.+4      	; 0x1544 <_Z16downFuncZselMenuP9CMenuItem+0xee>
    1540:	81 50       	subi	r24, 0x01	; 1
    1542:	01 c0       	rjmp	.+2      	; 0x1546 <_Z16downFuncZselMenuP9CMenuItem+0xf0>
    1544:	89 e0       	ldi	r24, 0x09	; 9
    1546:	82 83       	std	Z+2, r24	; 0x02
    1548:	57 c0       	rjmp	.+174    	; 0x15f8 <_Z16downFuncZselMenuP9CMenuItem+0x1a2>
    154a:	e0 91 52 05 	lds	r30, 0x0552
    154e:	f0 91 53 05 	lds	r31, 0x0553
    1552:	e8 5b       	subi	r30, 0xB8	; 184
    1554:	ff 4f       	sbci	r31, 0xFF	; 255
    1556:	20 81       	ld	r18, Z
    1558:	82 2f       	mov	r24, r18
    155a:	65 e0       	ldi	r22, 0x05	; 5
    155c:	0e 94 b0 19 	call	0x3360	; 0x3360 <__udivmodqi4>
    1560:	c8 2f       	mov	r28, r24
    1562:	d0 e0       	ldi	r29, 0x00	; 0
    1564:	fe 01       	movw	r30, r28
    1566:	ee 0f       	add	r30, r30
    1568:	ff 1f       	adc	r31, r31
    156a:	ea 5f       	subi	r30, 0xFA	; 250
    156c:	fe 4f       	sbci	r31, 0xFE	; 254
    156e:	01 90       	ld	r0, Z+
    1570:	f0 81       	ld	r31, Z
    1572:	e0 2d       	mov	r30, r0
    1574:	a0 81       	ld	r26, Z
    1576:	b1 81       	ldd	r27, Z+1	; 0x01
    1578:	24 30       	cpi	r18, 0x04	; 4
    157a:	21 f4       	brne	.+8      	; 0x1584 <_Z16downFuncZselMenuP9CMenuItem+0x12e>
    157c:	11 97       	sbiw	r26, 0x01	; 1
    157e:	b1 83       	std	Z+1, r27	; 0x01
    1580:	a0 83       	st	Z, r26
    1582:	2e c0       	rjmp	.+92     	; 0x15e0 <_Z16downFuncZselMenuP9CMenuItem+0x18a>
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	20 95       	com	r18
    1588:	30 95       	com	r19
    158a:	23 70       	andi	r18, 0x03	; 3
    158c:	33 27       	eor	r19, r19
    158e:	22 0f       	add	r18, r18
    1590:	33 1f       	adc	r19, r19
    1592:	22 0f       	add	r18, r18
    1594:	33 1f       	adc	r19, r19
    1596:	6f e0       	ldi	r22, 0x0F	; 15
    1598:	70 e0       	ldi	r23, 0x00	; 0
    159a:	02 2e       	mov	r0, r18
    159c:	02 c0       	rjmp	.+4      	; 0x15a2 <_Z16downFuncZselMenuP9CMenuItem+0x14c>
    159e:	66 0f       	add	r22, r22
    15a0:	77 1f       	adc	r23, r23
    15a2:	0a 94       	dec	r0
    15a4:	e2 f7       	brpl	.-8      	; 0x159e <_Z16downFuncZselMenuP9CMenuItem+0x148>
    15a6:	ab 01       	movw	r20, r22
    15a8:	4a 23       	and	r20, r26
    15aa:	5b 23       	and	r21, r27
    15ac:	02 2e       	mov	r0, r18
    15ae:	02 c0       	rjmp	.+4      	; 0x15b4 <_Z16downFuncZselMenuP9CMenuItem+0x15e>
    15b0:	56 95       	lsr	r21
    15b2:	47 95       	ror	r20
    15b4:	0a 94       	dec	r0
    15b6:	e2 f7       	brpl	.-8      	; 0x15b0 <_Z16downFuncZselMenuP9CMenuItem+0x15a>
    15b8:	44 23       	and	r20, r20
    15ba:	11 f0       	breq	.+4      	; 0x15c0 <_Z16downFuncZselMenuP9CMenuItem+0x16a>
    15bc:	41 50       	subi	r20, 0x01	; 1
    15be:	01 c0       	rjmp	.+2      	; 0x15c2 <_Z16downFuncZselMenuP9CMenuItem+0x16c>
    15c0:	4f e0       	ldi	r20, 0x0F	; 15
    15c2:	50 e0       	ldi	r21, 0x00	; 0
    15c4:	02 c0       	rjmp	.+4      	; 0x15ca <_Z16downFuncZselMenuP9CMenuItem+0x174>
    15c6:	44 0f       	add	r20, r20
    15c8:	55 1f       	adc	r21, r21
    15ca:	2a 95       	dec	r18
    15cc:	e2 f7       	brpl	.-8      	; 0x15c6 <_Z16downFuncZselMenuP9CMenuItem+0x170>
    15ce:	9b 01       	movw	r18, r22
    15d0:	20 95       	com	r18
    15d2:	30 95       	com	r19
    15d4:	2a 23       	and	r18, r26
    15d6:	3b 23       	and	r19, r27
    15d8:	42 0f       	add	r20, r18
    15da:	53 1f       	adc	r21, r19
    15dc:	51 83       	std	Z+1, r21	; 0x01
    15de:	40 83       	st	Z, r20
    15e0:	c0 50       	subi	r28, 0x00	; 0
    15e2:	df 4f       	sbci	r29, 0xFF	; 255
    15e4:	68 81       	ld	r22, Y
    15e6:	8a e4       	ldi	r24, 0x4A	; 74
    15e8:	95 e0       	ldi	r25, 0x05	; 5
    15ea:	0e 94 59 18 	call	0x30b2	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	80 ef       	ldi	r24, 0xF0	; 240
    15f4:	94 e0       	ldi	r25, 0x04	; 4
    15f6:	3d de       	rcall	.-902    	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    15f8:	80 91 52 05 	lds	r24, 0x0552
    15fc:	90 91 53 05 	lds	r25, 0x0553
    1600:	df 91       	pop	r29
    1602:	cf 91       	pop	r28
    1604:	84 cc       	rjmp	.-1784   	; 0xf0e <_ZN9CMenuItem4drawEv>

00001606 <_Z11Str2DrawStrPhS_S_>:
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    160e:	8b 01       	movw	r16, r22
    1610:	ea 01       	movw	r28, r20
    1612:	29 e2       	ldi	r18, 0x29	; 41
    1614:	fa 01       	movw	r30, r20
    1616:	11 92       	st	Z+, r1
    1618:	2a 95       	dec	r18
    161a:	e9 f7       	brne	.-6      	; 0x1616 <_Z11Str2DrawStrPhS_S_+0x10>
    161c:	fc 01       	movw	r30, r24
    161e:	01 90       	ld	r0, Z+
    1620:	00 20       	and	r0, r0
    1622:	e9 f7       	brne	.-6      	; 0x161e <_Z11Str2DrawStrPhS_S_+0x18>
    1624:	af 01       	movw	r20, r30
    1626:	41 50       	subi	r20, 0x01	; 1
    1628:	51 09       	sbc	r21, r1
    162a:	48 1b       	sub	r20, r24
    162c:	59 0b       	sbc	r21, r25
    162e:	bc 01       	movw	r22, r24
    1630:	ce 01       	movw	r24, r28
    1632:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    1636:	f8 01       	movw	r30, r16
    1638:	01 90       	ld	r0, Z+
    163a:	00 20       	and	r0, r0
    163c:	e9 f7       	brne	.-6      	; 0x1638 <_Z11Str2DrawStrPhS_S_+0x32>
    163e:	af 01       	movw	r20, r30
    1640:	41 50       	subi	r20, 0x01	; 1
    1642:	51 09       	sbc	r21, r1
    1644:	40 1b       	sub	r20, r16
    1646:	51 0b       	sbc	r21, r17
    1648:	b8 01       	movw	r22, r16
    164a:	ce 01       	movw	r24, r28
    164c:	44 96       	adiw	r24, 0x14	; 20
    164e:	df 91       	pop	r29
    1650:	cf 91       	pop	r28
    1652:	1f 91       	pop	r17
    1654:	0f 91       	pop	r16
    1656:	0c 94 01 1a 	jmp	0x3402	; 0x3402 <memcpy>

0000165a <_Z9DrawOnLCDPh>:
    165a:	cf 93       	push	r28
    165c:	df 93       	push	r29
    165e:	00 d0       	rcall	.+0      	; 0x1660 <_Z9DrawOnLCDPh+0x6>
    1660:	cd b7       	in	r28, 0x3d	; 61
    1662:	de b7       	in	r29, 0x3e	; 62
    1664:	89 83       	std	Y+1, r24	; 0x01
    1666:	9a 83       	std	Y+2, r25	; 0x02
    1668:	87 d8       	rcall	.-3826   	; 0x778 <_Z10lcd_clrscrv>
    166a:	89 81       	ldd	r24, Y+1	; 0x01
    166c:	9a 81       	ldd	r25, Y+2	; 0x02
    166e:	97 d8       	rcall	.-3794   	; 0x79e <_Z8lcd_putsPKc>
    1670:	80 91 52 05 	lds	r24, 0x0552
    1674:	90 91 53 05 	lds	r25, 0x0553
    1678:	e2 db       	rcall	.-2108   	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    167a:	69 2f       	mov	r22, r25
    167c:	80 91 52 05 	lds	r24, 0x0552
    1680:	90 91 53 05 	lds	r25, 0x0553
    1684:	69 83       	std	Y+1, r22	; 0x01
    1686:	db db       	rcall	.-2122   	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    1688:	69 81       	ldd	r22, Y+1	; 0x01
    168a:	0f 90       	pop	r0
    168c:	0f 90       	pop	r0
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	6c c8       	rjmp	.-3880   	; 0x76c <_Z10lcd_gotoxyhh>

00001694 <_Z16drawFuncMainMenuP9CMenuItem>:
    1694:	cf 93       	push	r28
    1696:	df 93       	push	r29
    1698:	ec 01       	movw	r28, r24
    169a:	6f 89       	ldd	r22, Y+23	; 0x17
    169c:	78 8d       	ldd	r23, Y+24	; 0x18
    169e:	fb 01       	movw	r30, r22
    16a0:	01 90       	ld	r0, Z+
    16a2:	00 20       	and	r0, r0
    16a4:	e9 f7       	brne	.-6      	; 0x16a0 <_Z16drawFuncMainMenuP9CMenuItem+0xc>
    16a6:	af 01       	movw	r20, r30
    16a8:	41 50       	subi	r20, 0x01	; 1
    16aa:	51 09       	sbc	r21, r1
    16ac:	46 1b       	sub	r20, r22
    16ae:	57 0b       	sbc	r21, r23
    16b0:	45 31       	cpi	r20, 0x15	; 21
    16b2:	51 05       	cpc	r21, r1
    16b4:	10 f0       	brcs	.+4      	; 0x16ba <_Z16drawFuncMainMenuP9CMenuItem+0x26>
    16b6:	44 e1       	ldi	r20, 0x14	; 20
    16b8:	50 e0       	ldi	r21, 0x00	; 0
    16ba:	80 e5       	ldi	r24, 0x50	; 80
    16bc:	91 e0       	ldi	r25, 0x01	; 1
    16be:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    16c2:	69 8d       	ldd	r22, Y+25	; 0x19
    16c4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16c6:	fb 01       	movw	r30, r22
    16c8:	01 90       	ld	r0, Z+
    16ca:	00 20       	and	r0, r0
    16cc:	e9 f7       	brne	.-6      	; 0x16c8 <_Z16drawFuncMainMenuP9CMenuItem+0x34>
    16ce:	af 01       	movw	r20, r30
    16d0:	41 50       	subi	r20, 0x01	; 1
    16d2:	51 09       	sbc	r21, r1
    16d4:	46 1b       	sub	r20, r22
    16d6:	57 0b       	sbc	r21, r23
    16d8:	45 31       	cpi	r20, 0x15	; 21
    16da:	51 05       	cpc	r21, r1
    16dc:	10 f0       	brcs	.+4      	; 0x16e2 <_Z16drawFuncMainMenuP9CMenuItem+0x4e>
    16de:	44 e1       	ldi	r20, 0x14	; 20
    16e0:	50 e0       	ldi	r21, 0x00	; 0
    16e2:	8b e3       	ldi	r24, 0x3B	; 59
    16e4:	91 e0       	ldi	r25, 0x01	; 1
    16e6:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    16ea:	80 91 f0 04 	lds	r24, 0x04F0
    16ee:	81 11       	cpse	r24, r1
    16f0:	07 c0       	rjmp	.+14     	; 0x1700 <_Z16drawFuncMainMenuP9CMenuItem+0x6c>
    16f2:	80 91 1a 01 	lds	r24, 0x011A
    16f6:	90 91 1b 01 	lds	r25, 0x011B
    16fa:	a0 91 1c 01 	lds	r26, 0x011C
    16fe:	06 c0       	rjmp	.+12     	; 0x170c <_Z16drawFuncMainMenuP9CMenuItem+0x78>
    1700:	80 91 1e 01 	lds	r24, 0x011E
    1704:	90 91 1f 01 	lds	r25, 0x011F
    1708:	a0 91 20 01 	lds	r26, 0x0120
    170c:	80 93 3b 01 	sts	0x013B, r24
    1710:	90 93 3c 01 	sts	0x013C, r25
    1714:	a0 93 3d 01 	sts	0x013D, r26
    1718:	68 e5       	ldi	r22, 0x58	; 88
    171a:	70 e0       	ldi	r23, 0x00	; 0
    171c:	8b e3       	ldi	r24, 0x3B	; 59
    171e:	91 e0       	ldi	r25, 0x01	; 1
    1720:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1724:	20 91 f1 04 	lds	r18, 0x04F1
    1728:	30 e0       	ldi	r19, 0x00	; 0
    172a:	f9 01       	movw	r30, r18
    172c:	ee 0f       	add	r30, r30
    172e:	ff 1f       	adc	r31, r31
    1730:	e2 0f       	add	r30, r18
    1732:	f3 1f       	adc	r31, r19
    1734:	ec 5e       	subi	r30, 0xEC	; 236
    1736:	fe 4f       	sbci	r31, 0xFE	; 254
    1738:	20 81       	ld	r18, Z
    173a:	31 81       	ldd	r19, Z+1	; 0x01
    173c:	fc 01       	movw	r30, r24
    173e:	31 83       	std	Z+1, r19	; 0x01
    1740:	20 83       	st	Z, r18
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	30 e0       	ldi	r19, 0x00	; 0
    1746:	c0 e5       	ldi	r28, 0x50	; 80
    1748:	d1 e0       	ldi	r29, 0x01	; 1
    174a:	fe 01       	movw	r30, r28
    174c:	01 90       	ld	r0, Z+
    174e:	00 20       	and	r0, r0
    1750:	e9 f7       	brne	.-6      	; 0x174c <_Z16drawFuncMainMenuP9CMenuItem+0xb8>
    1752:	31 97       	sbiw	r30, 0x01	; 1
    1754:	e0 55       	subi	r30, 0x50	; 80
    1756:	f1 40       	sbci	r31, 0x01	; 1
    1758:	82 2f       	mov	r24, r18
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	8e 17       	cp	r24, r30
    175e:	9f 07       	cpc	r25, r31
    1760:	98 f4       	brcc	.+38     	; 0x1788 <_Z16drawFuncMainMenuP9CMenuItem+0xf4>
    1762:	dc 01       	movw	r26, r24
    1764:	a0 5b       	subi	r26, 0xB0	; 176
    1766:	be 4f       	sbci	r27, 0xFE	; 254
    1768:	8c 91       	ld	r24, X
    176a:	88 35       	cpi	r24, 0x58	; 88
    176c:	59 f4       	brne	.+22     	; 0x1784 <_Z16drawFuncMainMenuP9CMenuItem+0xf0>
    176e:	e3 2f       	mov	r30, r19
    1770:	f0 e0       	ldi	r31, 0x00	; 0
    1772:	e0 51       	subi	r30, 0x10	; 16
    1774:	fb 4f       	sbci	r31, 0xFB	; 251
    1776:	e2 81       	ldd	r30, Z+2	; 0x02
    1778:	f0 e0       	ldi	r31, 0x00	; 0
    177a:	e7 5d       	subi	r30, 0xD7	; 215
    177c:	fe 4f       	sbci	r31, 0xFE	; 254
    177e:	80 81       	ld	r24, Z
    1780:	8c 93       	st	X, r24
    1782:	3f 5f       	subi	r19, 0xFF	; 255
    1784:	2f 5f       	subi	r18, 0xFF	; 255
    1786:	e1 cf       	rjmp	.-62     	; 0x174a <_Z16drawFuncMainMenuP9CMenuItem+0xb6>
    1788:	80 91 49 05 	lds	r24, 0x0549
    178c:	68 e5       	ldi	r22, 0x58	; 88
    178e:	70 e0       	ldi	r23, 0x00	; 0
    1790:	81 11       	cpse	r24, r1
    1792:	07 c0       	rjmp	.+14     	; 0x17a2 <_Z16drawFuncMainMenuP9CMenuItem+0x10e>
    1794:	8b e3       	ldi	r24, 0x3B	; 59
    1796:	91 e0       	ldi	r25, 0x01	; 1
    1798:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    179c:	20 91 12 01 	lds	r18, 0x0112
    17a0:	06 c0       	rjmp	.+12     	; 0x17ae <_Z16drawFuncMainMenuP9CMenuItem+0x11a>
    17a2:	8b e3       	ldi	r24, 0x3B	; 59
    17a4:	91 e0       	ldi	r25, 0x01	; 1
    17a6:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    17aa:	20 91 13 01 	lds	r18, 0x0113
    17ae:	fc 01       	movw	r30, r24
    17b0:	20 83       	st	Z, r18
    17b2:	45 e6       	ldi	r20, 0x65	; 101
    17b4:	51 e0       	ldi	r21, 0x01	; 1
    17b6:	6b e3       	ldi	r22, 0x3B	; 59
    17b8:	71 e0       	ldi	r23, 0x01	; 1
    17ba:	80 e5       	ldi	r24, 0x50	; 80
    17bc:	91 e0       	ldi	r25, 0x01	; 1
    17be:	23 df       	rcall	.-442    	; 0x1606 <_Z11Str2DrawStrPhS_S_>
    17c0:	85 e6       	ldi	r24, 0x65	; 101
    17c2:	91 e0       	ldi	r25, 0x01	; 1
    17c4:	df 91       	pop	r29
    17c6:	cf 91       	pop	r28
    17c8:	48 cf       	rjmp	.-368    	; 0x165a <_Z9DrawOnLCDPh>

000017ca <_Z15drawFuncPrkMenuP9CMenuItem>:
    17ca:	ef 92       	push	r14
    17cc:	ff 92       	push	r15
    17ce:	0f 93       	push	r16
    17d0:	1f 93       	push	r17
    17d2:	cf 93       	push	r28
    17d4:	df 93       	push	r29
    17d6:	ec 01       	movw	r28, r24
    17d8:	6f 89       	ldd	r22, Y+23	; 0x17
    17da:	78 8d       	ldd	r23, Y+24	; 0x18
    17dc:	fb 01       	movw	r30, r22
    17de:	01 90       	ld	r0, Z+
    17e0:	00 20       	and	r0, r0
    17e2:	e9 f7       	brne	.-6      	; 0x17de <_Z15drawFuncPrkMenuP9CMenuItem+0x14>
    17e4:	af 01       	movw	r20, r30
    17e6:	41 50       	subi	r20, 0x01	; 1
    17e8:	51 09       	sbc	r21, r1
    17ea:	46 1b       	sub	r20, r22
    17ec:	57 0b       	sbc	r21, r23
    17ee:	45 31       	cpi	r20, 0x15	; 21
    17f0:	51 05       	cpc	r21, r1
    17f2:	10 f0       	brcs	.+4      	; 0x17f8 <_Z15drawFuncPrkMenuP9CMenuItem+0x2e>
    17f4:	44 e1       	ldi	r20, 0x14	; 20
    17f6:	50 e0       	ldi	r21, 0x00	; 0
    17f8:	80 e5       	ldi	r24, 0x50	; 80
    17fa:	91 e0       	ldi	r25, 0x01	; 1
    17fc:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    1800:	69 8d       	ldd	r22, Y+25	; 0x19
    1802:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1804:	fb 01       	movw	r30, r22
    1806:	01 90       	ld	r0, Z+
    1808:	00 20       	and	r0, r0
    180a:	e9 f7       	brne	.-6      	; 0x1806 <_Z15drawFuncPrkMenuP9CMenuItem+0x3c>
    180c:	af 01       	movw	r20, r30
    180e:	41 50       	subi	r20, 0x01	; 1
    1810:	51 09       	sbc	r21, r1
    1812:	46 1b       	sub	r20, r22
    1814:	57 0b       	sbc	r21, r23
    1816:	45 31       	cpi	r20, 0x15	; 21
    1818:	51 05       	cpc	r21, r1
    181a:	10 f0       	brcs	.+4      	; 0x1820 <_Z15drawFuncPrkMenuP9CMenuItem+0x56>
    181c:	44 e1       	ldi	r20, 0x14	; 20
    181e:	50 e0       	ldi	r21, 0x00	; 0
    1820:	8b e3       	ldi	r24, 0x3B	; 59
    1822:	91 e0       	ldi	r25, 0x01	; 1
    1824:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    1828:	68 e5       	ldi	r22, 0x58	; 88
    182a:	70 e0       	ldi	r23, 0x00	; 0
    182c:	80 e5       	ldi	r24, 0x50	; 80
    182e:	91 e0       	ldi	r25, 0x01	; 1
    1830:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1834:	c0 91 39 04 	lds	r28, 0x0439
    1838:	d0 e0       	ldi	r29, 0x00	; 0
    183a:	fe 01       	movw	r30, r28
    183c:	e7 5d       	subi	r30, 0xD7	; 215
    183e:	fe 4f       	sbci	r31, 0xFE	; 254
    1840:	20 81       	ld	r18, Z
    1842:	fc 01       	movw	r30, r24
    1844:	20 83       	st	Z, r18
    1846:	68 e5       	ldi	r22, 0x58	; 88
    1848:	70 e0       	ldi	r23, 0x00	; 0
    184a:	80 e5       	ldi	r24, 0x50	; 80
    184c:	91 e0       	ldi	r25, 0x01	; 1
    184e:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1852:	7e 01       	movw	r14, r28
    1854:	ee 0c       	add	r14, r14
    1856:	ff 1c       	adc	r15, r15
    1858:	87 01       	movw	r16, r14
    185a:	07 5d       	subi	r16, 0xD7	; 215
    185c:	1e 4f       	sbci	r17, 0xFE	; 254
    185e:	f8 01       	movw	r30, r16
    1860:	20 81       	ld	r18, Z
    1862:	fc 01       	movw	r30, r24
    1864:	20 83       	st	Z, r18
    1866:	68 e5       	ldi	r22, 0x58	; 88
    1868:	70 e0       	ldi	r23, 0x00	; 0
    186a:	8b e3       	ldi	r24, 0x3B	; 59
    186c:	91 e0       	ldi	r25, 0x01	; 1
    186e:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1872:	f8 01       	movw	r30, r16
    1874:	21 81       	ldd	r18, Z+1	; 0x01
    1876:	fc 01       	movw	r30, r24
    1878:	20 83       	st	Z, r18
    187a:	00 e0       	ldi	r16, 0x00	; 0
    187c:	10 e0       	ldi	r17, 0x00	; 0
    187e:	40 e5       	ldi	r20, 0x50	; 80
    1880:	51 e0       	ldi	r21, 0x01	; 1
    1882:	ce 01       	movw	r24, r28
    1884:	63 e0       	ldi	r22, 0x03	; 3
    1886:	88 0f       	add	r24, r24
    1888:	99 1f       	adc	r25, r25
    188a:	6a 95       	dec	r22
    188c:	e1 f7       	brne	.-8      	; 0x1886 <_Z15drawFuncPrkMenuP9CMenuItem+0xbc>
    188e:	97 01       	movw	r18, r14
    1890:	22 0f       	add	r18, r18
    1892:	33 1f       	adc	r19, r19
    1894:	22 0f       	add	r18, r18
    1896:	33 1f       	adc	r19, r19
    1898:	80 51       	subi	r24, 0x10	; 16
    189a:	9b 4f       	sbci	r25, 0xFB	; 251
    189c:	2c 50       	subi	r18, 0x0C	; 12
    189e:	3b 4f       	sbci	r19, 0xFB	; 251
    18a0:	e0 e2       	ldi	r30, 0x20	; 32
    18a2:	fe 2e       	mov	r15, r30
    18a4:	fa 01       	movw	r30, r20
    18a6:	01 90       	ld	r0, Z+
    18a8:	00 20       	and	r0, r0
    18aa:	e9 f7       	brne	.-6      	; 0x18a6 <_Z15drawFuncPrkMenuP9CMenuItem+0xdc>
    18ac:	31 97       	sbiw	r30, 0x01	; 1
    18ae:	e0 55       	subi	r30, 0x50	; 80
    18b0:	f1 40       	sbci	r31, 0x01	; 1
    18b2:	a0 2f       	mov	r26, r16
    18b4:	b0 e0       	ldi	r27, 0x00	; 0
    18b6:	ae 17       	cp	r26, r30
    18b8:	bf 07       	cpc	r27, r31
    18ba:	c8 f5       	brcc	.+114    	; 0x192e <_Z15drawFuncPrkMenuP9CMenuItem+0x164>
    18bc:	fd 01       	movw	r30, r26
    18be:	e0 5b       	subi	r30, 0xB0	; 176
    18c0:	fe 4f       	sbci	r31, 0xFE	; 254
    18c2:	60 81       	ld	r22, Z
    18c4:	a5 5c       	subi	r26, 0xC5	; 197
    18c6:	be 4f       	sbci	r27, 0xFE	; 254
    18c8:	68 35       	cpi	r22, 0x58	; 88
    18ca:	39 f5       	brne	.+78     	; 0x191a <_Z15drawFuncPrkMenuP9CMenuItem+0x150>
    18cc:	61 2f       	mov	r22, r17
    18ce:	66 95       	lsr	r22
    18d0:	70 e0       	ldi	r23, 0x00	; 0
    18d2:	ec 01       	movw	r28, r24
    18d4:	c6 0f       	add	r28, r22
    18d6:	d7 1f       	adc	r29, r23
    18d8:	c9 85       	ldd	r28, Y+9	; 0x09
    18da:	10 fd       	sbrc	r17, 0
    18dc:	0d c0       	rjmp	.+26     	; 0x18f8 <_Z15drawFuncPrkMenuP9CMenuItem+0x12e>
    18de:	c2 95       	swap	r28
    18e0:	cf 70       	andi	r28, 0x0F	; 15
    18e2:	d0 e0       	ldi	r29, 0x00	; 0
    18e4:	c7 5d       	subi	r28, 0xD7	; 215
    18e6:	de 4f       	sbci	r29, 0xFE	; 254
    18e8:	c8 81       	ld	r28, Y
    18ea:	c0 83       	st	Z, r28
    18ec:	e9 01       	movw	r28, r18
    18ee:	c6 0f       	add	r28, r22
    18f0:	d7 1f       	adc	r29, r23
    18f2:	c9 85       	ldd	r28, Y+9	; 0x09
    18f4:	c2 95       	swap	r28
    18f6:	0a c0       	rjmp	.+20     	; 0x190c <_Z15drawFuncPrkMenuP9CMenuItem+0x142>
    18f8:	cf 70       	andi	r28, 0x0F	; 15
    18fa:	d0 e0       	ldi	r29, 0x00	; 0
    18fc:	c7 5d       	subi	r28, 0xD7	; 215
    18fe:	de 4f       	sbci	r29, 0xFE	; 254
    1900:	c8 81       	ld	r28, Y
    1902:	c0 83       	st	Z, r28
    1904:	e9 01       	movw	r28, r18
    1906:	c6 0f       	add	r28, r22
    1908:	d7 1f       	adc	r29, r23
    190a:	c9 85       	ldd	r28, Y+9	; 0x09
    190c:	cf 70       	andi	r28, 0x0F	; 15
    190e:	d0 e0       	ldi	r29, 0x00	; 0
    1910:	c7 5d       	subi	r28, 0xD7	; 215
    1912:	de 4f       	sbci	r29, 0xFE	; 254
    1914:	68 81       	ld	r22, Y
    1916:	6c 93       	st	X, r22
    1918:	1f 5f       	subi	r17, 0xFF	; 255
    191a:	60 81       	ld	r22, Z
    191c:	60 34       	cpi	r22, 0x40	; 64
    191e:	09 f4       	brne	.+2      	; 0x1922 <_Z15drawFuncPrkMenuP9CMenuItem+0x158>
    1920:	f0 82       	st	Z, r15
    1922:	6c 91       	ld	r22, X
    1924:	60 34       	cpi	r22, 0x40	; 64
    1926:	09 f4       	brne	.+2      	; 0x192a <_Z15drawFuncPrkMenuP9CMenuItem+0x160>
    1928:	fc 92       	st	X, r15
    192a:	0f 5f       	subi	r16, 0xFF	; 255
    192c:	bb cf       	rjmp	.-138    	; 0x18a4 <_Z15drawFuncPrkMenuP9CMenuItem+0xda>
    192e:	45 e6       	ldi	r20, 0x65	; 101
    1930:	51 e0       	ldi	r21, 0x01	; 1
    1932:	6b e3       	ldi	r22, 0x3B	; 59
    1934:	71 e0       	ldi	r23, 0x01	; 1
    1936:	80 e5       	ldi	r24, 0x50	; 80
    1938:	91 e0       	ldi	r25, 0x01	; 1
    193a:	65 de       	rcall	.-822    	; 0x1606 <_Z11Str2DrawStrPhS_S_>
    193c:	85 e6       	ldi	r24, 0x65	; 101
    193e:	91 e0       	ldi	r25, 0x01	; 1
    1940:	df 91       	pop	r29
    1942:	cf 91       	pop	r28
    1944:	1f 91       	pop	r17
    1946:	0f 91       	pop	r16
    1948:	ff 90       	pop	r15
    194a:	ef 90       	pop	r14
    194c:	86 ce       	rjmp	.-756    	; 0x165a <_Z9DrawOnLCDPh>

0000194e <_Z16drawFuncZselMenuP9CMenuItem>:
    194e:	1f 93       	push	r17
    1950:	cf 93       	push	r28
    1952:	df 93       	push	r29
    1954:	ec 01       	movw	r28, r24
    1956:	6f 89       	ldd	r22, Y+23	; 0x17
    1958:	78 8d       	ldd	r23, Y+24	; 0x18
    195a:	fb 01       	movw	r30, r22
    195c:	01 90       	ld	r0, Z+
    195e:	00 20       	and	r0, r0
    1960:	e9 f7       	brne	.-6      	; 0x195c <_Z16drawFuncZselMenuP9CMenuItem+0xe>
    1962:	af 01       	movw	r20, r30
    1964:	41 50       	subi	r20, 0x01	; 1
    1966:	51 09       	sbc	r21, r1
    1968:	46 1b       	sub	r20, r22
    196a:	57 0b       	sbc	r21, r23
    196c:	45 31       	cpi	r20, 0x15	; 21
    196e:	51 05       	cpc	r21, r1
    1970:	10 f0       	brcs	.+4      	; 0x1976 <_Z16drawFuncZselMenuP9CMenuItem+0x28>
    1972:	44 e1       	ldi	r20, 0x14	; 20
    1974:	50 e0       	ldi	r21, 0x00	; 0
    1976:	80 e5       	ldi	r24, 0x50	; 80
    1978:	91 e0       	ldi	r25, 0x01	; 1
    197a:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    197e:	69 8d       	ldd	r22, Y+25	; 0x19
    1980:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1982:	fb 01       	movw	r30, r22
    1984:	01 90       	ld	r0, Z+
    1986:	00 20       	and	r0, r0
    1988:	e9 f7       	brne	.-6      	; 0x1984 <_Z16drawFuncZselMenuP9CMenuItem+0x36>
    198a:	af 01       	movw	r20, r30
    198c:	41 50       	subi	r20, 0x01	; 1
    198e:	51 09       	sbc	r21, r1
    1990:	46 1b       	sub	r20, r22
    1992:	57 0b       	sbc	r21, r23
    1994:	45 31       	cpi	r20, 0x15	; 21
    1996:	51 05       	cpc	r21, r1
    1998:	10 f0       	brcs	.+4      	; 0x199e <_Z16drawFuncZselMenuP9CMenuItem+0x50>
    199a:	44 e1       	ldi	r20, 0x14	; 20
    199c:	50 e0       	ldi	r21, 0x00	; 0
    199e:	8b e3       	ldi	r24, 0x3B	; 59
    19a0:	91 e0       	ldi	r25, 0x01	; 1
    19a2:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    19a6:	68 e5       	ldi	r22, 0x58	; 88
    19a8:	70 e0       	ldi	r23, 0x00	; 0
    19aa:	80 e5       	ldi	r24, 0x50	; 80
    19ac:	91 e0       	ldi	r25, 0x01	; 1
    19ae:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    19b2:	c0 91 4a 05 	lds	r28, 0x054A
    19b6:	ac 2f       	mov	r26, r28
    19b8:	a2 95       	swap	r26
    19ba:	af 70       	andi	r26, 0x0F	; 15
    19bc:	b0 e0       	ldi	r27, 0x00	; 0
    19be:	a7 5d       	subi	r26, 0xD7	; 215
    19c0:	be 4f       	sbci	r27, 0xFE	; 254
    19c2:	2c 91       	ld	r18, X
    19c4:	fc 01       	movw	r30, r24
    19c6:	20 83       	st	Z, r18
    19c8:	68 e5       	ldi	r22, 0x58	; 88
    19ca:	70 e0       	ldi	r23, 0x00	; 0
    19cc:	80 e5       	ldi	r24, 0x50	; 80
    19ce:	91 e0       	ldi	r25, 0x01	; 1
    19d0:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    19d4:	cf 70       	andi	r28, 0x0F	; 15
    19d6:	ec 2f       	mov	r30, r28
    19d8:	f0 e0       	ldi	r31, 0x00	; 0
    19da:	e7 5d       	subi	r30, 0xD7	; 215
    19dc:	fe 4f       	sbci	r31, 0xFE	; 254
    19de:	20 81       	ld	r18, Z
    19e0:	fc 01       	movw	r30, r24
    19e2:	20 83       	st	Z, r18
    19e4:	68 e5       	ldi	r22, 0x58	; 88
    19e6:	70 e0       	ldi	r23, 0x00	; 0
    19e8:	80 e5       	ldi	r24, 0x50	; 80
    19ea:	91 e0       	ldi	r25, 0x01	; 1
    19ec:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    19f0:	c0 91 4b 05 	lds	r28, 0x054B
    19f4:	ac 2f       	mov	r26, r28
    19f6:	a2 95       	swap	r26
    19f8:	af 70       	andi	r26, 0x0F	; 15
    19fa:	b0 e0       	ldi	r27, 0x00	; 0
    19fc:	a7 5d       	subi	r26, 0xD7	; 215
    19fe:	be 4f       	sbci	r27, 0xFE	; 254
    1a00:	2c 91       	ld	r18, X
    1a02:	fc 01       	movw	r30, r24
    1a04:	20 83       	st	Z, r18
    1a06:	68 e5       	ldi	r22, 0x58	; 88
    1a08:	70 e0       	ldi	r23, 0x00	; 0
    1a0a:	80 e5       	ldi	r24, 0x50	; 80
    1a0c:	91 e0       	ldi	r25, 0x01	; 1
    1a0e:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1a12:	cf 70       	andi	r28, 0x0F	; 15
    1a14:	ec 2f       	mov	r30, r28
    1a16:	f0 e0       	ldi	r31, 0x00	; 0
    1a18:	e7 5d       	subi	r30, 0xD7	; 215
    1a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1c:	20 81       	ld	r18, Z
    1a1e:	fc 01       	movw	r30, r24
    1a20:	20 83       	st	Z, r18
    1a22:	68 e5       	ldi	r22, 0x58	; 88
    1a24:	70 e0       	ldi	r23, 0x00	; 0
    1a26:	80 e5       	ldi	r24, 0x50	; 80
    1a28:	91 e0       	ldi	r25, 0x01	; 1
    1a2a:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1a2e:	c0 91 4c 05 	lds	r28, 0x054C
    1a32:	ac 2f       	mov	r26, r28
    1a34:	a2 95       	swap	r26
    1a36:	af 70       	andi	r26, 0x0F	; 15
    1a38:	b0 e0       	ldi	r27, 0x00	; 0
    1a3a:	a7 5d       	subi	r26, 0xD7	; 215
    1a3c:	be 4f       	sbci	r27, 0xFE	; 254
    1a3e:	2c 91       	ld	r18, X
    1a40:	fc 01       	movw	r30, r24
    1a42:	20 83       	st	Z, r18
    1a44:	68 e5       	ldi	r22, 0x58	; 88
    1a46:	70 e0       	ldi	r23, 0x00	; 0
    1a48:	80 e5       	ldi	r24, 0x50	; 80
    1a4a:	91 e0       	ldi	r25, 0x01	; 1
    1a4c:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1a50:	cf 70       	andi	r28, 0x0F	; 15
    1a52:	ec 2f       	mov	r30, r28
    1a54:	f0 e0       	ldi	r31, 0x00	; 0
    1a56:	e7 5d       	subi	r30, 0xD7	; 215
    1a58:	fe 4f       	sbci	r31, 0xFE	; 254
    1a5a:	20 81       	ld	r18, Z
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	20 83       	st	Z, r18
    1a60:	68 e5       	ldi	r22, 0x58	; 88
    1a62:	70 e0       	ldi	r23, 0x00	; 0
    1a64:	80 e5       	ldi	r24, 0x50	; 80
    1a66:	91 e0       	ldi	r25, 0x01	; 1
    1a68:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1a6c:	c0 91 4d 05 	lds	r28, 0x054D
    1a70:	ac 2f       	mov	r26, r28
    1a72:	a2 95       	swap	r26
    1a74:	af 70       	andi	r26, 0x0F	; 15
    1a76:	b0 e0       	ldi	r27, 0x00	; 0
    1a78:	a7 5d       	subi	r26, 0xD7	; 215
    1a7a:	be 4f       	sbci	r27, 0xFE	; 254
    1a7c:	2c 91       	ld	r18, X
    1a7e:	fc 01       	movw	r30, r24
    1a80:	20 83       	st	Z, r18
    1a82:	68 e5       	ldi	r22, 0x58	; 88
    1a84:	70 e0       	ldi	r23, 0x00	; 0
    1a86:	80 e5       	ldi	r24, 0x50	; 80
    1a88:	91 e0       	ldi	r25, 0x01	; 1
    1a8a:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1a8e:	cf 70       	andi	r28, 0x0F	; 15
    1a90:	ec 2f       	mov	r30, r28
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	e7 5d       	subi	r30, 0xD7	; 215
    1a96:	fe 4f       	sbci	r31, 0xFE	; 254
    1a98:	20 81       	ld	r18, Z
    1a9a:	fc 01       	movw	r30, r24
    1a9c:	20 83       	st	Z, r18
    1a9e:	68 e5       	ldi	r22, 0x58	; 88
    1aa0:	70 e0       	ldi	r23, 0x00	; 0
    1aa2:	8b e3       	ldi	r24, 0x3B	; 59
    1aa4:	91 e0       	ldi	r25, 0x01	; 1
    1aa6:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1aaa:	c0 91 4e 05 	lds	r28, 0x054E
    1aae:	d0 91 4f 05 	lds	r29, 0x054F
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	ef 2f       	mov	r30, r31
    1ab6:	ff 27       	eor	r31, r31
    1ab8:	e2 95       	swap	r30
    1aba:	ef 70       	andi	r30, 0x0F	; 15
    1abc:	e7 5d       	subi	r30, 0xD7	; 215
    1abe:	fe 4f       	sbci	r31, 0xFE	; 254
    1ac0:	20 81       	ld	r18, Z
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	20 83       	st	Z, r18
    1ac6:	68 e5       	ldi	r22, 0x58	; 88
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	8b e3       	ldi	r24, 0x3B	; 59
    1acc:	91 e0       	ldi	r25, 0x01	; 1
    1ace:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1ad2:	fe 01       	movw	r30, r28
    1ad4:	ee 27       	eor	r30, r30
    1ad6:	ff 70       	andi	r31, 0x0F	; 15
    1ad8:	ef 2f       	mov	r30, r31
    1ada:	ff 0f       	add	r31, r31
    1adc:	ff 0b       	sbc	r31, r31
    1ade:	e7 5d       	subi	r30, 0xD7	; 215
    1ae0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ae2:	20 81       	ld	r18, Z
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	20 83       	st	Z, r18
    1ae8:	68 e5       	ldi	r22, 0x58	; 88
    1aea:	70 e0       	ldi	r23, 0x00	; 0
    1aec:	8b e3       	ldi	r24, 0x3B	; 59
    1aee:	91 e0       	ldi	r25, 0x01	; 1
    1af0:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1af4:	fe 01       	movw	r30, r28
    1af6:	e0 7f       	andi	r30, 0xF0	; 240
    1af8:	ff 27       	eor	r31, r31
    1afa:	14 e0       	ldi	r17, 0x04	; 4
    1afc:	f5 95       	asr	r31
    1afe:	e7 95       	ror	r30
    1b00:	1a 95       	dec	r17
    1b02:	e1 f7       	brne	.-8      	; 0x1afc <_Z16drawFuncZselMenuP9CMenuItem+0x1ae>
    1b04:	e7 5d       	subi	r30, 0xD7	; 215
    1b06:	fe 4f       	sbci	r31, 0xFE	; 254
    1b08:	20 81       	ld	r18, Z
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	20 83       	st	Z, r18
    1b0e:	68 e5       	ldi	r22, 0x58	; 88
    1b10:	70 e0       	ldi	r23, 0x00	; 0
    1b12:	8b e3       	ldi	r24, 0x3B	; 59
    1b14:	91 e0       	ldi	r25, 0x01	; 1
    1b16:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1b1a:	cf 70       	andi	r28, 0x0F	; 15
    1b1c:	dd 27       	eor	r29, r29
    1b1e:	c7 5d       	subi	r28, 0xD7	; 215
    1b20:	de 4f       	sbci	r29, 0xFE	; 254
    1b22:	28 81       	ld	r18, Y
    1b24:	fc 01       	movw	r30, r24
    1b26:	20 83       	st	Z, r18
    1b28:	85 e0       	ldi	r24, 0x05	; 5
    1b2a:	0e 94 ae 00 	call	0x15c	; 0x15c <_Z8read_adch>
    1b2e:	18 2f       	mov	r17, r24
    1b30:	68 e5       	ldi	r22, 0x58	; 88
    1b32:	70 e0       	ldi	r23, 0x00	; 0
    1b34:	8b e3       	ldi	r24, 0x3B	; 59
    1b36:	91 e0       	ldi	r25, 0x01	; 1
    1b38:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1b3c:	ec 01       	movw	r28, r24
    1b3e:	a1 2f       	mov	r26, r17
    1b40:	a2 95       	swap	r26
    1b42:	af 70       	andi	r26, 0x0F	; 15
    1b44:	b0 e0       	ldi	r27, 0x00	; 0
    1b46:	a7 5d       	subi	r26, 0xD7	; 215
    1b48:	be 4f       	sbci	r27, 0xFE	; 254
    1b4a:	8c 91       	ld	r24, X
    1b4c:	88 83       	st	Y, r24
    1b4e:	1f 70       	andi	r17, 0x0F	; 15
    1b50:	e1 2f       	mov	r30, r17
    1b52:	f0 e0       	ldi	r31, 0x00	; 0
    1b54:	e7 5d       	subi	r30, 0xD7	; 215
    1b56:	fe 4f       	sbci	r31, 0xFE	; 254
    1b58:	80 81       	ld	r24, Z
    1b5a:	80 93 44 01 	sts	0x0144, r24
    1b5e:	68 e5       	ldi	r22, 0x58	; 88
    1b60:	70 e0       	ldi	r23, 0x00	; 0
    1b62:	8b e3       	ldi	r24, 0x3B	; 59
    1b64:	91 e0       	ldi	r25, 0x01	; 1
    1b66:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1b6a:	e0 91 f2 04 	lds	r30, 0x04F2
    1b6e:	f0 e0       	ldi	r31, 0x00	; 0
    1b70:	e7 5d       	subi	r30, 0xD7	; 215
    1b72:	fe 4f       	sbci	r31, 0xFE	; 254
    1b74:	20 81       	ld	r18, Z
    1b76:	fc 01       	movw	r30, r24
    1b78:	20 83       	st	Z, r18
    1b7a:	68 e5       	ldi	r22, 0x58	; 88
    1b7c:	70 e0       	ldi	r23, 0x00	; 0
    1b7e:	8b e3       	ldi	r24, 0x3B	; 59
    1b80:	91 e0       	ldi	r25, 0x01	; 1
    1b82:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1b86:	e0 91 f3 04 	lds	r30, 0x04F3
    1b8a:	f0 e0       	ldi	r31, 0x00	; 0
    1b8c:	e7 5d       	subi	r30, 0xD7	; 215
    1b8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b90:	20 81       	ld	r18, Z
    1b92:	fc 01       	movw	r30, r24
    1b94:	20 83       	st	Z, r18
    1b96:	68 e5       	ldi	r22, 0x58	; 88
    1b98:	70 e0       	ldi	r23, 0x00	; 0
    1b9a:	8b e3       	ldi	r24, 0x3B	; 59
    1b9c:	91 e0       	ldi	r25, 0x01	; 1
    1b9e:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1ba2:	e0 91 f4 04 	lds	r30, 0x04F4
    1ba6:	f0 e0       	ldi	r31, 0x00	; 0
    1ba8:	e7 5d       	subi	r30, 0xD7	; 215
    1baa:	fe 4f       	sbci	r31, 0xFE	; 254
    1bac:	20 81       	ld	r18, Z
    1bae:	fc 01       	movw	r30, r24
    1bb0:	20 83       	st	Z, r18
    1bb2:	68 e5       	ldi	r22, 0x58	; 88
    1bb4:	70 e0       	ldi	r23, 0x00	; 0
    1bb6:	8b e3       	ldi	r24, 0x3B	; 59
    1bb8:	91 e0       	ldi	r25, 0x01	; 1
    1bba:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1bbe:	e0 91 f5 04 	lds	r30, 0x04F5
    1bc2:	f0 e0       	ldi	r31, 0x00	; 0
    1bc4:	e7 5d       	subi	r30, 0xD7	; 215
    1bc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc8:	20 81       	ld	r18, Z
    1bca:	fc 01       	movw	r30, r24
    1bcc:	20 83       	st	Z, r18
    1bce:	20 e0       	ldi	r18, 0x00	; 0
    1bd0:	a0 e5       	ldi	r26, 0x50	; 80
    1bd2:	b1 e0       	ldi	r27, 0x01	; 1
    1bd4:	30 e2       	ldi	r19, 0x20	; 32
    1bd6:	fd 01       	movw	r30, r26
    1bd8:	01 90       	ld	r0, Z+
    1bda:	00 20       	and	r0, r0
    1bdc:	e9 f7       	brne	.-6      	; 0x1bd8 <_Z16drawFuncZselMenuP9CMenuItem+0x28a>
    1bde:	31 97       	sbiw	r30, 0x01	; 1
    1be0:	e0 55       	subi	r30, 0x50	; 80
    1be2:	f1 40       	sbci	r31, 0x01	; 1
    1be4:	82 2f       	mov	r24, r18
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	8e 17       	cp	r24, r30
    1bea:	9f 07       	cpc	r25, r31
    1bec:	80 f4       	brcc	.+32     	; 0x1c0e <_Z16drawFuncZselMenuP9CMenuItem+0x2c0>
    1bee:	fc 01       	movw	r30, r24
    1bf0:	e0 5b       	subi	r30, 0xB0	; 176
    1bf2:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf4:	40 81       	ld	r20, Z
    1bf6:	40 34       	cpi	r20, 0x40	; 64
    1bf8:	09 f4       	brne	.+2      	; 0x1bfc <_Z16drawFuncZselMenuP9CMenuItem+0x2ae>
    1bfa:	30 83       	st	Z, r19
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	e5 5c       	subi	r30, 0xC5	; 197
    1c00:	fe 4f       	sbci	r31, 0xFE	; 254
    1c02:	80 81       	ld	r24, Z
    1c04:	80 34       	cpi	r24, 0x40	; 64
    1c06:	09 f4       	brne	.+2      	; 0x1c0a <_Z16drawFuncZselMenuP9CMenuItem+0x2bc>
    1c08:	30 83       	st	Z, r19
    1c0a:	2f 5f       	subi	r18, 0xFF	; 255
    1c0c:	e4 cf       	rjmp	.-56     	; 0x1bd6 <_Z16drawFuncZselMenuP9CMenuItem+0x288>
    1c0e:	45 e6       	ldi	r20, 0x65	; 101
    1c10:	51 e0       	ldi	r21, 0x01	; 1
    1c12:	6b e3       	ldi	r22, 0x3B	; 59
    1c14:	71 e0       	ldi	r23, 0x01	; 1
    1c16:	80 e5       	ldi	r24, 0x50	; 80
    1c18:	91 e0       	ldi	r25, 0x01	; 1
    1c1a:	f5 dc       	rcall	.-1558   	; 0x1606 <_Z11Str2DrawStrPhS_S_>
    1c1c:	85 e6       	ldi	r24, 0x65	; 101
    1c1e:	91 e0       	ldi	r25, 0x01	; 1
    1c20:	df 91       	pop	r29
    1c22:	cf 91       	pop	r28
    1c24:	1f 91       	pop	r17
    1c26:	19 cd       	rjmp	.-1486   	; 0x165a <_Z9DrawOnLCDPh>

00001c28 <_Z11reverseBitsjPj>:
    1c28:	cf 93       	push	r28
    1c2a:	df 93       	push	r29
    1c2c:	20 e0       	ldi	r18, 0x00	; 0
    1c2e:	30 e0       	ldi	r19, 0x00	; 0
    1c30:	e0 e0       	ldi	r30, 0x00	; 0
    1c32:	f0 e0       	ldi	r31, 0x00	; 0
    1c34:	af e0       	ldi	r26, 0x0F	; 15
    1c36:	b0 e0       	ldi	r27, 0x00	; 0
    1c38:	ad 01       	movw	r20, r26
    1c3a:	42 1b       	sub	r20, r18
    1c3c:	53 0b       	sbc	r21, r19
    1c3e:	ec 01       	movw	r28, r24
    1c40:	02 c0       	rjmp	.+4      	; 0x1c46 <_Z11reverseBitsjPj+0x1e>
    1c42:	d6 95       	lsr	r29
    1c44:	c7 95       	ror	r28
    1c46:	4a 95       	dec	r20
    1c48:	e2 f7       	brpl	.-8      	; 0x1c42 <_Z11reverseBitsjPj+0x1a>
    1c4a:	ae 01       	movw	r20, r28
    1c4c:	41 70       	andi	r20, 0x01	; 1
    1c4e:	55 27       	eor	r21, r21
    1c50:	02 2e       	mov	r0, r18
    1c52:	02 c0       	rjmp	.+4      	; 0x1c58 <_Z11reverseBitsjPj+0x30>
    1c54:	44 0f       	add	r20, r20
    1c56:	55 1f       	adc	r21, r21
    1c58:	0a 94       	dec	r0
    1c5a:	e2 f7       	brpl	.-8      	; 0x1c54 <_Z11reverseBitsjPj+0x2c>
    1c5c:	e4 0f       	add	r30, r20
    1c5e:	f5 1f       	adc	r31, r21
    1c60:	2f 5f       	subi	r18, 0xFF	; 255
    1c62:	3f 4f       	sbci	r19, 0xFF	; 255
    1c64:	20 31       	cpi	r18, 0x10	; 16
    1c66:	31 05       	cpc	r19, r1
    1c68:	39 f7       	brne	.-50     	; 0x1c38 <_Z11reverseBitsjPj+0x10>
    1c6a:	db 01       	movw	r26, r22
    1c6c:	ed 93       	st	X+, r30
    1c6e:	fc 93       	st	X, r31
    1c70:	df 91       	pop	r29
    1c72:	cf 91       	pop	r28
    1c74:	08 95       	ret

00001c76 <_Z7LCA2outjhjhhPj>:
    1c76:	cf 92       	push	r12
    1c78:	df 92       	push	r13
    1c7a:	ef 92       	push	r14
    1c7c:	ff 92       	push	r15
    1c7e:	0f 93       	push	r16
    1c80:	1f 93       	push	r17
    1c82:	cf 93       	push	r28
    1c84:	df 93       	push	r29
    1c86:	00 d0       	rcall	.+0      	; 0x1c88 <_Z7LCA2outjhjhhPj+0x12>
    1c88:	00 d0       	rcall	.+0      	; 0x1c8a <_Z7LCA2outjhjhhPj+0x14>
    1c8a:	1f 92       	push	r1
    1c8c:	cd b7       	in	r28, 0x3d	; 61
    1c8e:	de b7       	in	r29, 0x3e	; 62
    1c90:	9a 83       	std	Y+2, r25	; 0x02
    1c92:	89 83       	std	Y+1, r24	; 0x01
    1c94:	16 2f       	mov	r17, r22
    1c96:	5c 83       	std	Y+4, r21	; 0x04
    1c98:	4b 83       	std	Y+3, r20	; 0x03
    1c9a:	be 01       	movw	r22, r28
    1c9c:	6f 5f       	subi	r22, 0xFF	; 255
    1c9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca0:	2d 83       	std	Y+5, r18	; 0x05
    1ca2:	c2 df       	rcall	.-124    	; 0x1c28 <_Z11reverseBitsjPj>
    1ca4:	89 81       	ldd	r24, Y+1	; 0x01
    1ca6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ca8:	24 e0       	ldi	r18, 0x04	; 4
    1caa:	96 95       	lsr	r25
    1cac:	87 95       	ror	r24
    1cae:	2a 95       	dec	r18
    1cb0:	e1 f7       	brne	.-8      	; 0x1caa <_Z7LCA2outjhjhhPj+0x34>
    1cb2:	9a 83       	std	Y+2, r25	; 0x02
    1cb4:	89 83       	std	Y+1, r24	; 0x01
    1cb6:	be 01       	movw	r22, r28
    1cb8:	6d 5f       	subi	r22, 0xFD	; 253
    1cba:	7f 4f       	sbci	r23, 0xFF	; 255
    1cbc:	8b 81       	ldd	r24, Y+3	; 0x03
    1cbe:	9c 81       	ldd	r25, Y+4	; 0x04
    1cc0:	b3 df       	rcall	.-154    	; 0x1c28 <_Z11reverseBitsjPj>
    1cc2:	4b 81       	ldd	r20, Y+3	; 0x03
    1cc4:	5c 81       	ldd	r21, Y+4	; 0x04
    1cc6:	81 2f       	mov	r24, r17
    1cc8:	90 e0       	ldi	r25, 0x00	; 0
    1cca:	98 2f       	mov	r25, r24
    1ccc:	88 27       	eor	r24, r24
    1cce:	92 95       	swap	r25
    1cd0:	99 0f       	add	r25, r25
    1cd2:	90 7e       	andi	r25, 0xE0	; 224
    1cd4:	e9 81       	ldd	r30, Y+1	; 0x01
    1cd6:	fa 81       	ldd	r31, Y+2	; 0x02
    1cd8:	ff 70       	andi	r31, 0x0F	; 15
    1cda:	8e 0f       	add	r24, r30
    1cdc:	9f 1f       	adc	r25, r31
    1cde:	f7 01       	movw	r30, r14
    1ce0:	91 83       	std	Z+1, r25	; 0x01
    1ce2:	80 83       	st	Z, r24
    1ce4:	18 77       	andi	r17, 0x78	; 120
    1ce6:	61 2f       	mov	r22, r17
    1ce8:	70 e0       	ldi	r23, 0x00	; 0
    1cea:	a3 e0       	ldi	r26, 0x03	; 3
    1cec:	76 95       	lsr	r23
    1cee:	67 95       	ror	r22
    1cf0:	aa 95       	dec	r26
    1cf2:	e1 f7       	brne	.-8      	; 0x1cec <_Z7LCA2outjhjhhPj+0x76>
    1cf4:	40 7f       	andi	r20, 0xF0	; 240
    1cf6:	64 0f       	add	r22, r20
    1cf8:	75 1f       	adc	r23, r21
    1cfa:	73 83       	std	Z+3, r23	; 0x03
    1cfc:	62 83       	std	Z+2, r22	; 0x02
    1cfe:	40 e2       	ldi	r20, 0x20	; 32
    1d00:	40 27       	eor	r20, r16
    1d02:	50 e0       	ldi	r21, 0x00	; 0
    1d04:	40 95       	com	r20
    1d06:	50 95       	com	r21
    1d08:	80 e0       	ldi	r24, 0x00	; 0
    1d0a:	94 2f       	mov	r25, r20
    1d0c:	2d 81       	ldd	r18, Y+5	; 0x05
    1d0e:	82 0f       	add	r24, r18
    1d10:	91 1d       	adc	r25, r1
    1d12:	82 0f       	add	r24, r18
    1d14:	91 1d       	adc	r25, r1
    1d16:	45 fb       	bst	r20, 5
    1d18:	cc 24       	eor	r12, r12
    1d1a:	c0 f8       	bld	r12, 0
    1d1c:	d1 2c       	mov	r13, r1
    1d1e:	8c 0d       	add	r24, r12
    1d20:	9d 1d       	adc	r25, r13
    1d22:	95 83       	std	Z+5, r25	; 0x05
    1d24:	84 83       	std	Z+4, r24	; 0x04
    1d26:	0f 90       	pop	r0
    1d28:	0f 90       	pop	r0
    1d2a:	0f 90       	pop	r0
    1d2c:	0f 90       	pop	r0
    1d2e:	0f 90       	pop	r0
    1d30:	df 91       	pop	r29
    1d32:	cf 91       	pop	r28
    1d34:	1f 91       	pop	r17
    1d36:	0f 91       	pop	r16
    1d38:	ff 90       	pop	r15
    1d3a:	ef 90       	pop	r14
    1d3c:	df 90       	pop	r13
    1d3e:	cf 90       	pop	r12
    1d40:	08 95       	ret

00001d42 <_Z10outLCA2LCAPjPhS_S0_S0_S_>:
    1d42:	cf 92       	push	r12
    1d44:	df 92       	push	r13
    1d46:	ef 92       	push	r14
    1d48:	ff 92       	push	r15
    1d4a:	0f 93       	push	r16
    1d4c:	1f 93       	push	r17
    1d4e:	cf 93       	push	r28
    1d50:	df 93       	push	r29
    1d52:	ec 01       	movw	r28, r24
    1d54:	6a 01       	movw	r12, r20
    1d56:	f7 01       	movw	r30, r14
    1d58:	80 81       	ld	r24, Z
    1d5a:	91 81       	ldd	r25, Z+1	; 0x01
    1d5c:	9f 70       	andi	r25, 0x0F	; 15
    1d5e:	99 83       	std	Y+1, r25	; 0x01
    1d60:	88 83       	st	Y, r24
    1d62:	42 81       	ldd	r20, Z+2	; 0x02
    1d64:	4f 70       	andi	r20, 0x0F	; 15
    1d66:	80 81       	ld	r24, Z
    1d68:	91 81       	ldd	r25, Z+1	; 0x01
    1d6a:	89 2f       	mov	r24, r25
    1d6c:	99 27       	eor	r25, r25
    1d6e:	82 95       	swap	r24
    1d70:	86 95       	lsr	r24
    1d72:	87 70       	andi	r24, 0x07	; 7
    1d74:	58 e0       	ldi	r21, 0x08	; 8
    1d76:	45 9f       	mul	r20, r21
    1d78:	80 0d       	add	r24, r0
    1d7a:	11 24       	eor	r1, r1
    1d7c:	db 01       	movw	r26, r22
    1d7e:	8c 93       	st	X, r24
    1d80:	82 81       	ldd	r24, Z+2	; 0x02
    1d82:	93 81       	ldd	r25, Z+3	; 0x03
    1d84:	44 e0       	ldi	r20, 0x04	; 4
    1d86:	96 95       	lsr	r25
    1d88:	87 95       	ror	r24
    1d8a:	4a 95       	dec	r20
    1d8c:	e1 f7       	brne	.-8      	; 0x1d86 <_Z10outLCA2LCAPjPhS_S0_S0_S_+0x44>
    1d8e:	d6 01       	movw	r26, r12
    1d90:	8d 93       	st	X+, r24
    1d92:	9c 93       	st	X, r25
    1d94:	84 81       	ldd	r24, Z+4	; 0x04
    1d96:	86 95       	lsr	r24
    1d98:	d9 01       	movw	r26, r18
    1d9a:	8c 93       	st	X, r24
    1d9c:	84 81       	ldd	r24, Z+4	; 0x04
    1d9e:	95 81       	ldd	r25, Z+5	; 0x05
    1da0:	88 27       	eor	r24, r24
    1da2:	9f 73       	andi	r25, 0x3F	; 63
    1da4:	89 2f       	mov	r24, r25
    1da6:	80 95       	com	r24
    1da8:	8f 73       	andi	r24, 0x3F	; 63
    1daa:	90 e2       	ldi	r25, 0x20	; 32
    1dac:	89 27       	eor	r24, r25
    1dae:	f8 01       	movw	r30, r16
    1db0:	80 83       	st	Z, r24
    1db2:	be 01       	movw	r22, r28
    1db4:	88 81       	ld	r24, Y
    1db6:	99 81       	ldd	r25, Y+1	; 0x01
    1db8:	37 df       	rcall	.-402    	; 0x1c28 <_Z11reverseBitsjPj>
    1dba:	88 81       	ld	r24, Y
    1dbc:	99 81       	ldd	r25, Y+1	; 0x01
    1dbe:	54 e0       	ldi	r21, 0x04	; 4
    1dc0:	96 95       	lsr	r25
    1dc2:	87 95       	ror	r24
    1dc4:	5a 95       	dec	r21
    1dc6:	e1 f7       	brne	.-8      	; 0x1dc0 <_Z10outLCA2LCAPjPhS_S0_S0_S_+0x7e>
    1dc8:	99 83       	std	Y+1, r25	; 0x01
    1dca:	88 83       	st	Y, r24
    1dcc:	b6 01       	movw	r22, r12
    1dce:	d6 01       	movw	r26, r12
    1dd0:	8d 91       	ld	r24, X+
    1dd2:	9c 91       	ld	r25, X
    1dd4:	29 df       	rcall	.-430    	; 0x1c28 <_Z11reverseBitsjPj>
    1dd6:	f6 01       	movw	r30, r12
    1dd8:	80 81       	ld	r24, Z
    1dda:	91 81       	ldd	r25, Z+1	; 0x01
    1ddc:	64 e0       	ldi	r22, 0x04	; 4
    1dde:	96 95       	lsr	r25
    1de0:	87 95       	ror	r24
    1de2:	6a 95       	dec	r22
    1de4:	e1 f7       	brne	.-8      	; 0x1dde <_Z10outLCA2LCAPjPhS_S0_S0_S_+0x9c>
    1de6:	91 83       	std	Z+1, r25	; 0x01
    1de8:	80 83       	st	Z, r24
    1dea:	df 91       	pop	r29
    1dec:	cf 91       	pop	r28
    1dee:	1f 91       	pop	r17
    1df0:	0f 91       	pop	r16
    1df2:	ff 90       	pop	r15
    1df4:	ef 90       	pop	r14
    1df6:	df 90       	pop	r13
    1df8:	cf 90       	pop	r12
    1dfa:	08 95       	ret

00001dfc <_Z15drawFuncLCAMenuP9CMenuItem>:
    1dfc:	ef 92       	push	r14
    1dfe:	ff 92       	push	r15
    1e00:	0f 93       	push	r16
    1e02:	1f 93       	push	r17
    1e04:	cf 93       	push	r28
    1e06:	df 93       	push	r29
    1e08:	ec 01       	movw	r28, r24
    1e0a:	40 91 25 01 	lds	r20, 0x0125
    1e0e:	50 91 26 01 	lds	r21, 0x0126
    1e12:	09 e0       	ldi	r16, 0x09	; 9
    1e14:	e0 2e       	mov	r14, r16
    1e16:	05 e0       	ldi	r16, 0x05	; 5
    1e18:	f0 2e       	mov	r15, r16
    1e1a:	00 91 22 01 	lds	r16, 0x0122
    1e1e:	20 91 23 01 	lds	r18, 0x0123
    1e22:	60 91 24 01 	lds	r22, 0x0124
    1e26:	80 91 27 01 	lds	r24, 0x0127
    1e2a:	90 91 28 01 	lds	r25, 0x0128
    1e2e:	23 df       	rcall	.-442    	; 0x1c76 <_Z7LCA2outjhjhhPj>
    1e30:	02 e2       	ldi	r16, 0x22	; 34
    1e32:	11 e0       	ldi	r17, 0x01	; 1
    1e34:	23 e2       	ldi	r18, 0x23	; 35
    1e36:	31 e0       	ldi	r19, 0x01	; 1
    1e38:	45 e2       	ldi	r20, 0x25	; 37
    1e3a:	51 e0       	ldi	r21, 0x01	; 1
    1e3c:	64 e2       	ldi	r22, 0x24	; 36
    1e3e:	71 e0       	ldi	r23, 0x01	; 1
    1e40:	87 e2       	ldi	r24, 0x27	; 39
    1e42:	91 e0       	ldi	r25, 0x01	; 1
    1e44:	7e df       	rcall	.-260    	; 0x1d42 <_Z10outLCA2LCAPjPhS_S0_S0_S_>
    1e46:	6f 89       	ldd	r22, Y+23	; 0x17
    1e48:	78 8d       	ldd	r23, Y+24	; 0x18
    1e4a:	fb 01       	movw	r30, r22
    1e4c:	01 90       	ld	r0, Z+
    1e4e:	00 20       	and	r0, r0
    1e50:	e9 f7       	brne	.-6      	; 0x1e4c <_Z15drawFuncLCAMenuP9CMenuItem+0x50>
    1e52:	af 01       	movw	r20, r30
    1e54:	41 50       	subi	r20, 0x01	; 1
    1e56:	51 09       	sbc	r21, r1
    1e58:	46 1b       	sub	r20, r22
    1e5a:	57 0b       	sbc	r21, r23
    1e5c:	45 31       	cpi	r20, 0x15	; 21
    1e5e:	51 05       	cpc	r21, r1
    1e60:	10 f0       	brcs	.+4      	; 0x1e66 <_Z15drawFuncLCAMenuP9CMenuItem+0x6a>
    1e62:	44 e1       	ldi	r20, 0x14	; 20
    1e64:	50 e0       	ldi	r21, 0x00	; 0
    1e66:	80 e5       	ldi	r24, 0x50	; 80
    1e68:	91 e0       	ldi	r25, 0x01	; 1
    1e6a:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    1e6e:	69 8d       	ldd	r22, Y+25	; 0x19
    1e70:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e72:	fb 01       	movw	r30, r22
    1e74:	01 90       	ld	r0, Z+
    1e76:	00 20       	and	r0, r0
    1e78:	e9 f7       	brne	.-6      	; 0x1e74 <_Z15drawFuncLCAMenuP9CMenuItem+0x78>
    1e7a:	af 01       	movw	r20, r30
    1e7c:	41 50       	subi	r20, 0x01	; 1
    1e7e:	51 09       	sbc	r21, r1
    1e80:	46 1b       	sub	r20, r22
    1e82:	57 0b       	sbc	r21, r23
    1e84:	45 31       	cpi	r20, 0x15	; 21
    1e86:	51 05       	cpc	r21, r1
    1e88:	10 f0       	brcs	.+4      	; 0x1e8e <_Z15drawFuncLCAMenuP9CMenuItem+0x92>
    1e8a:	44 e1       	ldi	r20, 0x14	; 20
    1e8c:	50 e0       	ldi	r21, 0x00	; 0
    1e8e:	8b e3       	ldi	r24, 0x3B	; 59
    1e90:	91 e0       	ldi	r25, 0x01	; 1
    1e92:	0e 94 01 1a 	call	0x3402	; 0x3402 <memcpy>
    1e96:	68 e5       	ldi	r22, 0x58	; 88
    1e98:	70 e0       	ldi	r23, 0x00	; 0
    1e9a:	80 e5       	ldi	r24, 0x50	; 80
    1e9c:	91 e0       	ldi	r25, 0x01	; 1
    1e9e:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1ea2:	c0 91 22 01 	lds	r28, 0x0122
    1ea6:	ac 2f       	mov	r26, r28
    1ea8:	a2 95       	swap	r26
    1eaa:	af 70       	andi	r26, 0x0F	; 15
    1eac:	b0 e0       	ldi	r27, 0x00	; 0
    1eae:	a7 5d       	subi	r26, 0xD7	; 215
    1eb0:	be 4f       	sbci	r27, 0xFE	; 254
    1eb2:	2c 91       	ld	r18, X
    1eb4:	fc 01       	movw	r30, r24
    1eb6:	20 83       	st	Z, r18
    1eb8:	68 e5       	ldi	r22, 0x58	; 88
    1eba:	70 e0       	ldi	r23, 0x00	; 0
    1ebc:	80 e5       	ldi	r24, 0x50	; 80
    1ebe:	91 e0       	ldi	r25, 0x01	; 1
    1ec0:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1ec4:	cf 70       	andi	r28, 0x0F	; 15
    1ec6:	ec 2f       	mov	r30, r28
    1ec8:	f0 e0       	ldi	r31, 0x00	; 0
    1eca:	e7 5d       	subi	r30, 0xD7	; 215
    1ecc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ece:	20 81       	ld	r18, Z
    1ed0:	fc 01       	movw	r30, r24
    1ed2:	20 83       	st	Z, r18
    1ed4:	68 e5       	ldi	r22, 0x58	; 88
    1ed6:	70 e0       	ldi	r23, 0x00	; 0
    1ed8:	80 e5       	ldi	r24, 0x50	; 80
    1eda:	91 e0       	ldi	r25, 0x01	; 1
    1edc:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1ee0:	c0 91 24 01 	lds	r28, 0x0124
    1ee4:	ac 2f       	mov	r26, r28
    1ee6:	a2 95       	swap	r26
    1ee8:	af 70       	andi	r26, 0x0F	; 15
    1eea:	b0 e0       	ldi	r27, 0x00	; 0
    1eec:	a7 5d       	subi	r26, 0xD7	; 215
    1eee:	be 4f       	sbci	r27, 0xFE	; 254
    1ef0:	2c 91       	ld	r18, X
    1ef2:	fc 01       	movw	r30, r24
    1ef4:	20 83       	st	Z, r18
    1ef6:	68 e5       	ldi	r22, 0x58	; 88
    1ef8:	70 e0       	ldi	r23, 0x00	; 0
    1efa:	80 e5       	ldi	r24, 0x50	; 80
    1efc:	91 e0       	ldi	r25, 0x01	; 1
    1efe:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1f02:	cf 70       	andi	r28, 0x0F	; 15
    1f04:	ec 2f       	mov	r30, r28
    1f06:	f0 e0       	ldi	r31, 0x00	; 0
    1f08:	e7 5d       	subi	r30, 0xD7	; 215
    1f0a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f0c:	20 81       	ld	r18, Z
    1f0e:	fc 01       	movw	r30, r24
    1f10:	20 83       	st	Z, r18
    1f12:	68 e5       	ldi	r22, 0x58	; 88
    1f14:	70 e0       	ldi	r23, 0x00	; 0
    1f16:	80 e5       	ldi	r24, 0x50	; 80
    1f18:	91 e0       	ldi	r25, 0x01	; 1
    1f1a:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1f1e:	c0 91 27 01 	lds	r28, 0x0127
    1f22:	d0 91 28 01 	lds	r29, 0x0128
    1f26:	fe 01       	movw	r30, r28
    1f28:	ee 27       	eor	r30, r30
    1f2a:	ff 70       	andi	r31, 0x0F	; 15
    1f2c:	ef 2f       	mov	r30, r31
    1f2e:	ff 27       	eor	r31, r31
    1f30:	e7 5d       	subi	r30, 0xD7	; 215
    1f32:	fe 4f       	sbci	r31, 0xFE	; 254
    1f34:	20 81       	ld	r18, Z
    1f36:	fc 01       	movw	r30, r24
    1f38:	20 83       	st	Z, r18
    1f3a:	68 e5       	ldi	r22, 0x58	; 88
    1f3c:	70 e0       	ldi	r23, 0x00	; 0
    1f3e:	80 e5       	ldi	r24, 0x50	; 80
    1f40:	91 e0       	ldi	r25, 0x01	; 1
    1f42:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1f46:	fe 01       	movw	r30, r28
    1f48:	e0 7f       	andi	r30, 0xF0	; 240
    1f4a:	ff 27       	eor	r31, r31
    1f4c:	a4 e0       	ldi	r26, 0x04	; 4
    1f4e:	f6 95       	lsr	r31
    1f50:	e7 95       	ror	r30
    1f52:	aa 95       	dec	r26
    1f54:	e1 f7       	brne	.-8      	; 0x1f4e <_Z15drawFuncLCAMenuP9CMenuItem+0x152>
    1f56:	e7 5d       	subi	r30, 0xD7	; 215
    1f58:	fe 4f       	sbci	r31, 0xFE	; 254
    1f5a:	20 81       	ld	r18, Z
    1f5c:	fc 01       	movw	r30, r24
    1f5e:	20 83       	st	Z, r18
    1f60:	68 e5       	ldi	r22, 0x58	; 88
    1f62:	70 e0       	ldi	r23, 0x00	; 0
    1f64:	80 e5       	ldi	r24, 0x50	; 80
    1f66:	91 e0       	ldi	r25, 0x01	; 1
    1f68:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1f6c:	cf 70       	andi	r28, 0x0F	; 15
    1f6e:	dd 27       	eor	r29, r29
    1f70:	c7 5d       	subi	r28, 0xD7	; 215
    1f72:	de 4f       	sbci	r29, 0xFE	; 254
    1f74:	28 81       	ld	r18, Y
    1f76:	fc 01       	movw	r30, r24
    1f78:	20 83       	st	Z, r18
    1f7a:	68 e5       	ldi	r22, 0x58	; 88
    1f7c:	70 e0       	ldi	r23, 0x00	; 0
    1f7e:	8b e3       	ldi	r24, 0x3B	; 59
    1f80:	91 e0       	ldi	r25, 0x01	; 1
    1f82:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1f86:	c0 91 0f 05 	lds	r28, 0x050F
    1f8a:	ac 2f       	mov	r26, r28
    1f8c:	a2 95       	swap	r26
    1f8e:	af 70       	andi	r26, 0x0F	; 15
    1f90:	b0 e0       	ldi	r27, 0x00	; 0
    1f92:	a7 5d       	subi	r26, 0xD7	; 215
    1f94:	be 4f       	sbci	r27, 0xFE	; 254
    1f96:	2c 91       	ld	r18, X
    1f98:	fc 01       	movw	r30, r24
    1f9a:	20 83       	st	Z, r18
    1f9c:	68 e5       	ldi	r22, 0x58	; 88
    1f9e:	70 e0       	ldi	r23, 0x00	; 0
    1fa0:	8b e3       	ldi	r24, 0x3B	; 59
    1fa2:	91 e0       	ldi	r25, 0x01	; 1
    1fa4:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1fa8:	cf 70       	andi	r28, 0x0F	; 15
    1faa:	ec 2f       	mov	r30, r28
    1fac:	f0 e0       	ldi	r31, 0x00	; 0
    1fae:	e7 5d       	subi	r30, 0xD7	; 215
    1fb0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fb2:	20 81       	ld	r18, Z
    1fb4:	fc 01       	movw	r30, r24
    1fb6:	20 83       	st	Z, r18
    1fb8:	68 e5       	ldi	r22, 0x58	; 88
    1fba:	70 e0       	ldi	r23, 0x00	; 0
    1fbc:	8b e3       	ldi	r24, 0x3B	; 59
    1fbe:	91 e0       	ldi	r25, 0x01	; 1
    1fc0:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1fc4:	c0 91 23 01 	lds	r28, 0x0123
    1fc8:	ac 2f       	mov	r26, r28
    1fca:	a2 95       	swap	r26
    1fcc:	af 70       	andi	r26, 0x0F	; 15
    1fce:	b0 e0       	ldi	r27, 0x00	; 0
    1fd0:	a7 5d       	subi	r26, 0xD7	; 215
    1fd2:	be 4f       	sbci	r27, 0xFE	; 254
    1fd4:	2c 91       	ld	r18, X
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	20 83       	st	Z, r18
    1fda:	68 e5       	ldi	r22, 0x58	; 88
    1fdc:	70 e0       	ldi	r23, 0x00	; 0
    1fde:	8b e3       	ldi	r24, 0x3B	; 59
    1fe0:	91 e0       	ldi	r25, 0x01	; 1
    1fe2:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    1fe6:	cf 70       	andi	r28, 0x0F	; 15
    1fe8:	ec 2f       	mov	r30, r28
    1fea:	f0 e0       	ldi	r31, 0x00	; 0
    1fec:	e7 5d       	subi	r30, 0xD7	; 215
    1fee:	fe 4f       	sbci	r31, 0xFE	; 254
    1ff0:	20 81       	ld	r18, Z
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	20 83       	st	Z, r18
    1ff6:	68 e5       	ldi	r22, 0x58	; 88
    1ff8:	70 e0       	ldi	r23, 0x00	; 0
    1ffa:	8b e3       	ldi	r24, 0x3B	; 59
    1ffc:	91 e0       	ldi	r25, 0x01	; 1
    1ffe:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    2002:	c0 91 25 01 	lds	r28, 0x0125
    2006:	d0 91 26 01 	lds	r29, 0x0126
    200a:	fe 01       	movw	r30, r28
    200c:	ee 27       	eor	r30, r30
    200e:	ff 70       	andi	r31, 0x0F	; 15
    2010:	ef 2f       	mov	r30, r31
    2012:	ff 27       	eor	r31, r31
    2014:	e7 5d       	subi	r30, 0xD7	; 215
    2016:	fe 4f       	sbci	r31, 0xFE	; 254
    2018:	20 81       	ld	r18, Z
    201a:	fc 01       	movw	r30, r24
    201c:	20 83       	st	Z, r18
    201e:	68 e5       	ldi	r22, 0x58	; 88
    2020:	70 e0       	ldi	r23, 0x00	; 0
    2022:	8b e3       	ldi	r24, 0x3B	; 59
    2024:	91 e0       	ldi	r25, 0x01	; 1
    2026:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    202a:	fe 01       	movw	r30, r28
    202c:	e0 7f       	andi	r30, 0xF0	; 240
    202e:	ff 27       	eor	r31, r31
    2030:	14 e0       	ldi	r17, 0x04	; 4
    2032:	f6 95       	lsr	r31
    2034:	e7 95       	ror	r30
    2036:	1a 95       	dec	r17
    2038:	e1 f7       	brne	.-8      	; 0x2032 <_Z15drawFuncLCAMenuP9CMenuItem+0x236>
    203a:	e7 5d       	subi	r30, 0xD7	; 215
    203c:	fe 4f       	sbci	r31, 0xFE	; 254
    203e:	20 81       	ld	r18, Z
    2040:	fc 01       	movw	r30, r24
    2042:	20 83       	st	Z, r18
    2044:	68 e5       	ldi	r22, 0x58	; 88
    2046:	70 e0       	ldi	r23, 0x00	; 0
    2048:	8b e3       	ldi	r24, 0x3B	; 59
    204a:	91 e0       	ldi	r25, 0x01	; 1
    204c:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    2050:	cf 70       	andi	r28, 0x0F	; 15
    2052:	dd 27       	eor	r29, r29
    2054:	c7 5d       	subi	r28, 0xD7	; 215
    2056:	de 4f       	sbci	r29, 0xFE	; 254
    2058:	28 81       	ld	r18, Y
    205a:	fc 01       	movw	r30, r24
    205c:	20 83       	st	Z, r18
    205e:	85 e0       	ldi	r24, 0x05	; 5
    2060:	0e 94 ae 00 	call	0x15c	; 0x15c <_Z8read_adch>
    2064:	18 2f       	mov	r17, r24
    2066:	68 e5       	ldi	r22, 0x58	; 88
    2068:	70 e0       	ldi	r23, 0x00	; 0
    206a:	8b e3       	ldi	r24, 0x3B	; 59
    206c:	91 e0       	ldi	r25, 0x01	; 1
    206e:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    2072:	ec 01       	movw	r28, r24
    2074:	a1 2f       	mov	r26, r17
    2076:	a2 95       	swap	r26
    2078:	af 70       	andi	r26, 0x0F	; 15
    207a:	b0 e0       	ldi	r27, 0x00	; 0
    207c:	a7 5d       	subi	r26, 0xD7	; 215
    207e:	be 4f       	sbci	r27, 0xFE	; 254
    2080:	8c 91       	ld	r24, X
    2082:	88 83       	st	Y, r24
    2084:	68 e5       	ldi	r22, 0x58	; 88
    2086:	70 e0       	ldi	r23, 0x00	; 0
    2088:	8b e3       	ldi	r24, 0x3B	; 59
    208a:	91 e0       	ldi	r25, 0x01	; 1
    208c:	0e 94 0a 1a 	call	0x3414	; 0x3414 <strchr>
    2090:	dc 01       	movw	r26, r24
    2092:	1f 70       	andi	r17, 0x0F	; 15
    2094:	e1 2f       	mov	r30, r17
    2096:	f0 e0       	ldi	r31, 0x00	; 0
    2098:	e7 5d       	subi	r30, 0xD7	; 215
    209a:	fe 4f       	sbci	r31, 0xFE	; 254
    209c:	80 81       	ld	r24, Z
    209e:	8c 93       	st	X, r24
    20a0:	20 e0       	ldi	r18, 0x00	; 0
    20a2:	a0 e5       	ldi	r26, 0x50	; 80
    20a4:	b1 e0       	ldi	r27, 0x01	; 1
    20a6:	30 e2       	ldi	r19, 0x20	; 32
    20a8:	fd 01       	movw	r30, r26
    20aa:	01 90       	ld	r0, Z+
    20ac:	00 20       	and	r0, r0
    20ae:	e9 f7       	brne	.-6      	; 0x20aa <_Z15drawFuncLCAMenuP9CMenuItem+0x2ae>
    20b0:	31 97       	sbiw	r30, 0x01	; 1
    20b2:	e0 55       	subi	r30, 0x50	; 80
    20b4:	f1 40       	sbci	r31, 0x01	; 1
    20b6:	82 2f       	mov	r24, r18
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	8e 17       	cp	r24, r30
    20bc:	9f 07       	cpc	r25, r31
    20be:	80 f4       	brcc	.+32     	; 0x20e0 <_Z15drawFuncLCAMenuP9CMenuItem+0x2e4>
    20c0:	fc 01       	movw	r30, r24
    20c2:	e0 5b       	subi	r30, 0xB0	; 176
    20c4:	fe 4f       	sbci	r31, 0xFE	; 254
    20c6:	40 81       	ld	r20, Z
    20c8:	40 34       	cpi	r20, 0x40	; 64
    20ca:	09 f4       	brne	.+2      	; 0x20ce <_Z15drawFuncLCAMenuP9CMenuItem+0x2d2>
    20cc:	30 83       	st	Z, r19
    20ce:	fc 01       	movw	r30, r24
    20d0:	e5 5c       	subi	r30, 0xC5	; 197
    20d2:	fe 4f       	sbci	r31, 0xFE	; 254
    20d4:	80 81       	ld	r24, Z
    20d6:	80 34       	cpi	r24, 0x40	; 64
    20d8:	09 f4       	brne	.+2      	; 0x20dc <_Z15drawFuncLCAMenuP9CMenuItem+0x2e0>
    20da:	30 83       	st	Z, r19
    20dc:	2f 5f       	subi	r18, 0xFF	; 255
    20de:	e4 cf       	rjmp	.-56     	; 0x20a8 <_Z15drawFuncLCAMenuP9CMenuItem+0x2ac>
    20e0:	45 e6       	ldi	r20, 0x65	; 101
    20e2:	51 e0       	ldi	r21, 0x01	; 1
    20e4:	6b e3       	ldi	r22, 0x3B	; 59
    20e6:	71 e0       	ldi	r23, 0x01	; 1
    20e8:	80 e5       	ldi	r24, 0x50	; 80
    20ea:	91 e0       	ldi	r25, 0x01	; 1
    20ec:	8c da       	rcall	.-2792   	; 0x1606 <_Z11Str2DrawStrPhS_S_>
    20ee:	85 e6       	ldi	r24, 0x65	; 101
    20f0:	91 e0       	ldi	r25, 0x01	; 1
    20f2:	df 91       	pop	r29
    20f4:	cf 91       	pop	r28
    20f6:	1f 91       	pop	r17
    20f8:	0f 91       	pop	r16
    20fa:	ff 90       	pop	r15
    20fc:	ef 90       	pop	r14
    20fe:	ad ca       	rjmp	.-2726   	; 0x165a <_Z9DrawOnLCDPh>

00002100 <_Z12SendCOMBytesPhc>:
    2100:	f8 94       	cli
    2102:	28 2f       	mov	r18, r24
    2104:	fc 01       	movw	r30, r24
    2106:	8e 2f       	mov	r24, r30
    2108:	82 1b       	sub	r24, r18
    210a:	86 17       	cp	r24, r22
    210c:	40 f4       	brcc	.+16     	; 0x211e <_Z12SendCOMBytesPhc+0x1e>
    210e:	80 91 9b 00 	lds	r24, 0x009B
    2112:	85 ff       	sbrs	r24, 5
    2114:	fc cf       	rjmp	.-8      	; 0x210e <_Z12SendCOMBytesPhc+0xe>
    2116:	81 91       	ld	r24, Z+
    2118:	80 93 9c 00 	sts	0x009C, r24
    211c:	f4 cf       	rjmp	.-24     	; 0x2106 <_Z12SendCOMBytesPhc+0x6>
    211e:	78 94       	sei
    2120:	08 95       	ret

00002122 <_Z9WriteModePh>:
    2122:	61 e0       	ldi	r22, 0x01	; 1
    2124:	ed cf       	rjmp	.-38     	; 0x2100 <_Z12SendCOMBytesPhc>

00002126 <_Z15WriteEraseFlashPh>:
    2126:	0c 94 00 78 	jmp	0xf000	; 0xf000 <__data_load_end+0xb92e>
    212a:	61 e0       	ldi	r22, 0x01	; 1
    212c:	e9 cf       	rjmp	.-46     	; 0x2100 <_Z12SendCOMBytesPhc>

0000212e <_Z8ReadAmplPh>:
    212e:	cf 93       	push	r28
    2130:	df 93       	push	r29
    2132:	00 d0       	rcall	.+0      	; 0x2134 <_Z8ReadAmplPh+0x6>
    2134:	00 d0       	rcall	.+0      	; 0x2136 <_Z8ReadAmplPh+0x8>
    2136:	00 d0       	rcall	.+0      	; 0x2138 <_Z8ReadAmplPh+0xa>
    2138:	cd b7       	in	r28, 0x3d	; 61
    213a:	de b7       	in	r29, 0x3e	; 62
    213c:	85 e0       	ldi	r24, 0x05	; 5
    213e:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
    2142:	98 2f       	mov	r25, r24
    2144:	92 95       	swap	r25
    2146:	9f 70       	andi	r25, 0x0F	; 15
    2148:	90 5d       	subi	r25, 0xD0	; 208
    214a:	9c 83       	std	Y+4, r25	; 0x04
    214c:	8f 70       	andi	r24, 0x0F	; 15
    214e:	80 5d       	subi	r24, 0xD0	; 208
    2150:	8d 83       	std	Y+5, r24	; 0x05
    2152:	83 e0       	ldi	r24, 0x03	; 3
    2154:	8e 83       	std	Y+6, r24	; 0x06
    2156:	66 e0       	ldi	r22, 0x06	; 6
    2158:	ce 01       	movw	r24, r28
    215a:	01 96       	adiw	r24, 0x01	; 1
    215c:	d1 df       	rcall	.-94     	; 0x2100 <_Z12SendCOMBytesPhc>
    215e:	26 96       	adiw	r28, 0x06	; 6
    2160:	0f b6       	in	r0, 0x3f	; 63
    2162:	f8 94       	cli
    2164:	de bf       	out	0x3e, r29	; 62
    2166:	0f be       	out	0x3f, r0	; 63
    2168:	cd bf       	out	0x3d, r28	; 61
    216a:	df 91       	pop	r29
    216c:	cf 91       	pop	r28
    216e:	08 95       	ret

00002170 <_Z16ReadDetectorCoefPh>:
    2170:	0f 93       	push	r16
    2172:	1f 93       	push	r17
    2174:	cf 93       	push	r28
    2176:	df 93       	push	r29
    2178:	1f 92       	push	r1
    217a:	cd b7       	in	r28, 0x3d	; 61
    217c:	de b7       	in	r29, 0x3e	; 62
    217e:	88 e9       	ldi	r24, 0x98	; 152
    2180:	89 83       	std	Y+1, r24	; 0x01
    2182:	61 e0       	ldi	r22, 0x01	; 1
    2184:	ce 01       	movw	r24, r28
    2186:	01 96       	adiw	r24, 0x01	; 1
    2188:	bb df       	rcall	.-138    	; 0x2100 <_Z12SendCOMBytesPhc>
    218a:	00 e0       	ldi	r16, 0x00	; 0
    218c:	10 e0       	ldi	r17, 0x00	; 0
    218e:	be 01       	movw	r22, r28
    2190:	6f 5f       	subi	r22, 0xFF	; 255
    2192:	7f 4f       	sbci	r23, 0xFF	; 255
    2194:	c8 01       	movw	r24, r16
    2196:	0e 94 ed 02 	call	0x5da	; 0x5da <_Z17ReadDetCalInFlashjPh>
    219a:	61 e0       	ldi	r22, 0x01	; 1
    219c:	ce 01       	movw	r24, r28
    219e:	01 96       	adiw	r24, 0x01	; 1
    21a0:	af df       	rcall	.-162    	; 0x2100 <_Z12SendCOMBytesPhc>
    21a2:	0f 5f       	subi	r16, 0xFF	; 255
    21a4:	1f 4f       	sbci	r17, 0xFF	; 255
    21a6:	0c 31       	cpi	r16, 0x1C	; 28
    21a8:	11 05       	cpc	r17, r1
    21aa:	89 f7       	brne	.-30     	; 0x218e <_Z16ReadDetectorCoefPh+0x1e>
    21ac:	83 e0       	ldi	r24, 0x03	; 3
    21ae:	89 83       	std	Y+1, r24	; 0x01
    21b0:	61 e0       	ldi	r22, 0x01	; 1
    21b2:	ce 01       	movw	r24, r28
    21b4:	01 96       	adiw	r24, 0x01	; 1
    21b6:	a4 df       	rcall	.-184    	; 0x2100 <_Z12SendCOMBytesPhc>
    21b8:	0f 90       	pop	r0
    21ba:	df 91       	pop	r29
    21bc:	cf 91       	pop	r28
    21be:	1f 91       	pop	r17
    21c0:	0f 91       	pop	r16
    21c2:	08 95       	ret

000021c4 <_Z10FindDevicePh>:
    21c4:	cf 93       	push	r28
    21c6:	df 93       	push	r29
    21c8:	1f 92       	push	r1
    21ca:	cd b7       	in	r28, 0x3d	; 61
    21cc:	de b7       	in	r29, 0x3e	; 62
    21ce:	8f ef       	ldi	r24, 0xFF	; 255
    21d0:	89 83       	std	Y+1, r24	; 0x01
    21d2:	61 e0       	ldi	r22, 0x01	; 1
    21d4:	ce 01       	movw	r24, r28
    21d6:	01 96       	adiw	r24, 0x01	; 1
    21d8:	93 df       	rcall	.-218    	; 0x2100 <_Z12SendCOMBytesPhc>
    21da:	64 e0       	ldi	r22, 0x04	; 4
    21dc:	80 e5       	ldi	r24, 0x50	; 80
    21de:	93 e0       	ldi	r25, 0x03	; 3
    21e0:	8f df       	rcall	.-226    	; 0x2100 <_Z12SendCOMBytesPhc>
    21e2:	83 e0       	ldi	r24, 0x03	; 3
    21e4:	89 83       	std	Y+1, r24	; 0x01
    21e6:	61 e0       	ldi	r22, 0x01	; 1
    21e8:	ce 01       	movw	r24, r28
    21ea:	01 96       	adiw	r24, 0x01	; 1
    21ec:	89 df       	rcall	.-238    	; 0x2100 <_Z12SendCOMBytesPhc>
    21ee:	0f 90       	pop	r0
    21f0:	df 91       	pop	r29
    21f2:	cf 91       	pop	r28
    21f4:	08 95       	ret

000021f6 <_Z17CheckComandFormatic>:
    21f6:	80 31       	cpi	r24, 0x10	; 16
    21f8:	91 05       	cpc	r25, r1
    21fa:	60 f4       	brcc	.+24     	; 0x2214 <_Z17CheckComandFormatic+0x1e>
    21fc:	fc 01       	movw	r30, r24
    21fe:	e4 55       	subi	r30, 0x54	; 84
    2200:	ff 4f       	sbci	r31, 0xFF	; 255
    2202:	e4 91       	lpm	r30, Z
    2204:	f0 e0       	ldi	r31, 0x00	; 0
    2206:	70 e0       	ldi	r23, 0x00	; 0
    2208:	62 50       	subi	r22, 0x02	; 2
    220a:	71 09       	sbc	r23, r1
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	e6 17       	cp	r30, r22
    2210:	f7 07       	cpc	r31, r23
    2212:	09 f0       	breq	.+2      	; 0x2216 <_Z17CheckComandFormatic+0x20>
    2214:	80 e0       	ldi	r24, 0x00	; 0
    2216:	08 95       	ret

00002218 <_Z7SendERRv>:
    2218:	cf 93       	push	r28
    221a:	df 93       	push	r29
    221c:	00 d0       	rcall	.+0      	; 0x221e <_Z7SendERRv+0x6>
    221e:	cd b7       	in	r28, 0x3d	; 61
    2220:	de b7       	in	r29, 0x3e	; 62
    2222:	86 e1       	ldi	r24, 0x16	; 22
    2224:	89 83       	std	Y+1, r24	; 0x01
    2226:	83 e0       	ldi	r24, 0x03	; 3
    2228:	8a 83       	std	Y+2, r24	; 0x02
    222a:	62 e0       	ldi	r22, 0x02	; 2
    222c:	ce 01       	movw	r24, r28
    222e:	01 96       	adiw	r24, 0x01	; 1
    2230:	67 df       	rcall	.-306    	; 0x2100 <_Z12SendCOMBytesPhc>
    2232:	0f 90       	pop	r0
    2234:	0f 90       	pop	r0
    2236:	df 91       	pop	r29
    2238:	cf 91       	pop	r28
    223a:	08 95       	ret

0000223c <_Z6SendOkv>:
    223c:	cf 93       	push	r28
    223e:	df 93       	push	r29
    2240:	00 d0       	rcall	.+0      	; 0x2242 <_Z6SendOkv+0x6>
    2242:	cd b7       	in	r28, 0x3d	; 61
    2244:	de b7       	in	r29, 0x3e	; 62
    2246:	86 e0       	ldi	r24, 0x06	; 6
    2248:	89 83       	std	Y+1, r24	; 0x01
    224a:	83 e0       	ldi	r24, 0x03	; 3
    224c:	8a 83       	std	Y+2, r24	; 0x02
    224e:	62 e0       	ldi	r22, 0x02	; 2
    2250:	ce 01       	movw	r24, r28
    2252:	01 96       	adiw	r24, 0x01	; 1
    2254:	55 df       	rcall	.-342    	; 0x2100 <_Z12SendCOMBytesPhc>
    2256:	0f 90       	pop	r0
    2258:	0f 90       	pop	r0
    225a:	df 91       	pop	r29
    225c:	cf 91       	pop	r28
    225e:	08 95       	ret

00002260 <_Z10WriteAFuncPh>:
    2260:	ef 92       	push	r14
    2262:	ff 92       	push	r15
    2264:	0f 93       	push	r16
    2266:	fc 01       	movw	r30, r24
    2268:	21 81       	ldd	r18, Z+1	; 0x01
    226a:	02 81       	ldd	r16, Z+2	; 0x02
    226c:	0f 70       	andi	r16, 0x0F	; 15
    226e:	f0 e1       	ldi	r31, 0x10	; 16
    2270:	2f 9f       	mul	r18, r31
    2272:	00 0d       	add	r16, r0
    2274:	11 24       	eor	r1, r1
    2276:	00 93 22 01 	sts	0x0122, r16
    227a:	40 91 25 01 	lds	r20, 0x0125
    227e:	50 91 26 01 	lds	r21, 0x0126
    2282:	89 e0       	ldi	r24, 0x09	; 9
    2284:	e8 2e       	mov	r14, r24
    2286:	85 e0       	ldi	r24, 0x05	; 5
    2288:	f8 2e       	mov	r15, r24
    228a:	20 91 23 01 	lds	r18, 0x0123
    228e:	60 91 24 01 	lds	r22, 0x0124
    2292:	80 91 27 01 	lds	r24, 0x0127
    2296:	90 91 28 01 	lds	r25, 0x0128
    229a:	ed dc       	rcall	.-1574   	; 0x1c76 <_Z7LCA2outjhjhhPj>
    229c:	c7 01       	movw	r24, r14
    229e:	f4 d5       	rcall	.+3048   	; 0x2e88 <_Z5SendAPj>
    22a0:	0f 91       	pop	r16
    22a2:	ff 90       	pop	r15
    22a4:	ef 90       	pop	r14
    22a6:	ca cf       	rjmp	.-108    	; 0x223c <_Z6SendOkv>

000022a8 <_Z8SaveCoefPh>:
    22a8:	60 e0       	ldi	r22, 0x00	; 0
    22aa:	70 e0       	ldi	r23, 0x00	; 0
    22ac:	80 ef       	ldi	r24, 0xF0	; 240
    22ae:	94 e0       	ldi	r25, 0x04	; 4
    22b0:	0e 94 39 09 	call	0x1272	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    22b4:	c3 cf       	rjmp	.-122    	; 0x223c <_Z6SendOkv>

000022b6 <__vector_30>:
    22b6:	1f 92       	push	r1
    22b8:	0f 92       	push	r0
    22ba:	0f b6       	in	r0, 0x3f	; 63
    22bc:	0f 92       	push	r0
    22be:	11 24       	eor	r1, r1
    22c0:	0b b6       	in	r0, 0x3b	; 59
    22c2:	0f 92       	push	r0
    22c4:	1f 93       	push	r17
    22c6:	2f 93       	push	r18
    22c8:	3f 93       	push	r19
    22ca:	4f 93       	push	r20
    22cc:	5f 93       	push	r21
    22ce:	6f 93       	push	r22
    22d0:	7f 93       	push	r23
    22d2:	8f 93       	push	r24
    22d4:	9f 93       	push	r25
    22d6:	af 93       	push	r26
    22d8:	bf 93       	push	r27
    22da:	cf 93       	push	r28
    22dc:	df 93       	push	r29
    22de:	ef 93       	push	r30
    22e0:	ff 93       	push	r31
    22e2:	f8 94       	cli
    22e4:	c0 91 9c 00 	lds	r28, 0x009C
    22e8:	6c 2f       	mov	r22, r28
    22ea:	70 e0       	ldi	r23, 0x00	; 0
    22ec:	40 e1       	ldi	r20, 0x10	; 16
    22ee:	50 e0       	ldi	r21, 0x00	; 0
    22f0:	8c eb       	ldi	r24, 0xBC	; 188
    22f2:	90 e0       	ldi	r25, 0x00	; 0
    22f4:	0e 94 e7 19 	call	0x33ce	; 0x33ce <memchr_P>
    22f8:	89 2b       	or	r24, r25
    22fa:	11 f0       	breq	.+4      	; 0x2300 <__vector_30+0x4a>
    22fc:	10 92 64 03 	sts	0x0364, r1
    2300:	80 91 64 03 	lds	r24, 0x0364
    2304:	80 32       	cpi	r24, 0x20	; 32
    2306:	11 f4       	brne	.+4      	; 0x230c <__vector_30+0x56>
    2308:	10 92 64 03 	sts	0x0364, r1
    230c:	10 91 64 03 	lds	r17, 0x0364
    2310:	e1 2f       	mov	r30, r17
    2312:	f0 e0       	ldi	r31, 0x00	; 0
    2314:	eb 59       	subi	r30, 0x9B	; 155
    2316:	fc 4f       	sbci	r31, 0xFC	; 252
    2318:	c0 83       	st	Z, r28
    231a:	1f 5f       	subi	r17, 0xFF	; 255
    231c:	10 93 64 03 	sts	0x0364, r17
    2320:	c3 30       	cpi	r28, 0x03	; 3
    2322:	19 f5       	brne	.+70     	; 0x236a <__vector_30+0xb4>
    2324:	80 91 65 03 	lds	r24, 0x0365
    2328:	68 2f       	mov	r22, r24
    232a:	70 e0       	ldi	r23, 0x00	; 0
    232c:	40 e1       	ldi	r20, 0x10	; 16
    232e:	50 e0       	ldi	r21, 0x00	; 0
    2330:	8c eb       	ldi	r24, 0xBC	; 188
    2332:	90 e0       	ldi	r25, 0x00	; 0
    2334:	0e 94 e7 19 	call	0x33ce	; 0x33ce <memchr_P>
    2338:	00 97       	sbiw	r24, 0x00	; 0
    233a:	b9 f0       	breq	.+46     	; 0x236a <__vector_30+0xb4>
    233c:	ec 01       	movw	r28, r24
    233e:	cc 5b       	subi	r28, 0xBC	; 188
    2340:	d0 40       	sbci	r29, 0x00	; 0
    2342:	61 2f       	mov	r22, r17
    2344:	ce 01       	movw	r24, r28
    2346:	57 df       	rcall	.-338    	; 0x21f6 <_Z17CheckComandFormatic>
    2348:	88 23       	and	r24, r24
    234a:	61 f0       	breq	.+24     	; 0x2364 <__vector_30+0xae>
    234c:	fe 01       	movw	r30, r28
    234e:	ee 0f       	add	r30, r30
    2350:	ff 1f       	adc	r31, r31
    2352:	e4 57       	subi	r30, 0x74	; 116
    2354:	ff 4f       	sbci	r31, 0xFF	; 255
    2356:	25 91       	lpm	r18, Z+
    2358:	34 91       	lpm	r19, Z
    235a:	85 e6       	ldi	r24, 0x65	; 101
    235c:	93 e0       	ldi	r25, 0x03	; 3
    235e:	f9 01       	movw	r30, r18
    2360:	09 95       	icall
    2362:	01 c0       	rjmp	.+2      	; 0x2366 <__vector_30+0xb0>
    2364:	59 df       	rcall	.-334    	; 0x2218 <_Z7SendERRv>
    2366:	10 92 64 03 	sts	0x0364, r1
    236a:	78 94       	sei
    236c:	ff 91       	pop	r31
    236e:	ef 91       	pop	r30
    2370:	df 91       	pop	r29
    2372:	cf 91       	pop	r28
    2374:	bf 91       	pop	r27
    2376:	af 91       	pop	r26
    2378:	9f 91       	pop	r25
    237a:	8f 91       	pop	r24
    237c:	7f 91       	pop	r23
    237e:	6f 91       	pop	r22
    2380:	5f 91       	pop	r21
    2382:	4f 91       	pop	r20
    2384:	3f 91       	pop	r19
    2386:	2f 91       	pop	r18
    2388:	1f 91       	pop	r17
    238a:	0f 90       	pop	r0
    238c:	0b be       	out	0x3b, r0	; 59
    238e:	0f 90       	pop	r0
    2390:	0f be       	out	0x3f, r0	; 63
    2392:	0f 90       	pop	r0
    2394:	1f 90       	pop	r1
    2396:	18 95       	reti

00002398 <_Z8data2LCAPh>:
    2398:	ef 92       	push	r14
    239a:	ff 92       	push	r15
    239c:	0f 93       	push	r16
    239e:	fc 01       	movw	r30, r24
    23a0:	80 81       	ld	r24, Z
    23a2:	8f 70       	andi	r24, 0x0F	; 15
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	98 2f       	mov	r25, r24
    23a8:	88 27       	eor	r24, r24
    23aa:	21 81       	ldd	r18, Z+1	; 0x01
    23ac:	40 e1       	ldi	r20, 0x10	; 16
    23ae:	24 9f       	mul	r18, r20
    23b0:	90 01       	movw	r18, r0
    23b2:	11 24       	eor	r1, r1
    23b4:	33 27       	eor	r19, r19
    23b6:	82 0f       	add	r24, r18
    23b8:	93 1f       	adc	r25, r19
    23ba:	22 81       	ldd	r18, Z+2	; 0x02
    23bc:	2f 70       	andi	r18, 0x0F	; 15
    23be:	82 0f       	add	r24, r18
    23c0:	91 1d       	adc	r25, r1
    23c2:	90 93 28 01 	sts	0x0128, r25
    23c6:	80 93 27 01 	sts	0x0127, r24
    23ca:	23 81       	ldd	r18, Z+3	; 0x03
    23cc:	64 81       	ldd	r22, Z+4	; 0x04
    23ce:	6f 70       	andi	r22, 0x0F	; 15
    23d0:	70 e1       	ldi	r23, 0x10	; 16
    23d2:	27 9f       	mul	r18, r23
    23d4:	60 0d       	add	r22, r0
    23d6:	11 24       	eor	r1, r1
    23d8:	60 93 24 01 	sts	0x0124, r22
    23dc:	45 81       	ldd	r20, Z+5	; 0x05
    23de:	4f 70       	andi	r20, 0x0F	; 15
    23e0:	50 e0       	ldi	r21, 0x00	; 0
    23e2:	54 2f       	mov	r21, r20
    23e4:	44 27       	eor	r20, r20
    23e6:	26 81       	ldd	r18, Z+6	; 0x06
    23e8:	70 e1       	ldi	r23, 0x10	; 16
    23ea:	27 9f       	mul	r18, r23
    23ec:	90 01       	movw	r18, r0
    23ee:	11 24       	eor	r1, r1
    23f0:	33 27       	eor	r19, r19
    23f2:	42 0f       	add	r20, r18
    23f4:	53 1f       	adc	r21, r19
    23f6:	27 81       	ldd	r18, Z+7	; 0x07
    23f8:	2f 70       	andi	r18, 0x0F	; 15
    23fa:	42 0f       	add	r20, r18
    23fc:	51 1d       	adc	r21, r1
    23fe:	50 93 26 01 	sts	0x0126, r21
    2402:	40 93 25 01 	sts	0x0125, r20
    2406:	30 85       	ldd	r19, Z+8	; 0x08
    2408:	21 85       	ldd	r18, Z+9	; 0x09
    240a:	2f 70       	andi	r18, 0x0F	; 15
    240c:	70 e1       	ldi	r23, 0x10	; 16
    240e:	37 9f       	mul	r19, r23
    2410:	20 0d       	add	r18, r0
    2412:	11 24       	eor	r1, r1
    2414:	20 93 23 01 	sts	0x0123, r18
    2418:	32 85       	ldd	r19, Z+10	; 0x0a
    241a:	03 85       	ldd	r16, Z+11	; 0x0b
    241c:	0f 70       	andi	r16, 0x0F	; 15
    241e:	70 e1       	ldi	r23, 0x10	; 16
    2420:	37 9f       	mul	r19, r23
    2422:	00 0d       	add	r16, r0
    2424:	11 24       	eor	r1, r1
    2426:	00 93 22 01 	sts	0x0122, r16
    242a:	79 e0       	ldi	r23, 0x09	; 9
    242c:	e7 2e       	mov	r14, r23
    242e:	75 e0       	ldi	r23, 0x05	; 5
    2430:	f7 2e       	mov	r15, r23
    2432:	21 dc       	rcall	.-1982   	; 0x1c76 <_Z7LCA2outjhjhhPj>
    2434:	0f 91       	pop	r16
    2436:	ff 90       	pop	r15
    2438:	ef 90       	pop	r14
    243a:	08 95       	ret

0000243c <_Z12WriteLCAFuncPh>:
    243c:	01 96       	adiw	r24, 0x01	; 1
    243e:	ac df       	rcall	.-168    	; 0x2398 <_Z8data2LCAPh>
    2440:	89 e0       	ldi	r24, 0x09	; 9
    2442:	95 e0       	ldi	r25, 0x05	; 5
    2444:	47 d5       	rcall	.+2702   	; 0x2ed4 <_Z11SendLCA2SelPh>
    2446:	fa ce       	rjmp	.-524    	; 0x223c <_Z6SendOkv>

00002448 <_Z12ReadAllFlashPh>:
    2448:	0f 93       	push	r16
    244a:	1f 93       	push	r17
    244c:	cf 93       	push	r28
    244e:	df 93       	push	r29
    2450:	cd b7       	in	r28, 0x3d	; 61
    2452:	de b7       	in	r29, 0x3e	; 62
    2454:	28 97       	sbiw	r28, 0x08	; 8
    2456:	0f b6       	in	r0, 0x3f	; 63
    2458:	f8 94       	cli
    245a:	de bf       	out	0x3e, r29	; 62
    245c:	0f be       	out	0x3f, r0	; 63
    245e:	cd bf       	out	0x3d, r28	; 61
    2460:	dc 01       	movw	r26, r24
    2462:	11 96       	adiw	r26, 0x01	; 1
    2464:	e2 ef       	ldi	r30, 0xF2	; 242
    2466:	f4 e0       	ldi	r31, 0x04	; 4
    2468:	8d 91       	ld	r24, X+
    246a:	8f 70       	andi	r24, 0x0F	; 15
    246c:	81 93       	st	Z+, r24
    246e:	84 e0       	ldi	r24, 0x04	; 4
    2470:	e9 3f       	cpi	r30, 0xF9	; 249
    2472:	f8 07       	cpc	r31, r24
    2474:	c9 f7       	brne	.-14     	; 0x2468 <_Z12ReadAllFlashPh+0x20>
    2476:	82 ef       	ldi	r24, 0xF2	; 242
    2478:	94 e0       	ldi	r25, 0x04	; 4
    247a:	0e 94 41 02 	call	0x482	; 0x482 <_Z10CharFtoIndPh>
    247e:	98 87       	std	Y+8, r25	; 0x08
    2480:	8f 83       	std	Y+7, r24	; 0x07
    2482:	8e 01       	movw	r16, r28
    2484:	0f 5f       	subi	r16, 0xFF	; 255
    2486:	1f 4f       	sbci	r17, 0xFF	; 255
    2488:	86 e0       	ldi	r24, 0x06	; 6
    248a:	f8 01       	movw	r30, r16
    248c:	11 92       	st	Z+, r1
    248e:	8a 95       	dec	r24
    2490:	e9 f7       	brne	.-6      	; 0x248c <_Z12ReadAllFlashPh+0x44>
    2492:	46 e0       	ldi	r20, 0x06	; 6
    2494:	b8 01       	movw	r22, r16
    2496:	ce 01       	movw	r24, r28
    2498:	07 96       	adiw	r24, 0x07	; 7
    249a:	0e 94 9d 02 	call	0x53a	; 0x53a <_Z18ReadDataInFlashIICPjPhh>
    249e:	c8 01       	movw	r24, r16
    24a0:	7b df       	rcall	.-266    	; 0x2398 <_Z8data2LCAPh>
    24a2:	66 e0       	ldi	r22, 0x06	; 6
    24a4:	c8 01       	movw	r24, r16
    24a6:	2c de       	rcall	.-936    	; 0x2100 <_Z12SendCOMBytesPhc>
    24a8:	28 96       	adiw	r28, 0x08	; 8
    24aa:	0f b6       	in	r0, 0x3f	; 63
    24ac:	f8 94       	cli
    24ae:	de bf       	out	0x3e, r29	; 62
    24b0:	0f be       	out	0x3f, r0	; 63
    24b2:	cd bf       	out	0x3d, r28	; 61
    24b4:	df 91       	pop	r29
    24b6:	cf 91       	pop	r28
    24b8:	1f 91       	pop	r17
    24ba:	0f 91       	pop	r16
    24bc:	08 95       	ret

000024be <_Z15WriteData2FlashPh>:
    24be:	0f 93       	push	r16
    24c0:	1f 93       	push	r17
    24c2:	cf 93       	push	r28
    24c4:	df 93       	push	r29
    24c6:	cd b7       	in	r28, 0x3d	; 61
    24c8:	de b7       	in	r29, 0x3e	; 62
    24ca:	28 97       	sbiw	r28, 0x08	; 8
    24cc:	0f b6       	in	r0, 0x3f	; 63
    24ce:	f8 94       	cli
    24d0:	de bf       	out	0x3e, r29	; 62
    24d2:	0f be       	out	0x3f, r0	; 63
    24d4:	cd bf       	out	0x3d, r28	; 61
    24d6:	8c 01       	movw	r16, r24
    24d8:	01 96       	adiw	r24, 0x01	; 1
    24da:	0e 94 41 02 	call	0x482	; 0x482 <_Z10CharFtoIndPh>
    24de:	98 87       	std	Y+8, r25	; 0x08
    24e0:	8f 83       	std	Y+7, r24	; 0x07
    24e2:	c8 01       	movw	r24, r16
    24e4:	08 96       	adiw	r24, 0x08	; 8
    24e6:	58 df       	rcall	.-336    	; 0x2398 <_Z8data2LCAPh>
    24e8:	69 e0       	ldi	r22, 0x09	; 9
    24ea:	75 e0       	ldi	r23, 0x05	; 5
    24ec:	8f 81       	ldd	r24, Y+7	; 0x07
    24ee:	98 85       	ldd	r25, Y+8	; 0x08
    24f0:	0e 94 98 02 	call	0x530	; 0x530 <_Z17WriteLCAout2FlashjPh>
    24f4:	8e 01       	movw	r16, r28
    24f6:	0f 5f       	subi	r16, 0xFF	; 255
    24f8:	1f 4f       	sbci	r17, 0xFF	; 255
    24fa:	86 e0       	ldi	r24, 0x06	; 6
    24fc:	f8 01       	movw	r30, r16
    24fe:	11 92       	st	Z+, r1
    2500:	8a 95       	dec	r24
    2502:	e9 f7       	brne	.-6      	; 0x24fe <_Z15WriteData2FlashPh+0x40>
    2504:	46 e0       	ldi	r20, 0x06	; 6
    2506:	b8 01       	movw	r22, r16
    2508:	ce 01       	movw	r24, r28
    250a:	07 96       	adiw	r24, 0x07	; 7
    250c:	0e 94 9d 02 	call	0x53a	; 0x53a <_Z18ReadDataInFlashIICPjPhh>
    2510:	46 e0       	ldi	r20, 0x06	; 6
    2512:	50 e0       	ldi	r21, 0x00	; 0
    2514:	69 e0       	ldi	r22, 0x09	; 9
    2516:	75 e0       	ldi	r23, 0x05	; 5
    2518:	c8 01       	movw	r24, r16
    251a:	66 d7       	rcall	.+3788   	; 0x33e8 <memcmp>
    251c:	89 2b       	or	r24, r25
    251e:	11 f4       	brne	.+4      	; 0x2524 <_Z15WriteData2FlashPh+0x66>
    2520:	8d de       	rcall	.-742    	; 0x223c <_Z6SendOkv>
    2522:	01 c0       	rjmp	.+2      	; 0x2526 <_Z15WriteData2FlashPh+0x68>
    2524:	79 de       	rcall	.-782    	; 0x2218 <_Z7SendERRv>
    2526:	28 96       	adiw	r28, 0x08	; 8
    2528:	0f b6       	in	r0, 0x3f	; 63
    252a:	f8 94       	cli
    252c:	de bf       	out	0x3e, r29	; 62
    252e:	0f be       	out	0x3f, r0	; 63
    2530:	cd bf       	out	0x3d, r28	; 61
    2532:	df 91       	pop	r29
    2534:	cf 91       	pop	r28
    2536:	1f 91       	pop	r17
    2538:	0f 91       	pop	r16
    253a:	08 95       	ret

0000253c <_Z13ChangeModePrkP12StateOfPlate>:
    253c:	0f 93       	push	r16
    253e:	1f 93       	push	r17
    2540:	cf 93       	push	r28
    2542:	df 93       	push	r29
    2544:	ec 01       	movw	r28, r24
    2546:	8c 01       	movw	r16, r24
    2548:	03 5f       	subi	r16, 0xF3	; 243
    254a:	1f 4f       	sbci	r17, 0xFF	; 255
    254c:	b8 01       	movw	r22, r16
    254e:	8e ef       	ldi	r24, 0xFE	; 254
    2550:	9f e0       	ldi	r25, 0x0F	; 15
    2552:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13Read_ControlljPh>
    2556:	99 81       	ldd	r25, Y+1	; 0x01
    2558:	88 89       	ldd	r24, Y+16	; 0x10
    255a:	88 7f       	andi	r24, 0xF8	; 248
    255c:	91 11       	cpse	r25, r1
    255e:	02 c0       	rjmp	.+4      	; 0x2564 <_Z13ChangeModePrkP12StateOfPlate+0x28>
    2560:	8c 5f       	subi	r24, 0xFC	; 252
    2562:	01 c0       	rjmp	.+2      	; 0x2566 <_Z13ChangeModePrkP12StateOfPlate+0x2a>
    2564:	8a 5f       	subi	r24, 0xFA	; 250
    2566:	88 8b       	std	Y+16, r24	; 0x10
    2568:	b8 01       	movw	r22, r16
    256a:	8e ef       	ldi	r24, 0xFE	; 254
    256c:	97 e0       	ldi	r25, 0x07	; 7
    256e:	df 91       	pop	r29
    2570:	cf 91       	pop	r28
    2572:	1f 91       	pop	r17
    2574:	0f 91       	pop	r16
    2576:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>

0000257a <_Z11SetOutLevelh>:
    257a:	cf 93       	push	r28
    257c:	c8 2f       	mov	r28, r24
    257e:	61 e0       	ldi	r22, 0x01	; 1
    2580:	75 e0       	ldi	r23, 0x05	; 5
    2582:	8d ef       	ldi	r24, 0xFD	; 253
    2584:	9f e0       	ldi	r25, 0x0F	; 15
    2586:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z13Read_ControlljPh>
    258a:	e4 e0       	ldi	r30, 0x04	; 4
    258c:	f5 e0       	ldi	r31, 0x05	; 5
    258e:	8c 2f       	mov	r24, r28
    2590:	8f 77       	andi	r24, 0x7F	; 127
    2592:	90 81       	ld	r25, Z
    2594:	90 78       	andi	r25, 0x80	; 128
    2596:	89 2b       	or	r24, r25
    2598:	80 83       	st	Z, r24
    259a:	61 e0       	ldi	r22, 0x01	; 1
    259c:	75 e0       	ldi	r23, 0x05	; 5
    259e:	8d ef       	ldi	r24, 0xFD	; 253
    25a0:	97 e0       	ldi	r25, 0x07	; 7
    25a2:	cf 91       	pop	r28
    25a4:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>

000025a8 <_Z20SolveFreqIndCorrCoefv>:
    25a8:	20 91 f2 04 	lds	r18, 0x04F2
    25ac:	80 91 f3 04 	lds	r24, 0x04F3
    25b0:	3a e0       	ldi	r19, 0x0A	; 10
    25b2:	83 9f       	mul	r24, r19
    25b4:	c0 01       	movw	r24, r0
    25b6:	11 24       	eor	r1, r1
    25b8:	34 e6       	ldi	r19, 0x64	; 100
    25ba:	23 9f       	mul	r18, r19
    25bc:	80 0d       	add	r24, r0
    25be:	91 1d       	adc	r25, r1
    25c0:	11 24       	eor	r1, r1
    25c2:	20 91 f4 04 	lds	r18, 0x04F4
    25c6:	82 0f       	add	r24, r18
    25c8:	91 1d       	adc	r25, r1
    25ca:	0f 97       	sbiw	r24, 0x0f	; 15
    25cc:	65 e0       	ldi	r22, 0x05	; 5
    25ce:	70 e0       	ldi	r23, 0x00	; 0
    25d0:	e7 d6       	rcall	.+3534   	; 0x33a0 <__divmodhi4>
    25d2:	cb 01       	movw	r24, r22
    25d4:	08 95       	ret

000025d6 <_Z7SetCoefPh>:
    25d6:	cf 93       	push	r28
    25d8:	fc 01       	movw	r30, r24
    25da:	21 81       	ldd	r18, Z+1	; 0x01
    25dc:	c2 81       	ldd	r28, Z+2	; 0x02
    25de:	cf 70       	andi	r28, 0x0F	; 15
    25e0:	f0 e1       	ldi	r31, 0x10	; 16
    25e2:	2f 9f       	mul	r18, r31
    25e4:	c0 0d       	add	r28, r0
    25e6:	11 24       	eor	r1, r1
    25e8:	8c 2f       	mov	r24, r28
    25ea:	c7 df       	rcall	.-114    	; 0x257a <_Z11SetOutLevelh>
    25ec:	dd df       	rcall	.-70     	; 0x25a8 <_Z20SolveFreqIndCorrCoefv>
    25ee:	fc 01       	movw	r30, r24
    25f0:	e0 51       	subi	r30, 0x10	; 16
    25f2:	fb 4f       	sbci	r31, 0xFB	; 251
    25f4:	c0 a3       	std	Z+32, r28	; 0x20
    25f6:	cf 91       	pop	r28
    25f8:	21 ce       	rjmp	.-958    	; 0x223c <_Z6SendOkv>

000025fa <_Z19SetOutLevelFromFreqv>:
    25fa:	d6 df       	rcall	.-84     	; 0x25a8 <_Z20SolveFreqIndCorrCoefv>
    25fc:	e4 e0       	ldi	r30, 0x04	; 4
    25fe:	f5 e0       	ldi	r31, 0x05	; 5
    2600:	80 51       	subi	r24, 0x10	; 16
    2602:	9b 4f       	sbci	r25, 0xFB	; 251
    2604:	20 81       	ld	r18, Z
    2606:	20 78       	andi	r18, 0x80	; 128
    2608:	dc 01       	movw	r26, r24
    260a:	90 96       	adiw	r26, 0x20	; 32
    260c:	8c 91       	ld	r24, X
    260e:	82 2b       	or	r24, r18
    2610:	80 83       	st	Z, r24
    2612:	61 e0       	ldi	r22, 0x01	; 1
    2614:	75 e0       	ldi	r23, 0x05	; 5
    2616:	8d ef       	ldi	r24, 0xFD	; 253
    2618:	97 e0       	ldi	r25, 0x07	; 7
    261a:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>

0000261e <_Z14WriteFreqToPrkPh>:
    261e:	cf 93       	push	r28
    2620:	df 93       	push	r29
    2622:	cd b7       	in	r28, 0x3d	; 61
    2624:	de b7       	in	r29, 0x3e	; 62
    2626:	61 97       	sbiw	r28, 0x11	; 17
    2628:	0f b6       	in	r0, 0x3f	; 63
    262a:	f8 94       	cli
    262c:	de bf       	out	0x3e, r29	; 62
    262e:	0f be       	out	0x3f, r0	; 63
    2630:	cd bf       	out	0x3d, r28	; 61
    2632:	fc 01       	movw	r30, r24
    2634:	be 01       	movw	r22, r28
    2636:	6f 5f       	subi	r22, 0xFF	; 255
    2638:	7f 4f       	sbci	r23, 0xFF	; 255
    263a:	8d e0       	ldi	r24, 0x0D	; 13
    263c:	db 01       	movw	r26, r22
    263e:	1d 92       	st	X+, r1
    2640:	8a 95       	dec	r24
    2642:	e9 f7       	brne	.-6      	; 0x263e <_Z14WriteFreqToPrkPh+0x20>
    2644:	90 81       	ld	r25, Z
    2646:	81 81       	ldd	r24, Z+1	; 0x01
    2648:	b0 e1       	ldi	r27, 0x10	; 16
    264a:	9b 9f       	mul	r25, r27
    264c:	80 0d       	add	r24, r0
    264e:	11 24       	eor	r1, r1
    2650:	8d 83       	std	Y+5, r24	; 0x05
    2652:	92 81       	ldd	r25, Z+2	; 0x02
    2654:	83 81       	ldd	r24, Z+3	; 0x03
    2656:	20 e1       	ldi	r18, 0x10	; 16
    2658:	92 9f       	mul	r25, r18
    265a:	80 0d       	add	r24, r0
    265c:	11 24       	eor	r1, r1
    265e:	8e 83       	std	Y+6, r24	; 0x06
    2660:	94 81       	ldd	r25, Z+4	; 0x04
    2662:	85 81       	ldd	r24, Z+5	; 0x05
    2664:	a0 e1       	ldi	r26, 0x10	; 16
    2666:	9a 9f       	mul	r25, r26
    2668:	80 0d       	add	r24, r0
    266a:	11 24       	eor	r1, r1
    266c:	8f 83       	std	Y+7, r24	; 0x07
    266e:	86 81       	ldd	r24, Z+6	; 0x06
    2670:	82 95       	swap	r24
    2672:	80 7f       	andi	r24, 0xF0	; 240
    2674:	88 87       	std	Y+8, r24	; 0x08
    2676:	87 ef       	ldi	r24, 0xF7	; 247
    2678:	97 e0       	ldi	r25, 0x07	; 7
    267a:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>
    267e:	be 01       	movw	r22, r28
    2680:	6b 5f       	subi	r22, 0xFB	; 251
    2682:	7f 4f       	sbci	r23, 0xFF	; 255
    2684:	86 ef       	ldi	r24, 0xF6	; 246
    2686:	97 e0       	ldi	r25, 0x07	; 7
    2688:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>
    268c:	be 01       	movw	r22, r28
    268e:	67 5f       	subi	r22, 0xF7	; 247
    2690:	7f 4f       	sbci	r23, 0xFF	; 255
    2692:	85 ef       	ldi	r24, 0xF5	; 245
    2694:	97 e0       	ldi	r25, 0x07	; 7
    2696:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>
    269a:	84 e0       	ldi	r24, 0x04	; 4
    269c:	8e 87       	std	Y+14, r24	; 0x0e
    269e:	1f 86       	std	Y+15, r1	; 0x0f
    26a0:	18 8a       	std	Y+16, r1	; 0x10
    26a2:	19 8a       	std	Y+17, r1	; 0x11
    26a4:	be 01       	movw	r22, r28
    26a6:	62 5f       	subi	r22, 0xF2	; 242
    26a8:	7f 4f       	sbci	r23, 0xFF	; 255
    26aa:	84 ef       	ldi	r24, 0xF4	; 244
    26ac:	97 e0       	ldi	r25, 0x07	; 7
    26ae:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z14Write_ControlljPh>
    26b2:	84 e1       	ldi	r24, 0x14	; 20
    26b4:	91 e0       	ldi	r25, 0x01	; 1
    26b6:	01 97       	sbiw	r24, 0x01	; 1
    26b8:	f1 f7       	brne	.-4      	; 0x26b6 <_Z14WriteFreqToPrkPh+0x98>
    26ba:	00 00       	nop
    26bc:	81 9b       	sbis	0x10, 1	; 16
    26be:	fe cf       	rjmp	.-4      	; 0x26bc <_Z14WriteFreqToPrkPh+0x9e>
    26c0:	9c df       	rcall	.-200    	; 0x25fa <_Z19SetOutLevelFromFreqv>
    26c2:	61 96       	adiw	r28, 0x11	; 17
    26c4:	0f b6       	in	r0, 0x3f	; 63
    26c6:	f8 94       	cli
    26c8:	de bf       	out	0x3e, r29	; 62
    26ca:	0f be       	out	0x3f, r0	; 63
    26cc:	cd bf       	out	0x3d, r28	; 61
    26ce:	df 91       	pop	r29
    26d0:	cf 91       	pop	r28
    26d2:	08 95       	ret

000026d4 <_Z14okFuncZselMenuP9CMenuItem>:
    26d4:	0f 93       	push	r16
    26d6:	1f 93       	push	r17
    26d8:	cf 93       	push	r28
    26da:	df 93       	push	r29
    26dc:	ec 01       	movw	r28, r24
    26de:	8c 01       	movw	r16, r24
    26e0:	07 5b       	subi	r16, 0xB7	; 183
    26e2:	1f 4f       	sbci	r17, 0xFF	; 255
    26e4:	f8 01       	movw	r30, r16
    26e6:	80 81       	ld	r24, Z
    26e8:	81 30       	cpi	r24, 0x01	; 1
    26ea:	31 f4       	brne	.+12     	; 0x26f8 <_Z14okFuncZselMenuP9CMenuItem+0x24>
    26ec:	ce 01       	movw	r24, r28
    26ee:	0e 94 1f 07 	call	0xe3e	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    26f2:	93 51       	subi	r25, 0x13	; 19
    26f4:	93 31       	cpi	r25, 0x13	; 19
    26f6:	d0 f0       	brcs	.+52     	; 0x272c <_Z14okFuncZselMenuP9CMenuItem+0x58>
    26f8:	f8 01       	movw	r30, r16
    26fa:	80 81       	ld	r24, Z
    26fc:	82 30       	cpi	r24, 0x02	; 2
    26fe:	d1 f4       	brne	.+52     	; 0x2734 <_Z14okFuncZselMenuP9CMenuItem+0x60>
    2700:	ce 01       	movw	r24, r28
    2702:	0e 94 1f 07 	call	0xe3e	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    2706:	94 50       	subi	r25, 0x04	; 4
    2708:	94 30       	cpi	r25, 0x04	; 4
    270a:	a0 f4       	brcc	.+40     	; 0x2734 <_Z14okFuncZselMenuP9CMenuItem+0x60>
    270c:	8a e4       	ldi	r24, 0x4A	; 74
    270e:	95 e0       	ldi	r25, 0x05	; 5
    2710:	40 d5       	rcall	.+2688   	; 0x3192 <_Z11TuneZselCapP9ZSELPARAM>
    2712:	60 e0       	ldi	r22, 0x00	; 0
    2714:	70 e0       	ldi	r23, 0x00	; 0
    2716:	80 ef       	ldi	r24, 0xF0	; 240
    2718:	94 e0       	ldi	r25, 0x04	; 4
    271a:	0e 94 39 09 	call	0x1272	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    271e:	ce 01       	movw	r24, r28
    2720:	df 91       	pop	r29
    2722:	cf 91       	pop	r28
    2724:	1f 91       	pop	r17
    2726:	0f 91       	pop	r16
    2728:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <_ZN9CMenuItem4drawEv>
    272c:	8a e4       	ldi	r24, 0x4A	; 74
    272e:	95 e0       	ldi	r25, 0x05	; 5
    2730:	a3 d5       	rcall	.+2886   	; 0x3278 <_Z13TuneZselAttenP9ZSELPARAM>
    2732:	ef cf       	rjmp	.-34     	; 0x2712 <_Z14okFuncZselMenuP9CMenuItem+0x3e>
    2734:	f8 01       	movw	r30, r16
    2736:	80 81       	ld	r24, Z
    2738:	82 30       	cpi	r24, 0x02	; 2
    273a:	41 f5       	brne	.+80     	; 0x278c <_Z14okFuncZselMenuP9CMenuItem+0xb8>
    273c:	ce 01       	movw	r24, r28
    273e:	0e 94 1f 07 	call	0xe3e	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    2742:	91 51       	subi	r25, 0x11	; 17
    2744:	91 31       	cpi	r25, 0x11	; 17
    2746:	10 f5       	brcc	.+68     	; 0x278c <_Z14okFuncZselMenuP9CMenuItem+0xb8>
    2748:	82 ef       	ldi	r24, 0xF2	; 242
    274a:	94 e0       	ldi	r25, 0x04	; 4
    274c:	68 df       	rcall	.-304    	; 0x261e <_Z14WriteFreqToPrkPh>
    274e:	50 91 f3 04 	lds	r21, 0x04F3
    2752:	40 91 f4 04 	lds	r20, 0x04F4
    2756:	60 91 f2 04 	lds	r22, 0x04F2
    275a:	28 ee       	ldi	r18, 0xE8	; 232
    275c:	33 e0       	ldi	r19, 0x03	; 3
    275e:	62 9f       	mul	r22, r18
    2760:	c0 01       	movw	r24, r0
    2762:	63 9f       	mul	r22, r19
    2764:	90 0d       	add	r25, r0
    2766:	11 24       	eor	r1, r1
    2768:	f4 e6       	ldi	r31, 0x64	; 100
    276a:	5f 9f       	mul	r21, r31
    276c:	80 0d       	add	r24, r0
    276e:	91 1d       	adc	r25, r1
    2770:	11 24       	eor	r1, r1
    2772:	2a e0       	ldi	r18, 0x0A	; 10
    2774:	42 9f       	mul	r20, r18
    2776:	80 0d       	add	r24, r0
    2778:	91 1d       	adc	r25, r1
    277a:	11 24       	eor	r1, r1
    277c:	20 91 f5 04 	lds	r18, 0x04F5
    2780:	6a e4       	ldi	r22, 0x4A	; 74
    2782:	75 e0       	ldi	r23, 0x05	; 5
    2784:	82 0f       	add	r24, r18
    2786:	91 1d       	adc	r25, r1
    2788:	50 d5       	rcall	.+2720   	; 0x322a <_Z11SetZselFreqiP9ZSELPARAM>
    278a:	c3 cf       	rjmp	.-122    	; 0x2712 <_Z14okFuncZselMenuP9CMenuItem+0x3e>
    278c:	60 e0       	ldi	r22, 0x00	; 0
    278e:	8a e4       	ldi	r24, 0x4A	; 74
    2790:	95 e0       	ldi	r25, 0x05	; 5
    2792:	8f d4       	rcall	.+2334   	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
    2794:	be cf       	rjmp	.-132    	; 0x2712 <_Z14okFuncZselMenuP9CMenuItem+0x3e>

00002796 <_Z10WriteFFuncPh>:
    2796:	dc 01       	movw	r26, r24
    2798:	11 96       	adiw	r26, 0x01	; 1
    279a:	e2 ef       	ldi	r30, 0xF2	; 242
    279c:	f4 e0       	ldi	r31, 0x04	; 4
    279e:	8d 91       	ld	r24, X+
    27a0:	8f 70       	andi	r24, 0x0F	; 15
    27a2:	81 93       	st	Z+, r24
    27a4:	84 e0       	ldi	r24, 0x04	; 4
    27a6:	e9 3f       	cpi	r30, 0xF9	; 249
    27a8:	f8 07       	cpc	r31, r24
    27aa:	c9 f7       	brne	.-14     	; 0x279e <_Z10WriteFFuncPh+0x8>
    27ac:	82 ef       	ldi	r24, 0xF2	; 242
    27ae:	94 e0       	ldi	r25, 0x04	; 4
    27b0:	36 df       	rcall	.-404    	; 0x261e <_Z14WriteFreqToPrkPh>
    27b2:	44 cd       	rjmp	.-1400   	; 0x223c <_Z6SendOkv>

000027b4 <_Z13WriteFLCAFuncPh>:
    27b4:	ef 92       	push	r14
    27b6:	ff 92       	push	r15
    27b8:	0f 93       	push	r16
    27ba:	1f 93       	push	r17
    27bc:	cf 93       	push	r28
    27be:	df 93       	push	r29
    27c0:	cd b7       	in	r28, 0x3d	; 61
    27c2:	de b7       	in	r29, 0x3e	; 62
    27c4:	2e 97       	sbiw	r28, 0x0e	; 14
    27c6:	0f b6       	in	r0, 0x3f	; 63
    27c8:	f8 94       	cli
    27ca:	de bf       	out	0x3e, r29	; 62
    27cc:	0f be       	out	0x3f, r0	; 63
    27ce:	cd bf       	out	0x3d, r28	; 61
    27d0:	dc 01       	movw	r26, r24
    27d2:	11 96       	adiw	r26, 0x01	; 1
    27d4:	e2 ef       	ldi	r30, 0xF2	; 242
    27d6:	f4 e0       	ldi	r31, 0x04	; 4
    27d8:	8d 91       	ld	r24, X+
    27da:	8f 70       	andi	r24, 0x0F	; 15
    27dc:	81 93       	st	Z+, r24
    27de:	84 e0       	ldi	r24, 0x04	; 4
    27e0:	e9 3f       	cpi	r30, 0xF9	; 249
    27e2:	f8 07       	cpc	r31, r24
    27e4:	c9 f7       	brne	.-14     	; 0x27d8 <_Z13WriteFLCAFuncPh+0x24>
    27e6:	82 ef       	ldi	r24, 0xF2	; 242
    27e8:	94 e0       	ldi	r25, 0x04	; 4
    27ea:	19 df       	rcall	.-462    	; 0x261e <_Z14WriteFreqToPrkPh>
    27ec:	82 ef       	ldi	r24, 0xF2	; 242
    27ee:	94 e0       	ldi	r25, 0x04	; 4
    27f0:	0e 94 41 02 	call	0x482	; 0x482 <_Z10CharFtoIndPh>
    27f4:	69 e0       	ldi	r22, 0x09	; 9
    27f6:	75 e0       	ldi	r23, 0x05	; 5
    27f8:	0e 94 dd 02 	call	0x5ba	; 0x5ba <_Z19ReadLCAoutFromFlashjPh>
    27fc:	89 e0       	ldi	r24, 0x09	; 9
    27fe:	95 e0       	ldi	r25, 0x05	; 5
    2800:	69 d3       	rcall	.+1746   	; 0x2ed4 <_Z11SendLCA2SelPh>
    2802:	1c dd       	rcall	.-1480   	; 0x223c <_Z6SendOkv>
    2804:	af ef       	ldi	r26, 0xFF	; 255
    2806:	b5 e3       	ldi	r27, 0x35	; 53
    2808:	11 97       	sbiw	r26, 0x01	; 1
    280a:	f1 f7       	brne	.-4      	; 0x2808 <_Z13WriteFLCAFuncPh+0x54>
    280c:	00 c0       	rjmp	.+0      	; 0x280e <_Z13WriteFLCAFuncPh+0x5a>
    280e:	00 00       	nop
    2810:	e9 e0       	ldi	r30, 0x09	; 9
    2812:	ee 2e       	mov	r14, r30
    2814:	e5 e0       	ldi	r30, 0x05	; 5
    2816:	fe 2e       	mov	r15, r30
    2818:	02 e2       	ldi	r16, 0x22	; 34
    281a:	11 e0       	ldi	r17, 0x01	; 1
    281c:	23 e2       	ldi	r18, 0x23	; 35
    281e:	31 e0       	ldi	r19, 0x01	; 1
    2820:	45 e2       	ldi	r20, 0x25	; 37
    2822:	51 e0       	ldi	r21, 0x01	; 1
    2824:	64 e2       	ldi	r22, 0x24	; 36
    2826:	71 e0       	ldi	r23, 0x01	; 1
    2828:	87 e2       	ldi	r24, 0x27	; 39
    282a:	91 e0       	ldi	r25, 0x01	; 1
    282c:	8a da       	rcall	.-2796   	; 0x1d42 <_Z10outLCA2LCAPjPhS_S0_S0_S_>
    282e:	fe 01       	movw	r30, r28
    2830:	31 96       	adiw	r30, 0x01	; 1
    2832:	8e e0       	ldi	r24, 0x0E	; 14
    2834:	df 01       	movw	r26, r30
    2836:	1d 92       	st	X+, r1
    2838:	8a 95       	dec	r24
    283a:	e9 f7       	brne	.-6      	; 0x2836 <_Z13WriteFLCAFuncPh+0x82>
    283c:	85 e8       	ldi	r24, 0x85	; 133
    283e:	89 83       	std	Y+1, r24	; 0x01
    2840:	83 e0       	ldi	r24, 0x03	; 3
    2842:	8e 87       	std	Y+14, r24	; 0x0e
    2844:	80 91 27 01 	lds	r24, 0x0127
    2848:	90 91 28 01 	lds	r25, 0x0128
    284c:	9c 01       	movw	r18, r24
    284e:	22 27       	eor	r18, r18
    2850:	3f 70       	andi	r19, 0x0F	; 15
    2852:	20 e3       	ldi	r18, 0x30	; 48
    2854:	23 0f       	add	r18, r19
    2856:	2a 83       	std	Y+2, r18	; 0x02
    2858:	9c 01       	movw	r18, r24
    285a:	20 7f       	andi	r18, 0xF0	; 240
    285c:	33 27       	eor	r19, r19
    285e:	f4 e0       	ldi	r31, 0x04	; 4
    2860:	36 95       	lsr	r19
    2862:	27 95       	ror	r18
    2864:	fa 95       	dec	r31
    2866:	e1 f7       	brne	.-8      	; 0x2860 <_Z13WriteFLCAFuncPh+0xac>
    2868:	20 5d       	subi	r18, 0xD0	; 208
    286a:	2b 83       	std	Y+3, r18	; 0x03
    286c:	8f 70       	andi	r24, 0x0F	; 15
    286e:	80 5d       	subi	r24, 0xD0	; 208
    2870:	8c 83       	std	Y+4, r24	; 0x04
    2872:	80 91 24 01 	lds	r24, 0x0124
    2876:	98 2f       	mov	r25, r24
    2878:	92 95       	swap	r25
    287a:	9f 70       	andi	r25, 0x0F	; 15
    287c:	90 5d       	subi	r25, 0xD0	; 208
    287e:	9d 83       	std	Y+5, r25	; 0x05
    2880:	8f 70       	andi	r24, 0x0F	; 15
    2882:	80 5d       	subi	r24, 0xD0	; 208
    2884:	8e 83       	std	Y+6, r24	; 0x06
    2886:	80 91 25 01 	lds	r24, 0x0125
    288a:	90 91 26 01 	lds	r25, 0x0126
    288e:	9c 01       	movw	r18, r24
    2890:	22 27       	eor	r18, r18
    2892:	3f 70       	andi	r19, 0x0F	; 15
    2894:	20 e3       	ldi	r18, 0x30	; 48
    2896:	23 0f       	add	r18, r19
    2898:	2f 83       	std	Y+7, r18	; 0x07
    289a:	9c 01       	movw	r18, r24
    289c:	20 7f       	andi	r18, 0xF0	; 240
    289e:	33 27       	eor	r19, r19
    28a0:	a4 e0       	ldi	r26, 0x04	; 4
    28a2:	36 95       	lsr	r19
    28a4:	27 95       	ror	r18
    28a6:	aa 95       	dec	r26
    28a8:	e1 f7       	brne	.-8      	; 0x28a2 <_Z13WriteFLCAFuncPh+0xee>
    28aa:	20 5d       	subi	r18, 0xD0	; 208
    28ac:	28 87       	std	Y+8, r18	; 0x08
    28ae:	8f 70       	andi	r24, 0x0F	; 15
    28b0:	80 5d       	subi	r24, 0xD0	; 208
    28b2:	89 87       	std	Y+9, r24	; 0x09
    28b4:	80 91 23 01 	lds	r24, 0x0123
    28b8:	98 2f       	mov	r25, r24
    28ba:	92 95       	swap	r25
    28bc:	9f 70       	andi	r25, 0x0F	; 15
    28be:	90 5d       	subi	r25, 0xD0	; 208
    28c0:	9a 87       	std	Y+10, r25	; 0x0a
    28c2:	8f 70       	andi	r24, 0x0F	; 15
    28c4:	80 5d       	subi	r24, 0xD0	; 208
    28c6:	8b 87       	std	Y+11, r24	; 0x0b
    28c8:	80 91 22 01 	lds	r24, 0x0122
    28cc:	98 2f       	mov	r25, r24
    28ce:	92 95       	swap	r25
    28d0:	9f 70       	andi	r25, 0x0F	; 15
    28d2:	90 5d       	subi	r25, 0xD0	; 208
    28d4:	9c 87       	std	Y+12, r25	; 0x0c
    28d6:	8f 70       	andi	r24, 0x0F	; 15
    28d8:	80 5d       	subi	r24, 0xD0	; 208
    28da:	8d 87       	std	Y+13, r24	; 0x0d
    28dc:	8f ef       	ldi	r24, 0xFF	; 255
    28de:	9b e6       	ldi	r25, 0x6B	; 107
    28e0:	01 97       	sbiw	r24, 0x01	; 1
    28e2:	f1 f7       	brne	.-4      	; 0x28e0 <_Z13WriteFLCAFuncPh+0x12c>
    28e4:	00 c0       	rjmp	.+0      	; 0x28e6 <_Z13WriteFLCAFuncPh+0x132>
    28e6:	00 00       	nop
    28e8:	6e e0       	ldi	r22, 0x0E	; 14
    28ea:	ce 01       	movw	r24, r28
    28ec:	01 96       	adiw	r24, 0x01	; 1
    28ee:	08 dc       	rcall	.-2032   	; 0x2100 <_Z12SendCOMBytesPhc>
    28f0:	2e 96       	adiw	r28, 0x0e	; 14
    28f2:	0f b6       	in	r0, 0x3f	; 63
    28f4:	f8 94       	cli
    28f6:	de bf       	out	0x3e, r29	; 62
    28f8:	0f be       	out	0x3f, r0	; 63
    28fa:	cd bf       	out	0x3d, r28	; 61
    28fc:	df 91       	pop	r29
    28fe:	cf 91       	pop	r28
    2900:	1f 91       	pop	r17
    2902:	0f 91       	pop	r16
    2904:	ff 90       	pop	r15
    2906:	ef 90       	pop	r14
    2908:	08 95       	ret

0000290a <_Z13WriteFZahFuncPh>:
    290a:	1f 93       	push	r17
    290c:	cf 93       	push	r28
    290e:	df 93       	push	r29
    2910:	dc 01       	movw	r26, r24
    2912:	11 96       	adiw	r26, 0x01	; 1
    2914:	e2 ef       	ldi	r30, 0xF2	; 242
    2916:	f4 e0       	ldi	r31, 0x04	; 4
    2918:	8d 91       	ld	r24, X+
    291a:	8f 70       	andi	r24, 0x0F	; 15
    291c:	81 93       	st	Z+, r24
    291e:	84 e0       	ldi	r24, 0x04	; 4
    2920:	e9 3f       	cpi	r30, 0xF9	; 249
    2922:	f8 07       	cpc	r31, r24
    2924:	c9 f7       	brne	.-14     	; 0x2918 <_Z13WriteFZahFuncPh+0xe>
    2926:	82 ef       	ldi	r24, 0xF2	; 242
    2928:	94 e0       	ldi	r25, 0x04	; 4
    292a:	79 de       	rcall	.-782    	; 0x261e <_Z14WriteFreqToPrkPh>
    292c:	8f ef       	ldi	r24, 0xFF	; 255
    292e:	9b e6       	ldi	r25, 0x6B	; 107
    2930:	01 97       	sbiw	r24, 0x01	; 1
    2932:	f1 f7       	brne	.-4      	; 0x2930 <_Z13WriteFZahFuncPh+0x26>
    2934:	00 c0       	rjmp	.+0      	; 0x2936 <_Z13WriteFZahFuncPh+0x2c>
    2936:	00 00       	nop
    2938:	30 91 f3 04 	lds	r19, 0x04F3
    293c:	20 91 f4 04 	lds	r18, 0x04F4
    2940:	40 91 f2 04 	lds	r20, 0x04F2
    2944:	88 ee       	ldi	r24, 0xE8	; 232
    2946:	93 e0       	ldi	r25, 0x03	; 3
    2948:	48 9f       	mul	r20, r24
    294a:	e0 01       	movw	r28, r0
    294c:	49 9f       	mul	r20, r25
    294e:	d0 0d       	add	r29, r0
    2950:	11 24       	eor	r1, r1
    2952:	94 e6       	ldi	r25, 0x64	; 100
    2954:	39 9f       	mul	r19, r25
    2956:	c0 0d       	add	r28, r0
    2958:	d1 1d       	adc	r29, r1
    295a:	11 24       	eor	r1, r1
    295c:	8a e0       	ldi	r24, 0x0A	; 10
    295e:	28 9f       	mul	r18, r24
    2960:	c0 0d       	add	r28, r0
    2962:	d1 1d       	adc	r29, r1
    2964:	11 24       	eor	r1, r1
    2966:	80 91 f5 04 	lds	r24, 0x04F5
    296a:	c8 0f       	add	r28, r24
    296c:	d1 1d       	adc	r29, r1
    296e:	10 91 f1 04 	lds	r17, 0x04F1
    2972:	10 92 f1 04 	sts	0x04F1, r1
    2976:	80 ef       	ldi	r24, 0xF0	; 240
    2978:	94 e0       	ldi	r25, 0x04	; 4
    297a:	e0 dd       	rcall	.-1088   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    297c:	6a e4       	ldi	r22, 0x4A	; 74
    297e:	75 e0       	ldi	r23, 0x05	; 5
    2980:	ce 01       	movw	r24, r28
    2982:	53 d4       	rcall	.+2214   	; 0x322a <_Z11SetZselFreqiP9ZSELPARAM>
    2984:	10 93 f1 04 	sts	0x04F1, r17
    2988:	80 ef       	ldi	r24, 0xF0	; 240
    298a:	94 e0       	ldi	r25, 0x04	; 4
    298c:	d7 dd       	rcall	.-1106   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    298e:	8f ef       	ldi	r24, 0xFF	; 255
    2990:	9b e6       	ldi	r25, 0x6B	; 107
    2992:	01 97       	sbiw	r24, 0x01	; 1
    2994:	f1 f7       	brne	.-4      	; 0x2992 <_Z13WriteFZahFuncPh+0x88>
    2996:	00 c0       	rjmp	.+0      	; 0x2998 <_Z13WriteFZahFuncPh+0x8e>
    2998:	00 00       	nop
    299a:	8a e4       	ldi	r24, 0x4A	; 74
    299c:	95 e0       	ldi	r25, 0x05	; 5
    299e:	6c d4       	rcall	.+2264   	; 0x3278 <_Z13TuneZselAttenP9ZSELPARAM>
    29a0:	df 91       	pop	r29
    29a2:	cf 91       	pop	r28
    29a4:	1f 91       	pop	r17
    29a6:	4a cc       	rjmp	.-1900   	; 0x223c <_Z6SendOkv>

000029a8 <_Z10DetFreqIndPh>:
    29a8:	fc 01       	movw	r30, r24
    29aa:	40 81       	ld	r20, Z
    29ac:	81 81       	ldd	r24, Z+1	; 0x01
    29ae:	28 2f       	mov	r18, r24
    29b0:	30 e0       	ldi	r19, 0x00	; 0
    29b2:	fa e0       	ldi	r31, 0x0A	; 10
    29b4:	4f 9f       	mul	r20, r31
    29b6:	20 0d       	add	r18, r0
    29b8:	31 1d       	adc	r19, r1
    29ba:	11 24       	eor	r1, r1
    29bc:	2e 31       	cpi	r18, 0x1E	; 30
    29be:	31 05       	cpc	r19, r1
    29c0:	49 f0       	breq	.+18     	; 0x29d4 <_Z10DetFreqIndPh+0x2c>
    29c2:	21 30       	cpi	r18, 0x01	; 1
    29c4:	31 05       	cpc	r19, r1
    29c6:	41 f0       	breq	.+16     	; 0x29d8 <_Z10DetFreqIndPh+0x30>
    29c8:	82 50       	subi	r24, 0x02	; 2
    29ca:	9a e0       	ldi	r25, 0x0A	; 10
    29cc:	49 9f       	mul	r20, r25
    29ce:	80 0d       	add	r24, r0
    29d0:	11 24       	eor	r1, r1
    29d2:	08 95       	ret
    29d4:	8d e1       	ldi	r24, 0x1D	; 29
    29d6:	08 95       	ret
    29d8:	80 e0       	ldi	r24, 0x00	; 0
    29da:	08 95       	ret

000029dc <_Z16SaveSelectorSignv>:
    29dc:	cf 93       	push	r28
    29de:	df 93       	push	r29
    29e0:	00 d0       	rcall	.+0      	; 0x29e2 <_Z16SaveSelectorSignv+0x6>
    29e2:	cd b7       	in	r28, 0x3d	; 61
    29e4:	de b7       	in	r29, 0x3e	; 62
    29e6:	8a e5       	ldi	r24, 0x5A	; 90
    29e8:	89 83       	std	Y+1, r24	; 0x01
    29ea:	8e e3       	ldi	r24, 0x3E	; 62
    29ec:	8a 83       	std	Y+2, r24	; 0x02
    29ee:	42 e0       	ldi	r20, 0x02	; 2
    29f0:	be 01       	movw	r22, r28
    29f2:	6f 5f       	subi	r22, 0xFF	; 255
    29f4:	7f 4f       	sbci	r23, 0xFF	; 255
    29f6:	88 ef       	ldi	r24, 0xF8	; 248
    29f8:	9f ef       	ldi	r25, 0xFF	; 255
    29fa:	0e 94 64 02 	call	0x4c8	; 0x4c8 <_Z18WriteData2FlashIICjPhh>
    29fe:	0f 90       	pop	r0
    2a00:	0f 90       	pop	r0
    2a02:	df 91       	pop	r29
    2a04:	cf 91       	pop	r28
    2a06:	08 95       	ret

00002a08 <_Z11SaveDetCoefv>:
    2a08:	85 e0       	ldi	r24, 0x05	; 5
    2a0a:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
    2a0e:	80 93 ee 04 	sts	0x04EE, r24
    2a12:	82 ef       	ldi	r24, 0xF2	; 242
    2a14:	94 e0       	ldi	r25, 0x04	; 4
    2a16:	c8 df       	rcall	.-112    	; 0x29a8 <_Z10DetFreqIndPh>
    2a18:	6e ee       	ldi	r22, 0xEE	; 238
    2a1a:	74 e0       	ldi	r23, 0x04	; 4
    2a1c:	90 e0       	ldi	r25, 0x00	; 0
    2a1e:	0e 94 9a 02 	call	0x534	; 0x534 <_Z17WriteDetCal2FlashjPh>
    2a22:	dc cf       	rjmp	.-72     	; 0x29dc <_Z16SaveSelectorSignv>

00002a24 <_Z16SaveDetectorCoefPh>:
    2a24:	f1 df       	rcall	.-30     	; 0x2a08 <_Z11SaveDetCoefv>
    2a26:	0a cc       	rjmp	.-2028   	; 0x223c <_Z6SendOkv>

00002a28 <_Z11ReadDetCoefv>:
    2a28:	cf 93       	push	r28
    2a2a:	df 93       	push	r29
    2a2c:	1f 92       	push	r1
    2a2e:	cd b7       	in	r28, 0x3d	; 61
    2a30:	de b7       	in	r29, 0x3e	; 62
    2a32:	82 ef       	ldi	r24, 0xF2	; 242
    2a34:	94 e0       	ldi	r25, 0x04	; 4
    2a36:	b8 df       	rcall	.-144    	; 0x29a8 <_Z10DetFreqIndPh>
    2a38:	be 01       	movw	r22, r28
    2a3a:	6f 5f       	subi	r22, 0xFF	; 255
    2a3c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a3e:	90 e0       	ldi	r25, 0x00	; 0
    2a40:	0e 94 ed 02 	call	0x5da	; 0x5da <_Z17ReadDetCalInFlashjPh>
    2a44:	89 81       	ldd	r24, Y+1	; 0x01
    2a46:	0f 90       	pop	r0
    2a48:	df 91       	pop	r29
    2a4a:	cf 91       	pop	r28
    2a4c:	08 95       	ret

00002a4e <_Z7SetnOTPc>:
    2a4e:	81 11       	cpse	r24, r1
    2a50:	02 c0       	rjmp	.+4      	; 0x2a56 <_Z7SetnOTPc+0x8>
    2a52:	c7 98       	cbi	0x18, 7	; 24
    2a54:	01 c0       	rjmp	.+2      	; 0x2a58 <_Z7SetnOTPc+0xa>
    2a56:	c7 9a       	sbi	0x18, 7	; 24
    2a58:	90 91 49 05 	lds	r25, 0x0549
    2a5c:	91 11       	cpse	r25, r1
    2a5e:	06 c0       	rjmp	.+12     	; 0x2a6c <_Z7SetnOTPc+0x1e>
    2a60:	81 11       	cpse	r24, r1
    2a62:	02 c0       	rjmp	.+4      	; 0x2a68 <_Z7SetnOTPc+0x1a>
    2a64:	c7 98       	cbi	0x18, 7	; 24
    2a66:	08 95       	ret
    2a68:	c7 9a       	sbi	0x18, 7	; 24
    2a6a:	08 95       	ret
    2a6c:	91 30       	cpi	r25, 0x01	; 1
    2a6e:	21 f4       	brne	.+8      	; 0x2a78 <_Z7SetnOTPc+0x2a>
    2a70:	81 11       	cpse	r24, r1
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	89 2f       	mov	r24, r25
    2a76:	4d c3       	rjmp	.+1690   	; 0x3112 <_Z11SetZselOpenb>
    2a78:	08 95       	ret

00002a7a <_Z22SetLebedSelFreqInFlashv>:
    2a7a:	ef 92       	push	r14
    2a7c:	ff 92       	push	r15
    2a7e:	0f 93       	push	r16
    2a80:	1f 93       	push	r17
    2a82:	82 ef       	ldi	r24, 0xF2	; 242
    2a84:	94 e0       	ldi	r25, 0x04	; 4
    2a86:	0e 94 41 02 	call	0x482	; 0x482 <_Z10CharFtoIndPh>
    2a8a:	82 ef       	ldi	r24, 0xF2	; 242
    2a8c:	94 e0       	ldi	r25, 0x04	; 4
    2a8e:	0e 94 41 02 	call	0x482	; 0x482 <_Z10CharFtoIndPh>
    2a92:	69 e0       	ldi	r22, 0x09	; 9
    2a94:	75 e0       	ldi	r23, 0x05	; 5
    2a96:	0e 94 dd 02 	call	0x5ba	; 0x5ba <_Z19ReadLCAoutFromFlashjPh>
    2a9a:	b9 e0       	ldi	r27, 0x09	; 9
    2a9c:	eb 2e       	mov	r14, r27
    2a9e:	b5 e0       	ldi	r27, 0x05	; 5
    2aa0:	fb 2e       	mov	r15, r27
    2aa2:	02 e2       	ldi	r16, 0x22	; 34
    2aa4:	11 e0       	ldi	r17, 0x01	; 1
    2aa6:	23 e2       	ldi	r18, 0x23	; 35
    2aa8:	31 e0       	ldi	r19, 0x01	; 1
    2aaa:	45 e2       	ldi	r20, 0x25	; 37
    2aac:	51 e0       	ldi	r21, 0x01	; 1
    2aae:	64 e2       	ldi	r22, 0x24	; 36
    2ab0:	71 e0       	ldi	r23, 0x01	; 1
    2ab2:	87 e2       	ldi	r24, 0x27	; 39
    2ab4:	91 e0       	ldi	r25, 0x01	; 1
    2ab6:	45 d9       	rcall	.-3446   	; 0x1d42 <_Z10outLCA2LCAPjPhS_S0_S0_S_>
    2ab8:	81 e0       	ldi	r24, 0x01	; 1
    2aba:	c9 df       	rcall	.-110    	; 0x2a4e <_Z7SetnOTPc>
    2abc:	c7 01       	movw	r24, r14
    2abe:	0a d2       	rcall	.+1044   	; 0x2ed4 <_Z11SendLCA2SelPh>
    2ac0:	80 91 f0 04 	lds	r24, 0x04F0
    2ac4:	1f 91       	pop	r17
    2ac6:	0f 91       	pop	r16
    2ac8:	ff 90       	pop	r15
    2aca:	ef 90       	pop	r14
    2acc:	c0 cf       	rjmp	.-128    	; 0x2a4e <_Z7SetnOTPc>

00002ace <_Z14okFuncMainMenuP9CMenuItem>:
    2ace:	bf 92       	push	r11
    2ad0:	cf 92       	push	r12
    2ad2:	df 92       	push	r13
    2ad4:	ef 92       	push	r14
    2ad6:	ff 92       	push	r15
    2ad8:	0f 93       	push	r16
    2ada:	1f 93       	push	r17
    2adc:	cf 93       	push	r28
    2ade:	df 93       	push	r29
    2ae0:	8c 01       	movw	r16, r24
    2ae2:	7c 01       	movw	r14, r24
    2ae4:	89 e4       	ldi	r24, 0x49	; 73
    2ae6:	e8 0e       	add	r14, r24
    2ae8:	f1 1c       	adc	r15, r1
    2aea:	f7 01       	movw	r30, r14
    2aec:	80 81       	ld	r24, Z
    2aee:	81 30       	cpi	r24, 0x01	; 1
    2af0:	09 f0       	breq	.+2      	; 0x2af4 <_Z14okFuncMainMenuP9CMenuItem+0x26>
    2af2:	6b c0       	rjmp	.+214    	; 0x2bca <_Z14okFuncMainMenuP9CMenuItem+0xfc>
    2af4:	68 01       	movw	r12, r16
    2af6:	f8 e4       	ldi	r31, 0x48	; 72
    2af8:	cf 0e       	add	r12, r31
    2afa:	d1 1c       	adc	r13, r1
    2afc:	f6 01       	movw	r30, r12
    2afe:	80 81       	ld	r24, Z
    2b00:	87 30       	cpi	r24, 0x07	; 7
    2b02:	08 f0       	brcs	.+2      	; 0x2b06 <_Z14okFuncMainMenuP9CMenuItem+0x38>
    2b04:	46 c0       	rjmp	.+140    	; 0x2b92 <_Z14okFuncMainMenuP9CMenuItem+0xc4>
    2b06:	60 e0       	ldi	r22, 0x00	; 0
    2b08:	70 e0       	ldi	r23, 0x00	; 0
    2b0a:	80 ef       	ldi	r24, 0xF0	; 240
    2b0c:	94 e0       	ldi	r25, 0x04	; 4
    2b0e:	0e 94 39 09 	call	0x1272	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    2b12:	82 ef       	ldi	r24, 0xF2	; 242
    2b14:	94 e0       	ldi	r25, 0x04	; 4
    2b16:	83 dd       	rcall	.-1274   	; 0x261e <_Z14WriteFreqToPrkPh>
    2b18:	80 91 49 05 	lds	r24, 0x0549
    2b1c:	81 11       	cpse	r24, r1
    2b1e:	0a c0       	rjmp	.+20     	; 0x2b34 <_Z14okFuncMainMenuP9CMenuItem+0x66>
    2b20:	ac df       	rcall	.-168    	; 0x2a7a <_Z22SetLebedSelFreqInFlashv>
    2b22:	82 df       	rcall	.-252    	; 0x2a28 <_Z11ReadDetCoefv>
    2b24:	80 93 0f 05 	sts	0x050F, r24
    2b28:	8f ed       	ldi	r24, 0xDF	; 223
    2b2a:	93 e0       	ldi	r25, 0x03	; 3
    2b2c:	90 93 53 05 	sts	0x0553, r25
    2b30:	80 93 52 05 	sts	0x0552, r24
    2b34:	80 91 49 05 	lds	r24, 0x0549
    2b38:	81 30       	cpi	r24, 0x01	; 1
    2b3a:	59 f5       	brne	.+86     	; 0x2b92 <_Z14okFuncMainMenuP9CMenuItem+0xc4>
    2b3c:	30 91 f3 04 	lds	r19, 0x04F3
    2b40:	20 91 f4 04 	lds	r18, 0x04F4
    2b44:	40 91 f2 04 	lds	r20, 0x04F2
    2b48:	88 ee       	ldi	r24, 0xE8	; 232
    2b4a:	93 e0       	ldi	r25, 0x03	; 3
    2b4c:	48 9f       	mul	r20, r24
    2b4e:	e0 01       	movw	r28, r0
    2b50:	49 9f       	mul	r20, r25
    2b52:	d0 0d       	add	r29, r0
    2b54:	11 24       	eor	r1, r1
    2b56:	f4 e6       	ldi	r31, 0x64	; 100
    2b58:	3f 9f       	mul	r19, r31
    2b5a:	c0 0d       	add	r28, r0
    2b5c:	d1 1d       	adc	r29, r1
    2b5e:	11 24       	eor	r1, r1
    2b60:	8a e0       	ldi	r24, 0x0A	; 10
    2b62:	28 9f       	mul	r18, r24
    2b64:	c0 0d       	add	r28, r0
    2b66:	d1 1d       	adc	r29, r1
    2b68:	11 24       	eor	r1, r1
    2b6a:	80 91 f5 04 	lds	r24, 0x04F5
    2b6e:	c8 0f       	add	r28, r24
    2b70:	d1 1d       	adc	r29, r1
    2b72:	b0 90 f1 04 	lds	r11, 0x04F1
    2b76:	10 92 f1 04 	sts	0x04F1, r1
    2b7a:	80 ef       	ldi	r24, 0xF0	; 240
    2b7c:	94 e0       	ldi	r25, 0x04	; 4
    2b7e:	de dc       	rcall	.-1604   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    2b80:	6a e4       	ldi	r22, 0x4A	; 74
    2b82:	75 e0       	ldi	r23, 0x05	; 5
    2b84:	ce 01       	movw	r24, r28
    2b86:	51 d3       	rcall	.+1698   	; 0x322a <_Z11SetZselFreqiP9ZSELPARAM>
    2b88:	b0 92 f1 04 	sts	0x04F1, r11
    2b8c:	80 ef       	ldi	r24, 0xF0	; 240
    2b8e:	94 e0       	ldi	r25, 0x04	; 4
    2b90:	d5 dc       	rcall	.-1622   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    2b92:	f6 01       	movw	r30, r12
    2b94:	80 81       	ld	r24, Z
    2b96:	87 30       	cpi	r24, 0x07	; 7
    2b98:	c1 f4       	brne	.+48     	; 0x2bca <_Z14okFuncMainMenuP9CMenuItem+0xfc>
    2b9a:	c0 91 f1 04 	lds	r28, 0x04F1
    2b9e:	10 92 f1 04 	sts	0x04F1, r1
    2ba2:	80 ef       	ldi	r24, 0xF0	; 240
    2ba4:	94 e0       	ldi	r25, 0x04	; 4
    2ba6:	ca dc       	rcall	.-1644   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    2ba8:	80 91 49 05 	lds	r24, 0x0549
    2bac:	81 11       	cpse	r24, r1
    2bae:	01 c0       	rjmp	.+2      	; 0x2bb2 <_Z14okFuncMainMenuP9CMenuItem+0xe4>
    2bb0:	31 d0       	rcall	.+98     	; 0x2c14 <_Z15TuneLvlLebedSelv>
    2bb2:	80 91 49 05 	lds	r24, 0x0549
    2bb6:	81 30       	cpi	r24, 0x01	; 1
    2bb8:	19 f4       	brne	.+6      	; 0x2bc0 <_Z14okFuncMainMenuP9CMenuItem+0xf2>
    2bba:	8a e4       	ldi	r24, 0x4A	; 74
    2bbc:	95 e0       	ldi	r25, 0x05	; 5
    2bbe:	5c d3       	rcall	.+1720   	; 0x3278 <_Z13TuneZselAttenP9ZSELPARAM>
    2bc0:	c0 93 f1 04 	sts	0x04F1, r28
    2bc4:	80 ef       	ldi	r24, 0xF0	; 240
    2bc6:	94 e0       	ldi	r25, 0x04	; 4
    2bc8:	b9 dc       	rcall	.-1678   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    2bca:	f7 01       	movw	r30, r14
    2bcc:	80 81       	ld	r24, Z
    2bce:	82 30       	cpi	r24, 0x02	; 2
    2bd0:	91 f4       	brne	.+36     	; 0x2bf6 <_Z14okFuncMainMenuP9CMenuItem+0x128>
    2bd2:	f8 01       	movw	r30, r16
    2bd4:	e8 5b       	subi	r30, 0xB8	; 184
    2bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd8:	80 81       	ld	r24, Z
    2bda:	82 30       	cpi	r24, 0x02	; 2
    2bdc:	61 f4       	brne	.+24     	; 0x2bf6 <_Z14okFuncMainMenuP9CMenuItem+0x128>
    2bde:	80 91 49 05 	lds	r24, 0x0549
    2be2:	81 30       	cpi	r24, 0x01	; 1
    2be4:	41 f4       	brne	.+16     	; 0x2bf6 <_Z14okFuncMainMenuP9CMenuItem+0x128>
    2be6:	85 e8       	ldi	r24, 0x85	; 133
    2be8:	93 e0       	ldi	r25, 0x03	; 3
    2bea:	90 93 53 05 	sts	0x0553, r25
    2bee:	80 93 52 05 	sts	0x0552, r24
    2bf2:	0e 94 87 07 	call	0xf0e	; 0xf0e <_ZN9CMenuItem4drawEv>
    2bf6:	80 91 52 05 	lds	r24, 0x0552
    2bfa:	90 91 53 05 	lds	r25, 0x0553
    2bfe:	df 91       	pop	r29
    2c00:	cf 91       	pop	r28
    2c02:	1f 91       	pop	r17
    2c04:	0f 91       	pop	r16
    2c06:	ff 90       	pop	r15
    2c08:	ef 90       	pop	r14
    2c0a:	df 90       	pop	r13
    2c0c:	cf 90       	pop	r12
    2c0e:	bf 90       	pop	r11
    2c10:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <_ZN9CMenuItem4drawEv>

00002c14 <_Z15TuneLvlLebedSelv>:
    2c14:	ef 92       	push	r14
    2c16:	ff 92       	push	r15
    2c18:	0f 93       	push	r16
    2c1a:	cf 93       	push	r28
    2c1c:	df 93       	push	r29
    2c1e:	2d df       	rcall	.-422    	; 0x2a7a <_Z22SetLebedSelFreqInFlashv>
    2c20:	03 df       	rcall	.-506    	; 0x2a28 <_Z11ReadDetCoefv>
    2c22:	c8 2f       	mov	r28, r24
    2c24:	85 e0       	ldi	r24, 0x05	; 5
    2c26:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
    2c2a:	80 93 ee 04 	sts	0x04EE, r24
    2c2e:	d0 e0       	ldi	r29, 0x00	; 0
    2c30:	20 91 ee 04 	lds	r18, 0x04EE
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	2c 1b       	sub	r18, r28
    2c38:	3d 0b       	sbc	r19, r29
    2c3a:	a9 01       	movw	r20, r18
    2c3c:	37 ff       	sbrs	r19, 7
    2c3e:	04 c0       	rjmp	.+8      	; 0x2c48 <_Z15TuneLvlLebedSelv+0x34>
    2c40:	44 27       	eor	r20, r20
    2c42:	55 27       	eor	r21, r21
    2c44:	42 1b       	sub	r20, r18
    2c46:	53 0b       	sbc	r21, r19
    2c48:	43 30       	cpi	r20, 0x03	; 3
    2c4a:	51 05       	cpc	r21, r1
    2c4c:	c4 f1       	brlt	.+112    	; 0x2cbe <_Z15TuneLvlLebedSelv+0xaa>
    2c4e:	80 91 22 01 	lds	r24, 0x0122
    2c52:	12 16       	cp	r1, r18
    2c54:	13 06       	cpc	r1, r19
    2c56:	14 f4       	brge	.+4      	; 0x2c5c <_Z15TuneLvlLebedSelv+0x48>
    2c58:	8f 5f       	subi	r24, 0xFF	; 255
    2c5a:	01 c0       	rjmp	.+2      	; 0x2c5e <_Z15TuneLvlLebedSelv+0x4a>
    2c5c:	81 50       	subi	r24, 0x01	; 1
    2c5e:	80 93 22 01 	sts	0x0122, r24
    2c62:	00 91 22 01 	lds	r16, 0x0122
    2c66:	00 23       	and	r16, r16
    2c68:	51 f1       	breq	.+84     	; 0x2cbe <_Z15TuneLvlLebedSelv+0xaa>
    2c6a:	0f 33       	cpi	r16, 0x3F	; 63
    2c6c:	41 f1       	breq	.+80     	; 0x2cbe <_Z15TuneLvlLebedSelv+0xaa>
    2c6e:	40 91 25 01 	lds	r20, 0x0125
    2c72:	50 91 26 01 	lds	r21, 0x0126
    2c76:	89 e0       	ldi	r24, 0x09	; 9
    2c78:	e8 2e       	mov	r14, r24
    2c7a:	85 e0       	ldi	r24, 0x05	; 5
    2c7c:	f8 2e       	mov	r15, r24
    2c7e:	20 91 23 01 	lds	r18, 0x0123
    2c82:	60 91 24 01 	lds	r22, 0x0124
    2c86:	80 91 27 01 	lds	r24, 0x0127
    2c8a:	90 91 28 01 	lds	r25, 0x0128
    2c8e:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <_Z7LCA2outjhjhhPj>
    2c92:	c7 01       	movw	r24, r14
    2c94:	f9 d0       	rcall	.+498    	; 0x2e88 <_Z5SendAPj>
    2c96:	80 91 22 01 	lds	r24, 0x0122
    2c9a:	85 fd       	sbrc	r24, 5
    2c9c:	05 c0       	rjmp	.+10     	; 0x2ca8 <_Z15TuneLvlLebedSelv+0x94>
    2c9e:	86 e6       	ldi	r24, 0x66	; 102
    2ca0:	95 e0       	ldi	r25, 0x05	; 5
    2ca2:	01 97       	sbiw	r24, 0x01	; 1
    2ca4:	f1 f7       	brne	.-4      	; 0x2ca2 <_Z15TuneLvlLebedSelv+0x8e>
    2ca6:	04 c0       	rjmp	.+8      	; 0x2cb0 <_Z15TuneLvlLebedSelv+0x9c>
    2ca8:	84 e1       	ldi	r24, 0x14	; 20
    2caa:	91 e0       	ldi	r25, 0x01	; 1
    2cac:	01 97       	sbiw	r24, 0x01	; 1
    2cae:	f1 f7       	brne	.-4      	; 0x2cac <_Z15TuneLvlLebedSelv+0x98>
    2cb0:	00 00       	nop
    2cb2:	85 e0       	ldi	r24, 0x05	; 5
    2cb4:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
    2cb8:	80 93 ee 04 	sts	0x04EE, r24
    2cbc:	b9 cf       	rjmp	.-142    	; 0x2c30 <_Z15TuneLvlLebedSelv+0x1c>
    2cbe:	df 91       	pop	r29
    2cc0:	cf 91       	pop	r28
    2cc2:	0f 91       	pop	r16
    2cc4:	ff 90       	pop	r15
    2cc6:	ef 90       	pop	r14
    2cc8:	08 95       	ret

00002cca <_Z14upFuncMainMenuP9CMenuItem>:
    2cca:	0f 93       	push	r16
    2ccc:	1f 93       	push	r17
    2cce:	cf 93       	push	r28
    2cd0:	df 93       	push	r29
    2cd2:	ec 01       	movw	r28, r24
    2cd4:	8c 01       	movw	r16, r24
    2cd6:	07 5b       	subi	r16, 0xB7	; 183
    2cd8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cda:	f8 01       	movw	r30, r16
    2cdc:	80 81       	ld	r24, Z
    2cde:	82 30       	cpi	r24, 0x02	; 2
    2ce0:	21 f4       	brne	.+8      	; 0x2cea <_Z14upFuncMainMenuP9CMenuItem+0x20>
    2ce2:	31 97       	sbiw	r30, 0x01	; 1
    2ce4:	80 81       	ld	r24, Z
    2ce6:	88 23       	and	r24, r24
    2ce8:	b9 f1       	breq	.+110    	; 0x2d58 <_Z14upFuncMainMenuP9CMenuItem+0x8e>
    2cea:	f8 01       	movw	r30, r16
    2cec:	80 81       	ld	r24, Z
    2cee:	82 30       	cpi	r24, 0x02	; 2
    2cf0:	31 f4       	brne	.+12     	; 0x2cfe <_Z14upFuncMainMenuP9CMenuItem+0x34>
    2cf2:	fe 01       	movw	r30, r28
    2cf4:	e8 5b       	subi	r30, 0xB8	; 184
    2cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf8:	90 81       	ld	r25, Z
    2cfa:	91 30       	cpi	r25, 0x01	; 1
    2cfc:	a9 f1       	breq	.+106    	; 0x2d68 <_Z14upFuncMainMenuP9CMenuItem+0x9e>
    2cfe:	f8 01       	movw	r30, r16
    2d00:	80 81       	ld	r24, Z
    2d02:	82 30       	cpi	r24, 0x02	; 2
    2d04:	31 f4       	brne	.+12     	; 0x2d12 <_Z14upFuncMainMenuP9CMenuItem+0x48>
    2d06:	fe 01       	movw	r30, r28
    2d08:	e8 5b       	subi	r30, 0xB8	; 184
    2d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0c:	80 81       	ld	r24, Z
    2d0e:	83 30       	cpi	r24, 0x03	; 3
    2d10:	a1 f1       	breq	.+104    	; 0x2d7a <_Z14upFuncMainMenuP9CMenuItem+0xb0>
    2d12:	f8 01       	movw	r30, r16
    2d14:	80 81       	ld	r24, Z
    2d16:	81 30       	cpi	r24, 0x01	; 1
    2d18:	c1 f4       	brne	.+48     	; 0x2d4a <_Z14upFuncMainMenuP9CMenuItem+0x80>
    2d1a:	0f 89       	ldd	r16, Y+23	; 0x17
    2d1c:	18 8d       	ldd	r17, Y+24	; 0x18
    2d1e:	ce 01       	movw	r24, r28
    2d20:	0e 94 1f 07 	call	0xe3e	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    2d24:	f8 01       	movw	r30, r16
    2d26:	e9 0f       	add	r30, r25
    2d28:	f1 1d       	adc	r31, r1
    2d2a:	31 97       	sbiw	r30, 0x01	; 1
    2d2c:	80 81       	ld	r24, Z
    2d2e:	88 35       	cpi	r24, 0x58	; 88
    2d30:	61 f4       	brne	.+24     	; 0x2d4a <_Z14upFuncMainMenuP9CMenuItem+0x80>
    2d32:	fe 01       	movw	r30, r28
    2d34:	e8 5b       	subi	r30, 0xB8	; 184
    2d36:	ff 4f       	sbci	r31, 0xFF	; 255
    2d38:	e0 81       	ld	r30, Z
    2d3a:	f0 e0       	ldi	r31, 0x00	; 0
    2d3c:	e0 51       	subi	r30, 0x10	; 16
    2d3e:	fb 4f       	sbci	r31, 0xFB	; 251
    2d40:	82 81       	ldd	r24, Z+2	; 0x02
    2d42:	89 30       	cpi	r24, 0x09	; 9
    2d44:	40 f5       	brcc	.+80     	; 0x2d96 <_Z14upFuncMainMenuP9CMenuItem+0xcc>
    2d46:	8f 5f       	subi	r24, 0xFF	; 255
    2d48:	82 83       	std	Z+2, r24	; 0x02
    2d4a:	ce 01       	movw	r24, r28
    2d4c:	df 91       	pop	r29
    2d4e:	cf 91       	pop	r28
    2d50:	1f 91       	pop	r17
    2d52:	0f 91       	pop	r16
    2d54:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <_ZN9CMenuItem4drawEv>
    2d58:	80 91 f0 04 	lds	r24, 0x04F0
    2d5c:	91 e0       	ldi	r25, 0x01	; 1
    2d5e:	89 27       	eor	r24, r25
    2d60:	80 93 f0 04 	sts	0x04F0, r24
    2d64:	74 de       	rcall	.-792    	; 0x2a4e <_Z7SetnOTPc>
    2d66:	c1 cf       	rjmp	.-126    	; 0x2cea <_Z14upFuncMainMenuP9CMenuItem+0x20>
    2d68:	80 91 f1 04 	lds	r24, 0x04F1
    2d6c:	89 27       	eor	r24, r25
    2d6e:	80 93 f1 04 	sts	0x04F1, r24
    2d72:	80 ef       	ldi	r24, 0xF0	; 240
    2d74:	94 e0       	ldi	r25, 0x04	; 4
    2d76:	e2 db       	rcall	.-2108   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    2d78:	c2 cf       	rjmp	.-124    	; 0x2cfe <_Z14upFuncMainMenuP9CMenuItem+0x34>
    2d7a:	81 e0       	ldi	r24, 0x01	; 1
    2d7c:	90 91 49 05 	lds	r25, 0x0549
    2d80:	91 11       	cpse	r25, r1
    2d82:	80 e0       	ldi	r24, 0x00	; 0
    2d84:	80 93 49 05 	sts	0x0549, r24
    2d88:	60 e0       	ldi	r22, 0x00	; 0
    2d8a:	70 e0       	ldi	r23, 0x00	; 0
    2d8c:	80 ef       	ldi	r24, 0xF0	; 240
    2d8e:	94 e0       	ldi	r25, 0x04	; 4
    2d90:	0e 94 39 09 	call	0x1272	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    2d94:	be cf       	rjmp	.-132    	; 0x2d12 <_Z14upFuncMainMenuP9CMenuItem+0x48>
    2d96:	12 82       	std	Z+2, r1	; 0x02
    2d98:	d8 cf       	rjmp	.-80     	; 0x2d4a <_Z14upFuncMainMenuP9CMenuItem+0x80>

00002d9a <_Z16downFuncMainMenuP9CMenuItem>:
    2d9a:	0f 93       	push	r16
    2d9c:	1f 93       	push	r17
    2d9e:	cf 93       	push	r28
    2da0:	df 93       	push	r29
    2da2:	ec 01       	movw	r28, r24
    2da4:	8c 01       	movw	r16, r24
    2da6:	07 5b       	subi	r16, 0xB7	; 183
    2da8:	1f 4f       	sbci	r17, 0xFF	; 255
    2daa:	f8 01       	movw	r30, r16
    2dac:	80 81       	ld	r24, Z
    2dae:	82 30       	cpi	r24, 0x02	; 2
    2db0:	21 f4       	brne	.+8      	; 0x2dba <_Z16downFuncMainMenuP9CMenuItem+0x20>
    2db2:	31 97       	sbiw	r30, 0x01	; 1
    2db4:	80 81       	ld	r24, Z
    2db6:	88 23       	and	r24, r24
    2db8:	b9 f1       	breq	.+110    	; 0x2e28 <_Z16downFuncMainMenuP9CMenuItem+0x8e>
    2dba:	f8 01       	movw	r30, r16
    2dbc:	80 81       	ld	r24, Z
    2dbe:	82 30       	cpi	r24, 0x02	; 2
    2dc0:	31 f4       	brne	.+12     	; 0x2dce <_Z16downFuncMainMenuP9CMenuItem+0x34>
    2dc2:	fe 01       	movw	r30, r28
    2dc4:	e8 5b       	subi	r30, 0xB8	; 184
    2dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc8:	90 81       	ld	r25, Z
    2dca:	91 30       	cpi	r25, 0x01	; 1
    2dcc:	a9 f1       	breq	.+106    	; 0x2e38 <_Z16downFuncMainMenuP9CMenuItem+0x9e>
    2dce:	f8 01       	movw	r30, r16
    2dd0:	80 81       	ld	r24, Z
    2dd2:	82 30       	cpi	r24, 0x02	; 2
    2dd4:	31 f4       	brne	.+12     	; 0x2de2 <_Z16downFuncMainMenuP9CMenuItem+0x48>
    2dd6:	fe 01       	movw	r30, r28
    2dd8:	e8 5b       	subi	r30, 0xB8	; 184
    2dda:	ff 4f       	sbci	r31, 0xFF	; 255
    2ddc:	80 81       	ld	r24, Z
    2dde:	83 30       	cpi	r24, 0x03	; 3
    2de0:	a1 f1       	breq	.+104    	; 0x2e4a <_Z16downFuncMainMenuP9CMenuItem+0xb0>
    2de2:	f8 01       	movw	r30, r16
    2de4:	80 81       	ld	r24, Z
    2de6:	81 30       	cpi	r24, 0x01	; 1
    2de8:	c1 f4       	brne	.+48     	; 0x2e1a <_Z16downFuncMainMenuP9CMenuItem+0x80>
    2dea:	0f 89       	ldd	r16, Y+23	; 0x17
    2dec:	18 8d       	ldd	r17, Y+24	; 0x18
    2dee:	ce 01       	movw	r24, r28
    2df0:	0e 94 1f 07 	call	0xe3e	; 0xe3e <_ZN9CMenuItem17getCursorPositionEv>
    2df4:	f8 01       	movw	r30, r16
    2df6:	e9 0f       	add	r30, r25
    2df8:	f1 1d       	adc	r31, r1
    2dfa:	31 97       	sbiw	r30, 0x01	; 1
    2dfc:	80 81       	ld	r24, Z
    2dfe:	88 35       	cpi	r24, 0x58	; 88
    2e00:	61 f4       	brne	.+24     	; 0x2e1a <_Z16downFuncMainMenuP9CMenuItem+0x80>
    2e02:	fe 01       	movw	r30, r28
    2e04:	e8 5b       	subi	r30, 0xB8	; 184
    2e06:	ff 4f       	sbci	r31, 0xFF	; 255
    2e08:	e0 81       	ld	r30, Z
    2e0a:	f0 e0       	ldi	r31, 0x00	; 0
    2e0c:	e0 51       	subi	r30, 0x10	; 16
    2e0e:	fb 4f       	sbci	r31, 0xFB	; 251
    2e10:	82 81       	ldd	r24, Z+2	; 0x02
    2e12:	88 23       	and	r24, r24
    2e14:	41 f1       	breq	.+80     	; 0x2e66 <_Z16downFuncMainMenuP9CMenuItem+0xcc>
    2e16:	81 50       	subi	r24, 0x01	; 1
    2e18:	82 83       	std	Z+2, r24	; 0x02
    2e1a:	ce 01       	movw	r24, r28
    2e1c:	df 91       	pop	r29
    2e1e:	cf 91       	pop	r28
    2e20:	1f 91       	pop	r17
    2e22:	0f 91       	pop	r16
    2e24:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <_ZN9CMenuItem4drawEv>
    2e28:	80 91 f0 04 	lds	r24, 0x04F0
    2e2c:	91 e0       	ldi	r25, 0x01	; 1
    2e2e:	89 27       	eor	r24, r25
    2e30:	80 93 f0 04 	sts	0x04F0, r24
    2e34:	0c de       	rcall	.-1000   	; 0x2a4e <_Z7SetnOTPc>
    2e36:	c1 cf       	rjmp	.-126    	; 0x2dba <_Z16downFuncMainMenuP9CMenuItem+0x20>
    2e38:	80 91 f1 04 	lds	r24, 0x04F1
    2e3c:	89 27       	eor	r24, r25
    2e3e:	80 93 f1 04 	sts	0x04F1, r24
    2e42:	80 ef       	ldi	r24, 0xF0	; 240
    2e44:	94 e0       	ldi	r25, 0x04	; 4
    2e46:	7a db       	rcall	.-2316   	; 0x253c <_Z13ChangeModePrkP12StateOfPlate>
    2e48:	c2 cf       	rjmp	.-124    	; 0x2dce <_Z16downFuncMainMenuP9CMenuItem+0x34>
    2e4a:	81 e0       	ldi	r24, 0x01	; 1
    2e4c:	90 91 49 05 	lds	r25, 0x0549
    2e50:	91 11       	cpse	r25, r1
    2e52:	80 e0       	ldi	r24, 0x00	; 0
    2e54:	80 93 49 05 	sts	0x0549, r24
    2e58:	60 e0       	ldi	r22, 0x00	; 0
    2e5a:	70 e0       	ldi	r23, 0x00	; 0
    2e5c:	80 ef       	ldi	r24, 0xF0	; 240
    2e5e:	94 e0       	ldi	r25, 0x04	; 4
    2e60:	0e 94 39 09 	call	0x1272	; 0x1272 <_Z17SaveStateToEEPROMP12StateOfPlatePv>
    2e64:	be cf       	rjmp	.-132    	; 0x2de2 <_Z16downFuncMainMenuP9CMenuItem+0x48>
    2e66:	89 e0       	ldi	r24, 0x09	; 9
    2e68:	d7 cf       	rjmp	.-82     	; 0x2e18 <_Z16downFuncMainMenuP9CMenuItem+0x7e>

00002e6a <_Z8WriteOtpPh>:
    2e6a:	fc 01       	movw	r30, r24
    2e6c:	81 81       	ldd	r24, Z+1	; 0x01
    2e6e:	8f 70       	andi	r24, 0x0F	; 15
    2e70:	ee dd       	rcall	.-1060   	; 0x2a4e <_Z7SetnOTPc>
    2e72:	e4 c9       	rjmp	.-3128   	; 0x223c <_Z6SendOkv>

00002e74 <main>:
	
}
//////////////////////////////////////////////////////////////////////////
int main(void)
{
	lcd_init(LCD_DISP_ON);
    2e74:	8c e0       	ldi	r24, 0x0C	; 12
    2e76:	0e 94 da 03 	call	0x7b4	; 0x7b4 <_Z8lcd_inith>
	//lcd_clrscr();
	lcd_puts("LOADING      ");
    2e7a:	85 e5       	ldi	r24, 0x55	; 85
    2e7c:	93 e0       	ldi	r25, 0x03	; 3
    2e7e:	0e 94 cf 03 	call	0x79e	; 0x79e <_Z8lcd_putsPKc>
    2e82:	ff cf       	rjmp	.-2      	; 0x2e82 <main+0xe>

00002e84 <_GLOBAL__sub_I__Z11noEventMenuP9CMenuItem>:
// // 		_delay_ms(100);
// // 		LCD_Clear();
//       ScanKeyboard(KeySelect);
// 	
//     }
    2e84:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <_Z41__static_initialization_and_destruction_0ii.part.5>

00002e88 <_Z5SendAPj>:

}

void SendA(unsigned int* LCAout){//отправка значения аттенюатора
	char i;
	cli();
    2e88:	f8 94       	cli
    2e8a:	2f e0       	ldi	r18, 0x0F	; 15
    2e8c:	30 e0       	ldi	r19, 0x00	; 0
	for (i = 8; i > 0; i--)
	{
		SETCLKK(0);
    2e8e:	c1 98       	cbi	0x18, 1	; 24
    2e90:	45 e2       	ldi	r20, 0x25	; 37
    2e92:	4a 95       	dec	r20
    2e94:	f1 f7       	brne	.-4      	; 0x2e92 <_Z5SendAPj+0xa>
		_delay_us(10);
		//SetDATA( (( ((unsigned int)eeprom_read_word(&LCAout[2])) >> (8 + i - 1)) & 0x0001));
		SETDATA( ((LCAout[2] >> (8 + i - 1)) & 0x0001));
    2e96:	fc 01       	movw	r30, r24
    2e98:	44 81       	ldd	r20, Z+4	; 0x04
    2e9a:	55 81       	ldd	r21, Z+5	; 0x05
    2e9c:	02 2e       	mov	r0, r18
    2e9e:	02 c0       	rjmp	.+4      	; 0x2ea4 <_Z5SendAPj+0x1c>
    2ea0:	56 95       	lsr	r21
    2ea2:	47 95       	ror	r20
    2ea4:	0a 94       	dec	r0
    2ea6:	e2 f7       	brpl	.-8      	; 0x2ea0 <_Z5SendAPj+0x18>
    2ea8:	40 fd       	sbrc	r20, 0
    2eaa:	02 c0       	rjmp	.+4      	; 0x2eb0 <_Z5SendAPj+0x28>
    2eac:	c2 98       	cbi	0x18, 2	; 24
    2eae:	01 c0       	rjmp	.+2      	; 0x2eb2 <_Z5SendAPj+0x2a>
    2eb0:	c2 9a       	sbi	0x18, 2	; 24
    2eb2:	f5 e2       	ldi	r31, 0x25	; 37
    2eb4:	fa 95       	dec	r31
    2eb6:	f1 f7       	brne	.-4      	; 0x2eb4 <_Z5SendAPj+0x2c>
		_delay_us(10);
		SETCLKK(1);
    2eb8:	c1 9a       	sbi	0x18, 1	; 24
    2eba:	45 e2       	ldi	r20, 0x25	; 37
    2ebc:	4a 95       	dec	r20
    2ebe:	f1 f7       	brne	.-4      	; 0x2ebc <_Z5SendAPj+0x34>
    2ec0:	21 50       	subi	r18, 0x01	; 1
    2ec2:	31 09       	sbc	r19, r1
}

void SendA(unsigned int* LCAout){//отправка значения аттенюатора
	char i;
	cli();
	for (i = 8; i > 0; i--)
    2ec4:	27 30       	cpi	r18, 0x07	; 7
    2ec6:	31 05       	cpc	r19, r1
    2ec8:	11 f7       	brne	.-60     	; 0x2e8e <_Z5SendAPj+0x6>
		SETDATA( ((LCAout[2] >> (8 + i - 1)) & 0x0001));
		_delay_us(10);
		SETCLKK(1);
		_delay_us(10);
	}
	SETCLKK(0);
    2eca:	c1 98       	cbi	0x18, 1	; 24
	SETCLKS(0);
    2ecc:	c0 98       	cbi	0x18, 0	; 24
	SETDATA(0);
    2ece:	c2 98       	cbi	0x18, 2	; 24
	sei();
    2ed0:	78 94       	sei
    2ed2:	08 95       	ret

00002ed4 <_Z11SendLCA2SelPh>:
}

void SendLCA2Sel(unsigned char* LCAout){//отправка значения настройки контуров
    2ed4:	0f 93       	push	r16
    2ed6:	1f 93       	push	r17
    2ed8:	cf 93       	push	r28
    2eda:	df 93       	push	r29
    2edc:	8c 01       	movw	r16, r24
	char i;
	unsigned int* LCA = (unsigned int* ) LCAout;
	cli();
    2ede:	f8 94       	cli

	SetnOTP(1);//запираем предкорретор
    2ee0:	81 e0       	ldi	r24, 0x01	; 1
    2ee2:	b5 dd       	rcall	.-1174   	; 0x2a4e <_Z7SetnOTPc>
    2ee4:	c8 e1       	ldi	r28, 0x18	; 24
    2ee6:	d0 e0       	ldi	r29, 0x00	; 0
    2ee8:	8c 2f       	mov	r24, r28
    2eea:	8f 5e       	subi	r24, 0xEF	; 239
	for (  i = 41; i > 0; i--)
	{
		if (i <= 16)
    2eec:	81 31       	cpi	r24, 0x11	; 17
    2eee:	58 f4       	brcc	.+22     	; 0x2f06 <_Z11SendLCA2SelPh+0x32>
		{
			SETCLKS(0);
    2ef0:	c0 98       	cbi	0x18, 0	; 24
    2ef2:	25 e2       	ldi	r18, 0x25	; 37
    2ef4:	2a 95       	dec	r18
    2ef6:	f1 f7       	brne	.-4      	; 0x2ef4 <_Z11SendLCA2SelPh+0x20>
			_delay_us(10);
			//SetDATA( (( ((unsigned int)eeprom_read_word(&LCA[0])) >> (i - 1)) & 0x0001));
			SETDATA( ((LCA[0] >> (i - 1)) & 0x0001));
    2ef8:	f8 01       	movw	r30, r16
    2efa:	80 81       	ld	r24, Z
    2efc:	91 81       	ldd	r25, Z+1	; 0x01
    2efe:	9e 01       	movw	r18, r28
    2f00:	20 5f       	subi	r18, 0xF0	; 240
    2f02:	3f 4f       	sbci	r19, 0xFF	; 255
    2f04:	28 c0       	rjmp	.+80     	; 0x2f56 <_Z11SendLCA2SelPh+0x82>
			_delay_us(10);
			SETCLKS(1);
			_delay_us(10);
			
		} else if ((16 < i)&&(i <= 32))
    2f06:	c0 31       	cpi	r28, 0x10	; 16
    2f08:	d0 f4       	brcc	.+52     	; 0x2f3e <_Z11SendLCA2SelPh+0x6a>
		{
			SETCLKS(0);
    2f0a:	c0 98       	cbi	0x18, 0	; 24
    2f0c:	85 e2       	ldi	r24, 0x25	; 37
    2f0e:	8a 95       	dec	r24
    2f10:	f1 f7       	brne	.-4      	; 0x2f0e <_Z11SendLCA2SelPh+0x3a>
			_delay_us(10);
			//SetDATA( (( ((unsigned int)eeprom_read_word(&LCA[1])) >> (i - 16 - 1)) & 0x0001));
			SETDATA( ((LCA[1] >> (i - 16 - 1)) & 0x0001));
    2f12:	f8 01       	movw	r30, r16
    2f14:	82 81       	ldd	r24, Z+2	; 0x02
    2f16:	93 81       	ldd	r25, Z+3	; 0x03
    2f18:	0c 2e       	mov	r0, r28
    2f1a:	02 c0       	rjmp	.+4      	; 0x2f20 <_Z11SendLCA2SelPh+0x4c>
    2f1c:	96 95       	lsr	r25
    2f1e:	87 95       	ror	r24
    2f20:	0a 94       	dec	r0
    2f22:	e2 f7       	brpl	.-8      	; 0x2f1c <_Z11SendLCA2SelPh+0x48>
    2f24:	80 fd       	sbrc	r24, 0
    2f26:	02 c0       	rjmp	.+4      	; 0x2f2c <_Z11SendLCA2SelPh+0x58>
    2f28:	c2 98       	cbi	0x18, 2	; 24
    2f2a:	01 c0       	rjmp	.+2      	; 0x2f2e <_Z11SendLCA2SelPh+0x5a>
    2f2c:	c2 9a       	sbi	0x18, 2	; 24
    2f2e:	25 e2       	ldi	r18, 0x25	; 37
    2f30:	2a 95       	dec	r18
    2f32:	f1 f7       	brne	.-4      	; 0x2f30 <_Z11SendLCA2SelPh+0x5c>
			_delay_us(10);
			SETCLKS(1);
    2f34:	c0 9a       	sbi	0x18, 0	; 24
    2f36:	85 e2       	ldi	r24, 0x25	; 37
    2f38:	8a 95       	dec	r24
    2f3a:	f1 f7       	brne	.-4      	; 0x2f38 <_Z11SendLCA2SelPh+0x64>
    2f3c:	20 c0       	rjmp	.+64     	; 0x2f7e <_Z11SendLCA2SelPh+0xaa>
			_delay_us(10);
			
		} else if ((32 < i)&&(i <= 40))
    2f3e:	89 32       	cpi	r24, 0x29	; 41
    2f40:	e1 f0       	breq	.+56     	; 0x2f7a <_Z11SendLCA2SelPh+0xa6>
		{
			SETCLKS(0);
    2f42:	c0 98       	cbi	0x18, 0	; 24
    2f44:	e5 e2       	ldi	r30, 0x25	; 37
    2f46:	ea 95       	dec	r30
    2f48:	f1 f7       	brne	.-4      	; 0x2f46 <_Z11SendLCA2SelPh+0x72>
			_delay_us(10);
			//SetDATA( (( ((unsigned int)eeprom_read_word(&LCA[2])) >> (i - 32 - 1)) & 0x0001));
			SETDATA( ((LCA[2] >> (i - 32 - 1)) & 0x0001));
    2f4a:	f8 01       	movw	r30, r16
    2f4c:	84 81       	ldd	r24, Z+4	; 0x04
    2f4e:	95 81       	ldd	r25, Z+5	; 0x05
    2f50:	9e 01       	movw	r18, r28
    2f52:	20 51       	subi	r18, 0x10	; 16
    2f54:	31 09       	sbc	r19, r1
    2f56:	02 c0       	rjmp	.+4      	; 0x2f5c <_Z11SendLCA2SelPh+0x88>
    2f58:	96 95       	lsr	r25
    2f5a:	87 95       	ror	r24
    2f5c:	2a 95       	dec	r18
    2f5e:	e2 f7       	brpl	.-8      	; 0x2f58 <_Z11SendLCA2SelPh+0x84>
    2f60:	80 fd       	sbrc	r24, 0
    2f62:	02 c0       	rjmp	.+4      	; 0x2f68 <_Z11SendLCA2SelPh+0x94>
    2f64:	c2 98       	cbi	0x18, 2	; 24
    2f66:	01 c0       	rjmp	.+2      	; 0x2f6a <_Z11SendLCA2SelPh+0x96>
    2f68:	c2 9a       	sbi	0x18, 2	; 24
    2f6a:	f5 e2       	ldi	r31, 0x25	; 37
    2f6c:	fa 95       	dec	r31
    2f6e:	f1 f7       	brne	.-4      	; 0x2f6c <_Z11SendLCA2SelPh+0x98>
			_delay_us(10);
			SETCLKS(1);
    2f70:	c0 9a       	sbi	0x18, 0	; 24
    2f72:	25 e2       	ldi	r18, 0x25	; 37
    2f74:	2a 95       	dec	r18
    2f76:	f1 f7       	brne	.-4      	; 0x2f74 <_Z11SendLCA2SelPh+0xa0>
    2f78:	02 c0       	rjmp	.+4      	; 0x2f7e <_Z11SendLCA2SelPh+0xaa>
			_delay_us(10);
			
		}else if (41 == i)
		{
			SendA(LCA);
    2f7a:	c8 01       	movw	r24, r16
    2f7c:	85 df       	rcall	.-246    	; 0x2e88 <_Z5SendAPj>
    2f7e:	21 97       	sbiw	r28, 0x01	; 1
	char i;
	unsigned int* LCA = (unsigned int* ) LCAout;
	cli();

	SetnOTP(1);//запираем предкорретор
	for (  i = 41; i > 0; i--)
    2f80:	cf 3e       	cpi	r28, 0xEF	; 239
    2f82:	8f ef       	ldi	r24, 0xFF	; 255
    2f84:	d8 07       	cpc	r29, r24
    2f86:	09 f0       	breq	.+2      	; 0x2f8a <_Z11SendLCA2SelPh+0xb6>
    2f88:	af cf       	rjmp	.-162    	; 0x2ee8 <_Z11SendLCA2SelPh+0x14>
		{
			SendA(LCA);
		}
		
	}
	SETCLKK(0);
    2f8a:	c1 98       	cbi	0x18, 1	; 24
	SETCLKS(0);
    2f8c:	c0 98       	cbi	0x18, 0	; 24
	SETDATA(0);
    2f8e:	c2 98       	cbi	0x18, 2	; 24
	SetnOTP(0);//отпираем предкорретор
    2f90:	80 e0       	ldi	r24, 0x00	; 0
    2f92:	5d dd       	rcall	.-1350   	; 0x2a4e <_Z7SetnOTPc>
	sei();
    2f94:	78 94       	sei

}
    2f96:	df 91       	pop	r29
    2f98:	cf 91       	pop	r28
    2f9a:	1f 91       	pop	r17
    2f9c:	0f 91       	pop	r16
    2f9e:	08 95       	ret

00002fa0 <_Z9ChangeReg7regAddr>:
		}
		
	}break;
	
	}
}
    2fa0:	b8 9a       	sbi	0x17, 0	; 23
    2fa2:	ba 9a       	sbi	0x17, 2	; 23
    2fa4:	c2 98       	cbi	0x18, 2	; 24
    2fa6:	c0 98       	cbi	0x18, 0	; 24
    2fa8:	27 e3       	ldi	r18, 0x37	; 55
    2faa:	2a 95       	dec	r18
    2fac:	f1 f7       	brne	.-4      	; 0x2faa <_Z9ChangeReg7regAddr+0xa>
    2fae:	00 00       	nop
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	98 17       	cp	r25, r24
    2fb4:	61 f0       	breq	.+24     	; 0x2fce <_Z9ChangeReg7regAddr+0x2e>
    2fb6:	c2 9a       	sbi	0x18, 2	; 24
    2fb8:	27 e0       	ldi	r18, 0x07	; 7
    2fba:	2a 95       	dec	r18
    2fbc:	f1 f7       	brne	.-4      	; 0x2fba <_Z9ChangeReg7regAddr+0x1a>
    2fbe:	00 c0       	rjmp	.+0      	; 0x2fc0 <_Z9ChangeReg7regAddr+0x20>
    2fc0:	c2 98       	cbi	0x18, 2	; 24
    2fc2:	27 e0       	ldi	r18, 0x07	; 7
    2fc4:	2a 95       	dec	r18
    2fc6:	f1 f7       	brne	.-4      	; 0x2fc4 <_Z9ChangeReg7regAddr+0x24>
    2fc8:	00 c0       	rjmp	.+0      	; 0x2fca <_Z9ChangeReg7regAddr+0x2a>
    2fca:	9f 5f       	subi	r25, 0xFF	; 255
    2fcc:	f2 cf       	rjmp	.-28     	; 0x2fb2 <_Z9ChangeReg7regAddr+0x12>
    2fce:	c0 9a       	sbi	0x18, 0	; 24
    2fd0:	c2 98       	cbi	0x18, 2	; 24
    2fd2:	08 95       	ret

00002fd4 <_Z11SetZselCap1i>:
    2fd4:	cf 93       	push	r28
    2fd6:	df 93       	push	r29
    2fd8:	ec 01       	movw	r28, r24
    2fda:	85 e0       	ldi	r24, 0x05	; 5
    2fdc:	e1 df       	rcall	.-62     	; 0x2fa0 <_Z9ChangeReg7regAddr>
    2fde:	b9 9a       	sbi	0x17, 1	; 23
    2fe0:	ba 9a       	sbi	0x17, 2	; 23
    2fe2:	c2 98       	cbi	0x18, 2	; 24
    2fe4:	c1 98       	cbi	0x18, 1	; 24
    2fe6:	88 e0       	ldi	r24, 0x08	; 8
    2fe8:	c2 98       	cbi	0x18, 2	; 24
    2fea:	97 e0       	ldi	r25, 0x07	; 7
    2fec:	9a 95       	dec	r25
    2fee:	f1 f7       	brne	.-4      	; 0x2fec <_Z11SetZselCap1i+0x18>
    2ff0:	00 c0       	rjmp	.+0      	; 0x2ff2 <_Z11SetZselCap1i+0x1e>
    2ff2:	c1 9a       	sbi	0x18, 1	; 24
    2ff4:	97 e0       	ldi	r25, 0x07	; 7
    2ff6:	9a 95       	dec	r25
    2ff8:	f1 f7       	brne	.-4      	; 0x2ff6 <_Z11SetZselCap1i+0x22>
    2ffa:	00 c0       	rjmp	.+0      	; 0x2ffc <_Z11SetZselCap1i+0x28>
    2ffc:	c1 98       	cbi	0x18, 1	; 24
    2ffe:	97 e0       	ldi	r25, 0x07	; 7
    3000:	9a 95       	dec	r25
    3002:	f1 f7       	brne	.-4      	; 0x3000 <_Z11SetZselCap1i+0x2c>
    3004:	00 c0       	rjmp	.+0      	; 0x3006 <_Z11SetZselCap1i+0x32>
    3006:	81 50       	subi	r24, 0x01	; 1
    3008:	79 f7       	brne	.-34     	; 0x2fe8 <_Z11SetZselCap1i+0x14>
    300a:	29 e0       	ldi	r18, 0x09	; 9
    300c:	30 e0       	ldi	r19, 0x00	; 0
    300e:	ce 01       	movw	r24, r28
    3010:	02 2e       	mov	r0, r18
    3012:	02 c0       	rjmp	.+4      	; 0x3018 <_Z11SetZselCap1i+0x44>
    3014:	96 95       	lsr	r25
    3016:	87 95       	ror	r24
    3018:	0a 94       	dec	r0
    301a:	e2 f7       	brpl	.-8      	; 0x3014 <_Z11SetZselCap1i+0x40>
    301c:	80 fd       	sbrc	r24, 0
    301e:	02 c0       	rjmp	.+4      	; 0x3024 <_Z11SetZselCap1i+0x50>
    3020:	c2 98       	cbi	0x18, 2	; 24
    3022:	01 c0       	rjmp	.+2      	; 0x3026 <_Z11SetZselCap1i+0x52>
    3024:	c2 9a       	sbi	0x18, 2	; 24
    3026:	87 e0       	ldi	r24, 0x07	; 7
    3028:	8a 95       	dec	r24
    302a:	f1 f7       	brne	.-4      	; 0x3028 <_Z11SetZselCap1i+0x54>
    302c:	00 c0       	rjmp	.+0      	; 0x302e <_Z11SetZselCap1i+0x5a>
    302e:	c1 9a       	sbi	0x18, 1	; 24
    3030:	97 e0       	ldi	r25, 0x07	; 7
    3032:	9a 95       	dec	r25
    3034:	f1 f7       	brne	.-4      	; 0x3032 <_Z11SetZselCap1i+0x5e>
    3036:	00 c0       	rjmp	.+0      	; 0x3038 <_Z11SetZselCap1i+0x64>
    3038:	c1 98       	cbi	0x18, 1	; 24
    303a:	87 e0       	ldi	r24, 0x07	; 7
    303c:	8a 95       	dec	r24
    303e:	f1 f7       	brne	.-4      	; 0x303c <_Z11SetZselCap1i+0x68>
    3040:	00 c0       	rjmp	.+0      	; 0x3042 <_Z11SetZselCap1i+0x6e>
    3042:	21 50       	subi	r18, 0x01	; 1
    3044:	31 09       	sbc	r19, r1
    3046:	18 f7       	brcc	.-58     	; 0x300e <_Z11SetZselCap1i+0x3a>
    3048:	86 e0       	ldi	r24, 0x06	; 6
    304a:	c2 98       	cbi	0x18, 2	; 24
    304c:	97 e0       	ldi	r25, 0x07	; 7
    304e:	9a 95       	dec	r25
    3050:	f1 f7       	brne	.-4      	; 0x304e <_Z11SetZselCap1i+0x7a>
    3052:	00 c0       	rjmp	.+0      	; 0x3054 <_Z11SetZselCap1i+0x80>
    3054:	c1 9a       	sbi	0x18, 1	; 24
    3056:	97 e0       	ldi	r25, 0x07	; 7
    3058:	9a 95       	dec	r25
    305a:	f1 f7       	brne	.-4      	; 0x3058 <_Z11SetZselCap1i+0x84>
    305c:	00 c0       	rjmp	.+0      	; 0x305e <_Z11SetZselCap1i+0x8a>
    305e:	c1 98       	cbi	0x18, 1	; 24
    3060:	97 e0       	ldi	r25, 0x07	; 7
    3062:	9a 95       	dec	r25
    3064:	f1 f7       	brne	.-4      	; 0x3062 <_Z11SetZselCap1i+0x8e>
    3066:	00 c0       	rjmp	.+0      	; 0x3068 <_Z11SetZselCap1i+0x94>
    3068:	81 50       	subi	r24, 0x01	; 1
    306a:	79 f7       	brne	.-34     	; 0x304a <_Z11SetZselCap1i+0x76>
    306c:	c1 98       	cbi	0x18, 1	; 24
    306e:	85 e0       	ldi	r24, 0x05	; 5
    3070:	df 91       	pop	r29
    3072:	cf 91       	pop	r28
    3074:	95 cf       	rjmp	.-214    	; 0x2fa0 <_Z9ChangeReg7regAddr>

00003076 <_Z9WriteBytec>:
    3076:	b9 9a       	sbi	0x17, 1	; 23
    3078:	ba 9a       	sbi	0x17, 2	; 23
    307a:	c2 98       	cbi	0x18, 2	; 24
    307c:	c1 98       	cbi	0x18, 1	; 24
    307e:	98 e0       	ldi	r25, 0x08	; 8
    3080:	87 fd       	sbrc	r24, 7
    3082:	02 c0       	rjmp	.+4      	; 0x3088 <_Z9WriteBytec+0x12>
    3084:	c2 98       	cbi	0x18, 2	; 24
    3086:	01 c0       	rjmp	.+2      	; 0x308a <_Z9WriteBytec+0x14>
    3088:	c2 9a       	sbi	0x18, 2	; 24
    308a:	27 e0       	ldi	r18, 0x07	; 7
    308c:	2a 95       	dec	r18
    308e:	f1 f7       	brne	.-4      	; 0x308c <_Z9WriteBytec+0x16>
    3090:	00 c0       	rjmp	.+0      	; 0x3092 <_Z9WriteBytec+0x1c>
    3092:	c1 9a       	sbi	0x18, 1	; 24
    3094:	27 e0       	ldi	r18, 0x07	; 7
    3096:	2a 95       	dec	r18
    3098:	f1 f7       	brne	.-4      	; 0x3096 <_Z9WriteBytec+0x20>
    309a:	00 c0       	rjmp	.+0      	; 0x309c <_Z9WriteBytec+0x26>
    309c:	c1 98       	cbi	0x18, 1	; 24
    309e:	27 e0       	ldi	r18, 0x07	; 7
    30a0:	2a 95       	dec	r18
    30a2:	f1 f7       	brne	.-4      	; 0x30a0 <_Z9WriteBytec+0x2a>
    30a4:	00 c0       	rjmp	.+0      	; 0x30a6 <_Z9WriteBytec+0x30>
    30a6:	88 0f       	add	r24, r24
    30a8:	91 50       	subi	r25, 0x01	; 1
    30aa:	51 f7       	brne	.-44     	; 0x3080 <_Z9WriteBytec+0xa>
    30ac:	c2 98       	cbi	0x18, 2	; 24
    30ae:	c1 98       	cbi	0x18, 1	; 24
    30b0:	08 95       	ret

000030b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>:
    30b2:	1f 93       	push	r17
    30b4:	cf 93       	push	r28
    30b6:	df 93       	push	r29
    30b8:	ec 01       	movw	r28, r24
    30ba:	16 2f       	mov	r17, r22
    30bc:	62 30       	cpi	r22, 0x02	; 2
    30be:	99 f0       	breq	.+38     	; 0x30e6 <_Z12SetZselParamP9ZSELPARAM7regAddr+0x34>
    30c0:	30 f0       	brcs	.+12     	; 0x30ce <_Z12SetZselParamP9ZSELPARAM7regAddr+0x1c>
    30c2:	64 30       	cpi	r22, 0x04	; 4
    30c4:	d9 f0       	breq	.+54     	; 0x30fc <_Z12SetZselParamP9ZSELPARAM7regAddr+0x4a>
    30c6:	48 f0       	brcs	.+18     	; 0x30da <_Z12SetZselParamP9ZSELPARAM7regAddr+0x28>
    30c8:	65 30       	cpi	r22, 0x05	; 5
    30ca:	99 f0       	breq	.+38     	; 0x30f2 <_Z12SetZselParamP9ZSELPARAM7regAddr+0x40>
    30cc:	1e c0       	rjmp	.+60     	; 0x310a <_Z12SetZselParamP9ZSELPARAM7regAddr+0x58>
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	67 df       	rcall	.-306    	; 0x2fa0 <_Z9ChangeReg7regAddr>
    30d2:	88 81       	ld	r24, Y
    30d4:	d0 df       	rcall	.-96     	; 0x3076 <_Z9WriteBytec>
    30d6:	11 11       	cpse	r17, r1
    30d8:	18 c0       	rjmp	.+48     	; 0x310a <_Z12SetZselParamP9ZSELPARAM7regAddr+0x58>
    30da:	83 e0       	ldi	r24, 0x03	; 3
    30dc:	61 df       	rcall	.-318    	; 0x2fa0 <_Z9ChangeReg7regAddr>
    30de:	8a 81       	ldd	r24, Y+2	; 0x02
    30e0:	ca df       	rcall	.-108    	; 0x3076 <_Z9WriteBytec>
    30e2:	11 11       	cpse	r17, r1
    30e4:	12 c0       	rjmp	.+36     	; 0x310a <_Z12SetZselParamP9ZSELPARAM7regAddr+0x58>
    30e6:	82 e0       	ldi	r24, 0x02	; 2
    30e8:	5b df       	rcall	.-330    	; 0x2fa0 <_Z9ChangeReg7regAddr>
    30ea:	89 81       	ldd	r24, Y+1	; 0x01
    30ec:	c4 df       	rcall	.-120    	; 0x3076 <_Z9WriteBytec>
    30ee:	11 11       	cpse	r17, r1
    30f0:	0c c0       	rjmp	.+24     	; 0x310a <_Z12SetZselParamP9ZSELPARAM7regAddr+0x58>
    30f2:	8c 81       	ldd	r24, Y+4	; 0x04
    30f4:	9d 81       	ldd	r25, Y+5	; 0x05
    30f6:	6e df       	rcall	.-292    	; 0x2fd4 <_Z11SetZselCap1i>
    30f8:	11 11       	cpse	r17, r1
    30fa:	07 c0       	rjmp	.+14     	; 0x310a <_Z12SetZselParamP9ZSELPARAM7regAddr+0x58>
    30fc:	84 e0       	ldi	r24, 0x04	; 4
    30fe:	50 df       	rcall	.-352    	; 0x2fa0 <_Z9ChangeReg7regAddr>
    3100:	8b 81       	ldd	r24, Y+3	; 0x03
    3102:	df 91       	pop	r29
    3104:	cf 91       	pop	r28
    3106:	1f 91       	pop	r17
    3108:	b6 cf       	rjmp	.-148    	; 0x3076 <_Z9WriteBytec>
    310a:	df 91       	pop	r29
    310c:	cf 91       	pop	r28
    310e:	1f 91       	pop	r17
    3110:	08 95       	ret

00003112 <_Z11SetZselOpenb>:
    3112:	bf 9a       	sbi	0x17, 7	; 23
    3114:	88 23       	and	r24, r24
    3116:	11 f0       	breq	.+4      	; 0x311c <_Z11SetZselOpenb+0xa>
    3118:	c7 98       	cbi	0x18, 7	; 24
    311a:	08 95       	ret
    311c:	c7 9a       	sbi	0x18, 7	; 24
    311e:	08 95       	ret

00003120 <_Z13FindFreqParamiP9ZSELPARAM>:
		{150,8,31,9},
		{0,0,0,0}};

//////////////////////////////////////////////////////////////////////////
void FindFreqParam( int freq, ZSELPARAM * param )
{
    3120:	cf 93       	push	r28
    3122:	db 01       	movw	r26, r22
	FREQGRIDBORDER freqBorder = freqBordersGrid[0];
    3124:	20 91 8e 01 	lds	r18, 0x018E
    3128:	30 91 8f 01 	lds	r19, 0x018F
    312c:	50 91 90 01 	lds	r21, 0x0190
    3130:	70 91 91 01 	lds	r23, 0x0191
    3134:	60 91 92 01 	lds	r22, 0x0192
	char i = 0;
    3138:	40 e0       	ldi	r20, 0x00	; 0
	//Поиск сочетания L C link по частоте
	while (freqBorder.freq != 0)//пока не достигли конца списка
	{
		freqBorder = freqBordersGrid[i];//получаем элемент списка частот
    313a:	c5 e0       	ldi	r28, 0x05	; 5
void FindFreqParam( int freq, ZSELPARAM * param )
{
	FREQGRIDBORDER freqBorder = freqBordersGrid[0];
	char i = 0;
	//Поиск сочетания L C link по частоте
	while (freqBorder.freq != 0)//пока не достигли конца списка
    313c:	23 2b       	or	r18, r19
    313e:	d9 f0       	breq	.+54     	; 0x3176 <_Z13FindFreqParamiP9ZSELPARAM+0x56>
	{
		freqBorder = freqBordersGrid[i];//получаем элемент списка частот
    3140:	c4 9f       	mul	r28, r20
    3142:	f0 01       	movw	r30, r0
    3144:	11 24       	eor	r1, r1
    3146:	e2 57       	subi	r30, 0x72	; 114
    3148:	fe 4f       	sbci	r31, 0xFE	; 254
    314a:	20 81       	ld	r18, Z
    314c:	31 81       	ldd	r19, Z+1	; 0x01
    314e:	52 81       	ldd	r21, Z+2	; 0x02
    3150:	73 81       	ldd	r23, Z+3	; 0x03
    3152:	64 81       	ldd	r22, Z+4	; 0x04
		if (freqBorder.freq >= freq)//пока частота элемента больше чем установленная частота не делаем ничего
    3154:	28 17       	cp	r18, r24
    3156:	39 07       	cpc	r19, r25
    3158:	64 f4       	brge	.+24     	; 0x3172 <_Z13FindFreqParamiP9ZSELPARAM+0x52>
		{}else{//как только дошли до элемента с частотой меньше чем установленная
		if(i > 0) i = i - 1; else i = 0;//если это был нулевой элемент то берем его
    315a:	41 11       	cpse	r20, r1
    315c:	41 50       	subi	r20, 0x01	; 1
		freqBorder = freqBordersGrid[i];//если это был элемент не на краю списка то берем предыдущий и завершаем поиск
    315e:	85 e0       	ldi	r24, 0x05	; 5
    3160:	48 9f       	mul	r20, r24
    3162:	f0 01       	movw	r30, r0
    3164:	11 24       	eor	r1, r1
    3166:	e2 57       	subi	r30, 0x72	; 114
    3168:	fe 4f       	sbci	r31, 0xFE	; 254
    316a:	52 81       	ldd	r21, Z+2	; 0x02
    316c:	73 81       	ldd	r23, Z+3	; 0x03
    316e:	64 81       	ldd	r22, Z+4	; 0x04
		break;
    3170:	02 c0       	rjmp	.+4      	; 0x3176 <_Z13FindFreqParamiP9ZSELPARAM+0x56>
			}
	i++;
    3172:	4f 5f       	subi	r20, 0xFF	; 255
    3174:	e3 cf       	rjmp	.-58     	; 0x313c <_Z13FindFreqParamiP9ZSELPARAM+0x1c>
	}


	param->C = freqBorder.C;
    3176:	11 96       	adiw	r26, 0x01	; 1
    3178:	7c 93       	st	X, r23
    317a:	11 97       	sbiw	r26, 0x01	; 1
	param->link = freqBorder.Link;
    317c:	12 96       	adiw	r26, 0x02	; 2
    317e:	6c 93       	st	X, r22
    3180:	12 97       	sbiw	r26, 0x02	; 2
	param->L = freqBorder.L;
    3182:	5c 93       	st	X, r21
	param->A = 0x00;
    3184:	13 96       	adiw	r26, 0x03	; 3
    3186:	1c 92       	st	X, r1
    3188:	13 97       	sbiw	r26, 0x03	; 3
	SetZselParam(param,ALLREG);
    318a:	60 e0       	ldi	r22, 0x00	; 0
    318c:	cd 01       	movw	r24, r26
}
    318e:	cf 91       	pop	r28

	param->C = freqBorder.C;
	param->link = freqBorder.Link;
	param->L = freqBorder.L;
	param->A = 0x00;
	SetZselParam(param,ALLREG);
    3190:	90 cf       	rjmp	.-224    	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>

00003192 <_Z11TuneZselCapP9ZSELPARAM>:
}
//////////////////////////////////////////////////////////////////////////

void TuneZselCap( ZSELPARAM * param )
{
    3192:	bf 92       	push	r11
    3194:	cf 92       	push	r12
    3196:	df 92       	push	r13
    3198:	ef 92       	push	r14
    319a:	ff 92       	push	r15
    319c:	0f 93       	push	r16
    319e:	1f 93       	push	r17
    31a0:	cf 93       	push	r28
    31a2:	df 93       	push	r29
    31a4:	8c 01       	movw	r16, r24
	char ampCenter1,ampCenter2;
	int startC = 0x0000, stopC = 0x03FF, lengthOfDiap, indOfCenter, currentC;
    31a6:	cc 24       	eor	r12, r12
    31a8:	ca 94       	dec	r12
    31aa:	e3 e0       	ldi	r30, 0x03	; 3
    31ac:	de 2e       	mov	r13, r30
    31ae:	e1 2c       	mov	r14, r1
    31b0:	f1 2c       	mov	r15, r1
	

	#define  EPSILON 2//точность нахождения емкости
	while (abs(stopC - startC) > EPSILON)//поиск максимума бисекцией
    31b2:	c6 01       	movw	r24, r12
    31b4:	8e 19       	sub	r24, r14
    31b6:	9f 09       	sbc	r25, r15
    31b8:	9c 01       	movw	r18, r24
    31ba:	97 ff       	sbrs	r25, 7
    31bc:	04 c0       	rjmp	.+8      	; 0x31c6 <_Z11TuneZselCapP9ZSELPARAM+0x34>
    31be:	22 27       	eor	r18, r18
    31c0:	33 27       	eor	r19, r19
    31c2:	28 1b       	sub	r18, r24
    31c4:	39 0b       	sbc	r19, r25
    31c6:	23 30       	cpi	r18, 0x03	; 3
    31c8:	31 05       	cpc	r19, r1
    31ca:	04 f1       	brlt	.+64     	; 0x320c <_Z11TuneZselCapP9ZSELPARAM+0x7a>
	{
		
		lengthOfDiap = (stopC - startC);
		indOfCenter = lengthOfDiap/2 + startC;
    31cc:	97 fd       	sbrc	r25, 7
    31ce:	01 96       	adiw	r24, 0x01	; 1
    31d0:	ec 01       	movw	r28, r24
    31d2:	d5 95       	asr	r29
    31d4:	c7 95       	ror	r28
    31d6:	ce 0d       	add	r28, r14
    31d8:	df 1d       	adc	r29, r15
		currentC = indOfCenter;

		param->cap1 = indOfCenter - EPSILON;
    31da:	ce 01       	movw	r24, r28
    31dc:	02 97       	sbiw	r24, 0x02	; 2
    31de:	f8 01       	movw	r30, r16
    31e0:	95 83       	std	Z+5, r25	; 0x05
    31e2:	84 83       	std	Z+4, r24	; 0x04
			ChangeReg(CAPREG);
			WriteByte(param->C);
			if(ALLREG != typeOfParam) break;
		};
		case CAP1REG:		{
			SetZselCap1(param->cap1);
    31e4:	f7 de       	rcall	.-530    	; 0x2fd4 <_Z11SetZselCap1i>
		indOfCenter = lengthOfDiap/2 + startC;
		currentC = indOfCenter;

		param->cap1 = indOfCenter - EPSILON;
		SetZselParam(param,CAP1REG);
		ampCenter1 =  read_steady_adc(ADC_UPAS_OUT_PIN);
    31e6:	85 e0       	ldi	r24, 0x05	; 5
    31e8:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
    31ec:	b8 2e       	mov	r11, r24
		
		param->cap1 = indOfCenter + EPSILON;
    31ee:	ce 01       	movw	r24, r28
    31f0:	02 96       	adiw	r24, 0x02	; 2
    31f2:	f8 01       	movw	r30, r16
    31f4:	95 83       	std	Z+5, r25	; 0x05
    31f6:	84 83       	std	Z+4, r24	; 0x04
			ChangeReg(CAPREG);
			WriteByte(param->C);
			if(ALLREG != typeOfParam) break;
		};
		case CAP1REG:		{
			SetZselCap1(param->cap1);
    31f8:	ed de       	rcall	.-550    	; 0x2fd4 <_Z11SetZselCap1i>
		SetZselParam(param,CAP1REG);
		ampCenter1 =  read_steady_adc(ADC_UPAS_OUT_PIN);
		
		param->cap1 = indOfCenter + EPSILON;
		SetZselParam(param,CAP1REG);
		ampCenter2 =  read_steady_adc(ADC_UPAS_OUT_PIN);
    31fa:	85 e0       	ldi	r24, 0x05	; 5
    31fc:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>

		if (ampCenter1 < ampCenter2)
    3200:	b8 16       	cp	r11, r24
    3202:	10 f4       	brcc	.+4      	; 0x3208 <_Z11TuneZselCapP9ZSELPARAM+0x76>
		{
			startC = indOfCenter;
    3204:	7e 01       	movw	r14, r28
    3206:	d5 cf       	rjmp	.-86     	; 0x31b2 <_Z11TuneZselCapP9ZSELPARAM+0x20>
		}
		else{
			stopC = indOfCenter;
    3208:	6e 01       	movw	r12, r28
    320a:	d3 cf       	rjmp	.-90     	; 0x31b2 <_Z11TuneZselCapP9ZSELPARAM+0x20>
		}
	}
	param->cap1 = indOfCenter;
    320c:	f8 01       	movw	r30, r16
    320e:	d5 83       	std	Z+5, r29	; 0x05
    3210:	c4 83       	std	Z+4, r28	; 0x04
	SetZselParam(param,ALLREG);
    3212:	60 e0       	ldi	r22, 0x00	; 0
    3214:	c8 01       	movw	r24, r16
}
    3216:	df 91       	pop	r29
    3218:	cf 91       	pop	r28
    321a:	1f 91       	pop	r17
    321c:	0f 91       	pop	r16
    321e:	ff 90       	pop	r15
    3220:	ef 90       	pop	r14
    3222:	df 90       	pop	r13
    3224:	cf 90       	pop	r12
    3226:	bf 90       	pop	r11
		else{
			stopC = indOfCenter;
		}
	}
	param->cap1 = indOfCenter;
	SetZselParam(param,ALLREG);
    3228:	44 cf       	rjmp	.-376    	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>

0000322a <_Z11SetZselFreqiP9ZSELPARAM>:
}

//////////////////////////////////////////////////////////////////////////
void SetZselFreq( int freq, ZSELPARAM *param )
{
    322a:	0f 93       	push	r16
    322c:	1f 93       	push	r17
    322e:	cf 93       	push	r28
    3230:	df 93       	push	r29
    3232:	cd b7       	in	r28, 0x3d	; 61
    3234:	de b7       	in	r29, 0x3e	; 62
    3236:	28 97       	sbiw	r28, 0x08	; 8
    3238:	0f b6       	in	r0, 0x3f	; 63
    323a:	f8 94       	cli
    323c:	de bf       	out	0x3e, r29	; 62
    323e:	0f be       	out	0x3f, r0	; 63
    3240:	cd bf       	out	0x3d, r28	; 61
    3242:	8b 01       	movw	r16, r22
	ZSELPARAM tempParam;
	FindFreqParam(freq,&tempParam);
    3244:	be 01       	movw	r22, r28
    3246:	6f 5f       	subi	r22, 0xFF	; 255
    3248:	7f 4f       	sbci	r23, 0xFF	; 255
    324a:	6a df       	rcall	.-300    	; 0x3120 <_Z13FindFreqParamiP9ZSELPARAM>
	TuneZselCap(&tempParam);	
    324c:	ce 01       	movw	r24, r28
    324e:	01 96       	adiw	r24, 0x01	; 1
    3250:	a0 df       	rcall	.-192    	; 0x3192 <_Z11TuneZselCapP9ZSELPARAM>
	*param = tempParam;//передаем полученные параметры наружу
    3252:	88 e0       	ldi	r24, 0x08	; 8
    3254:	fe 01       	movw	r30, r28
    3256:	31 96       	adiw	r30, 0x01	; 1
    3258:	d8 01       	movw	r26, r16
    325a:	01 90       	ld	r0, Z+
    325c:	0d 92       	st	X+, r0
    325e:	8a 95       	dec	r24
    3260:	e1 f7       	brne	.-8      	; 0x325a <_Z11SetZselFreqiP9ZSELPARAM+0x30>
}
    3262:	28 96       	adiw	r28, 0x08	; 8
    3264:	0f b6       	in	r0, 0x3f	; 63
    3266:	f8 94       	cli
    3268:	de bf       	out	0x3e, r29	; 62
    326a:	0f be       	out	0x3f, r0	; 63
    326c:	cd bf       	out	0x3d, r28	; 61
    326e:	df 91       	pop	r29
    3270:	cf 91       	pop	r28
    3272:	1f 91       	pop	r17
    3274:	0f 91       	pop	r16
    3276:	08 95       	ret

00003278 <_Z13TuneZselAttenP9ZSELPARAM>:
//////////////////////////////////////////////////////////////////////////
void TuneZselAtten( ZSELPARAM * param )
{
    3278:	af 92       	push	r10
    327a:	bf 92       	push	r11
    327c:	cf 92       	push	r12
    327e:	df 92       	push	r13
    3280:	ef 92       	push	r14
    3282:	ff 92       	push	r15
    3284:	0f 93       	push	r16
    3286:	1f 93       	push	r17
    3288:	cf 93       	push	r28
    328a:	df 93       	push	r29
    328c:	cd b7       	in	r28, 0x3d	; 61
    328e:	de b7       	in	r29, 0x3e	; 62
    3290:	28 97       	sbiw	r28, 0x08	; 8
    3292:	0f b6       	in	r0, 0x3f	; 63
    3294:	f8 94       	cli
    3296:	de bf       	out	0x3e, r29	; 62
    3298:	0f be       	out	0x3f, r0	; 63
    329a:	cd bf       	out	0x3d, r28	; 61
    329c:	8c 01       	movw	r16, r24
	#define NORMAL_LVL 0xF0
	ZSELPARAM tempParam = *param;
    329e:	88 e0       	ldi	r24, 0x08	; 8
    32a0:	f8 01       	movw	r30, r16
    32a2:	de 01       	movw	r26, r28
    32a4:	11 96       	adiw	r26, 0x01	; 1
    32a6:	01 90       	ld	r0, Z+
    32a8:	0d 92       	st	X+, r0
    32aa:	8a 95       	dec	r24
    32ac:	e1 f7       	brne	.-8      	; 0x32a6 <_Z13TuneZselAttenP9ZSELPARAM+0x2e>
	
	char startA = 0, stopA = 0x1F,length,center;
	char amplStart, amplStop,amplCenter;
	
	tempParam.A = startA;
    32ae:	1c 82       	std	Y+4, r1	; 0x04
	SetZselParam(&tempParam,AREG);
    32b0:	64 e0       	ldi	r22, 0x04	; 4
    32b2:	ce 01       	movw	r24, r28
    32b4:	01 96       	adiw	r24, 0x01	; 1
    32b6:	fd de       	rcall	.-518    	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
	amplStart = read_steady_adc(ADC_UPAS_OUT_PIN);
    32b8:	85 e0       	ldi	r24, 0x05	; 5
    32ba:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
    32be:	c8 2e       	mov	r12, r24
	
	tempParam.A = stopA;
    32c0:	8f e1       	ldi	r24, 0x1F	; 31
    32c2:	8c 83       	std	Y+4, r24	; 0x04
	SetZselParam(&tempParam,AREG);
    32c4:	64 e0       	ldi	r22, 0x04	; 4
    32c6:	ce 01       	movw	r24, r28
    32c8:	01 96       	adiw	r24, 0x01	; 1
    32ca:	f3 de       	rcall	.-538    	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
	amplStop = read_steady_adc(ADC_UPAS_OUT_PIN);
    32cc:	85 e0       	ldi	r24, 0x05	; 5
    32ce:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>
void TuneZselAtten( ZSELPARAM * param )
{
	#define NORMAL_LVL 0xF0
	ZSELPARAM tempParam = *param;
	
	char startA = 0, stopA = 0x1F,length,center;
    32d2:	af e1       	ldi	r26, 0x1F	; 31
    32d4:	aa 2e       	mov	r10, r26
    32d6:	b1 2c       	mov	r11, r1
		
		tempParam.A = center;
		SetZselParam(&tempParam,AREG);
		amplCenter = read_steady_adc(ADC_UPAS_OUT_PIN);

		if (((signed int)(NORMAL_LVL - amplCenter) ) *((signed int)(NORMAL_LVL - amplStart) ) > 0)
    32d8:	b0 ef       	ldi	r27, 0xF0	; 240
    32da:	eb 2e       	mov	r14, r27
    32dc:	f1 2c       	mov	r15, r1
	
	tempParam.A = stopA;
	SetZselParam(&tempParam,AREG);
	amplStop = read_steady_adc(ADC_UPAS_OUT_PIN);
	
	while((stopA - startA) > 1) {
    32de:	2a 2d       	mov	r18, r10
    32e0:	30 e0       	ldi	r19, 0x00	; 0
    32e2:	2b 19       	sub	r18, r11
    32e4:	31 09       	sbc	r19, r1
    32e6:	22 30       	cpi	r18, 0x02	; 2
    32e8:	31 05       	cpc	r19, r1
    32ea:	0c f1       	brlt	.+66     	; 0x332e <_Z13TuneZselAttenP9ZSELPARAM+0xb6>
		center = startA  + ( stopA - startA)/2;
    32ec:	35 95       	asr	r19
    32ee:	27 95       	ror	r18
    32f0:	db 2c       	mov	r13, r11
    32f2:	d2 0e       	add	r13, r18
		
		tempParam.A = center;
    32f4:	dc 82       	std	Y+4, r13	; 0x04
		SetZselParam(&tempParam,AREG);
    32f6:	64 e0       	ldi	r22, 0x04	; 4
    32f8:	ce 01       	movw	r24, r28
    32fa:	01 96       	adiw	r24, 0x01	; 1
    32fc:	da de       	rcall	.-588    	; 0x30b2 <_Z12SetZselParamP9ZSELPARAM7regAddr>
		amplCenter = read_steady_adc(ADC_UPAS_OUT_PIN);
    32fe:	85 e0       	ldi	r24, 0x05	; 5
    3300:	0e 94 bc 00 	call	0x178	; 0x178 <_Z15read_steady_adch>

		if (((signed int)(NORMAL_LVL - amplCenter) ) *((signed int)(NORMAL_LVL - amplStart) ) > 0)
    3304:	f7 01       	movw	r30, r14
    3306:	e8 1b       	sub	r30, r24
    3308:	f1 09       	sbc	r31, r1
    330a:	b7 01       	movw	r22, r14
    330c:	6c 19       	sub	r22, r12
    330e:	71 09       	sbc	r23, r1
    3310:	e6 9f       	mul	r30, r22
    3312:	a0 01       	movw	r20, r0
    3314:	e7 9f       	mul	r30, r23
    3316:	50 0d       	add	r21, r0
    3318:	f6 9f       	mul	r31, r22
    331a:	50 0d       	add	r21, r0
    331c:	11 24       	eor	r1, r1
    331e:	14 16       	cp	r1, r20
    3320:	15 06       	cpc	r1, r21
    3322:	1c f4       	brge	.+6      	; 0x332a <_Z13TuneZselAttenP9ZSELPARAM+0xb2>
		{
			startA = center;
			amplStart = amplCenter;
    3324:	c8 2e       	mov	r12, r24
		SetZselParam(&tempParam,AREG);
		amplCenter = read_steady_adc(ADC_UPAS_OUT_PIN);

		if (((signed int)(NORMAL_LVL - amplCenter) ) *((signed int)(NORMAL_LVL - amplStart) ) > 0)
		{
			startA = center;
    3326:	bd 2c       	mov	r11, r13
		
		tempParam.A = center;
		SetZselParam(&tempParam,AREG);
		amplCenter = read_steady_adc(ADC_UPAS_OUT_PIN);

		if (((signed int)(NORMAL_LVL - amplCenter) ) *((signed int)(NORMAL_LVL - amplStart) ) > 0)
    3328:	da 2c       	mov	r13, r10
    332a:	ad 2c       	mov	r10, r13
    332c:	d8 cf       	rjmp	.-80     	; 0x32de <_Z13TuneZselAttenP9ZSELPARAM+0x66>
			stopA = center;
			amplStop = center;
			
		}
	}
	*param = tempParam;
    332e:	88 e0       	ldi	r24, 0x08	; 8
    3330:	fe 01       	movw	r30, r28
    3332:	31 96       	adiw	r30, 0x01	; 1
    3334:	d8 01       	movw	r26, r16
    3336:	01 90       	ld	r0, Z+
    3338:	0d 92       	st	X+, r0
    333a:	8a 95       	dec	r24
    333c:	e1 f7       	brne	.-8      	; 0x3336 <_Z13TuneZselAttenP9ZSELPARAM+0xbe>
	
}
    333e:	28 96       	adiw	r28, 0x08	; 8
    3340:	0f b6       	in	r0, 0x3f	; 63
    3342:	f8 94       	cli
    3344:	de bf       	out	0x3e, r29	; 62
    3346:	0f be       	out	0x3f, r0	; 63
    3348:	cd bf       	out	0x3d, r28	; 61
    334a:	df 91       	pop	r29
    334c:	cf 91       	pop	r28
    334e:	1f 91       	pop	r17
    3350:	0f 91       	pop	r16
    3352:	ff 90       	pop	r15
    3354:	ef 90       	pop	r14
    3356:	df 90       	pop	r13
    3358:	cf 90       	pop	r12
    335a:	bf 90       	pop	r11
    335c:	af 90       	pop	r10
    335e:	08 95       	ret

00003360 <__udivmodqi4>:
    3360:	99 1b       	sub	r25, r25
    3362:	79 e0       	ldi	r23, 0x09	; 9
    3364:	04 c0       	rjmp	.+8      	; 0x336e <__udivmodqi4_ep>

00003366 <__udivmodqi4_loop>:
    3366:	99 1f       	adc	r25, r25
    3368:	96 17       	cp	r25, r22
    336a:	08 f0       	brcs	.+2      	; 0x336e <__udivmodqi4_ep>
    336c:	96 1b       	sub	r25, r22

0000336e <__udivmodqi4_ep>:
    336e:	88 1f       	adc	r24, r24
    3370:	7a 95       	dec	r23
    3372:	c9 f7       	brne	.-14     	; 0x3366 <__udivmodqi4_loop>
    3374:	80 95       	com	r24
    3376:	08 95       	ret

00003378 <__udivmodhi4>:
    3378:	aa 1b       	sub	r26, r26
    337a:	bb 1b       	sub	r27, r27
    337c:	51 e1       	ldi	r21, 0x11	; 17
    337e:	07 c0       	rjmp	.+14     	; 0x338e <__udivmodhi4_ep>

00003380 <__udivmodhi4_loop>:
    3380:	aa 1f       	adc	r26, r26
    3382:	bb 1f       	adc	r27, r27
    3384:	a6 17       	cp	r26, r22
    3386:	b7 07       	cpc	r27, r23
    3388:	10 f0       	brcs	.+4      	; 0x338e <__udivmodhi4_ep>
    338a:	a6 1b       	sub	r26, r22
    338c:	b7 0b       	sbc	r27, r23

0000338e <__udivmodhi4_ep>:
    338e:	88 1f       	adc	r24, r24
    3390:	99 1f       	adc	r25, r25
    3392:	5a 95       	dec	r21
    3394:	a9 f7       	brne	.-22     	; 0x3380 <__udivmodhi4_loop>
    3396:	80 95       	com	r24
    3398:	90 95       	com	r25
    339a:	bc 01       	movw	r22, r24
    339c:	cd 01       	movw	r24, r26
    339e:	08 95       	ret

000033a0 <__divmodhi4>:
    33a0:	97 fb       	bst	r25, 7
    33a2:	07 2e       	mov	r0, r23
    33a4:	16 f4       	brtc	.+4      	; 0x33aa <__divmodhi4+0xa>
    33a6:	00 94       	com	r0
    33a8:	06 d0       	rcall	.+12     	; 0x33b6 <__divmodhi4_neg1>
    33aa:	77 fd       	sbrc	r23, 7
    33ac:	08 d0       	rcall	.+16     	; 0x33be <__divmodhi4_neg2>
    33ae:	e4 df       	rcall	.-56     	; 0x3378 <__udivmodhi4>
    33b0:	07 fc       	sbrc	r0, 7
    33b2:	05 d0       	rcall	.+10     	; 0x33be <__divmodhi4_neg2>
    33b4:	3e f4       	brtc	.+14     	; 0x33c4 <__divmodhi4_exit>

000033b6 <__divmodhi4_neg1>:
    33b6:	90 95       	com	r25
    33b8:	81 95       	neg	r24
    33ba:	9f 4f       	sbci	r25, 0xFF	; 255
    33bc:	08 95       	ret

000033be <__divmodhi4_neg2>:
    33be:	70 95       	com	r23
    33c0:	61 95       	neg	r22
    33c2:	7f 4f       	sbci	r23, 0xFF	; 255

000033c4 <__divmodhi4_exit>:
    33c4:	08 95       	ret

000033c6 <__tablejump_elpm__>:
    33c6:	07 90       	elpm	r0, Z+
    33c8:	f6 91       	elpm	r31, Z
    33ca:	e0 2d       	mov	r30, r0
    33cc:	09 94       	ijmp

000033ce <memchr_P>:
    33ce:	fc 01       	movw	r30, r24
    33d0:	41 50       	subi	r20, 0x01	; 1
    33d2:	50 40       	sbci	r21, 0x00	; 0
    33d4:	30 f0       	brcs	.+12     	; 0x33e2 <memchr_P+0x14>
    33d6:	05 90       	lpm	r0, Z+
    33d8:	06 16       	cp	r0, r22
    33da:	d1 f7       	brne	.-12     	; 0x33d0 <memchr_P+0x2>
    33dc:	31 97       	sbiw	r30, 0x01	; 1
    33de:	cf 01       	movw	r24, r30
    33e0:	08 95       	ret
    33e2:	88 27       	eor	r24, r24
    33e4:	99 27       	eor	r25, r25
    33e6:	08 95       	ret

000033e8 <memcmp>:
    33e8:	fb 01       	movw	r30, r22
    33ea:	dc 01       	movw	r26, r24
    33ec:	04 c0       	rjmp	.+8      	; 0x33f6 <memcmp+0xe>
    33ee:	8d 91       	ld	r24, X+
    33f0:	01 90       	ld	r0, Z+
    33f2:	80 19       	sub	r24, r0
    33f4:	21 f4       	brne	.+8      	; 0x33fe <memcmp+0x16>
    33f6:	41 50       	subi	r20, 0x01	; 1
    33f8:	50 40       	sbci	r21, 0x00	; 0
    33fa:	c8 f7       	brcc	.-14     	; 0x33ee <memcmp+0x6>
    33fc:	88 1b       	sub	r24, r24
    33fe:	99 0b       	sbc	r25, r25
    3400:	08 95       	ret

00003402 <memcpy>:
    3402:	fb 01       	movw	r30, r22
    3404:	dc 01       	movw	r26, r24
    3406:	02 c0       	rjmp	.+4      	; 0x340c <memcpy+0xa>
    3408:	01 90       	ld	r0, Z+
    340a:	0d 92       	st	X+, r0
    340c:	41 50       	subi	r20, 0x01	; 1
    340e:	50 40       	sbci	r21, 0x00	; 0
    3410:	d8 f7       	brcc	.-10     	; 0x3408 <memcpy+0x6>
    3412:	08 95       	ret

00003414 <strchr>:
    3414:	fc 01       	movw	r30, r24
    3416:	81 91       	ld	r24, Z+
    3418:	86 17       	cp	r24, r22
    341a:	21 f0       	breq	.+8      	; 0x3424 <strchr+0x10>
    341c:	88 23       	and	r24, r24
    341e:	d9 f7       	brne	.-10     	; 0x3416 <strchr+0x2>
    3420:	99 27       	eor	r25, r25
    3422:	08 95       	ret
    3424:	31 97       	sbiw	r30, 0x01	; 1
    3426:	cf 01       	movw	r24, r30
    3428:	08 95       	ret

0000342a <__eeupd_block_m128>:
    342a:	dc 01       	movw	r26, r24
    342c:	a4 0f       	add	r26, r20
    342e:	b5 1f       	adc	r27, r21
    3430:	41 50       	subi	r20, 0x01	; 1
    3432:	50 40       	sbci	r21, 0x00	; 0
    3434:	40 f0       	brcs	.+16     	; 0x3446 <__eeupd_block_m128+0x1c>
    3436:	cb 01       	movw	r24, r22
    3438:	84 0f       	add	r24, r20
    343a:	95 1f       	adc	r25, r21
    343c:	2e 91       	ld	r18, -X
    343e:	05 d0       	rcall	.+10     	; 0x344a <__eeupd_r18_m128>
    3440:	41 50       	subi	r20, 0x01	; 1
    3442:	50 40       	sbci	r21, 0x00	; 0
    3444:	d8 f7       	brcc	.-10     	; 0x343c <__eeupd_block_m128+0x12>
    3446:	08 95       	ret

00003448 <__eeupd_byte_m128>:
    3448:	26 2f       	mov	r18, r22

0000344a <__eeupd_r18_m128>:
    344a:	e1 99       	sbic	0x1c, 1	; 28
    344c:	fe cf       	rjmp	.-4      	; 0x344a <__eeupd_r18_m128>
    344e:	9f bb       	out	0x1f, r25	; 31
    3450:	8e bb       	out	0x1e, r24	; 30
    3452:	e0 9a       	sbi	0x1c, 0	; 28
    3454:	01 97       	sbiw	r24, 0x01	; 1
    3456:	0d b2       	in	r0, 0x1d	; 29
    3458:	02 16       	cp	r0, r18
    345a:	31 f0       	breq	.+12     	; 0x3468 <__eeupd_r18_m128+0x1e>
    345c:	2d bb       	out	0x1d, r18	; 29
    345e:	0f b6       	in	r0, 0x3f	; 63
    3460:	f8 94       	cli
    3462:	e2 9a       	sbi	0x1c, 2	; 28
    3464:	e1 9a       	sbi	0x1c, 1	; 28
    3466:	0f be       	out	0x3f, r0	; 63
    3468:	08 95       	ret

0000346a <_exit>:
    346a:	f8 94       	cli

0000346c <__stop_program>:
    346c:	ff cf       	rjmp	.-2      	; 0x346c <__stop_program>
